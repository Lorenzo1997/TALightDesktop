{"version":3,"file":"default-src_app_workers_python-compiler_worker_ts.js","mappings":"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","sources":["./src/app/workers/python-compiler.worker.ts","./node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["/// <reference lib=\"webworker\" />\n// Configs\n\n\nlet pyodideRoot = \"/\"\nlet pyodideMount = \"/mnt\"\n\n// Bootstrap pyodide\n\nimportScripts(\"https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js\");\n\n\n//\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide_py.tar\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.asm.js\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js.map\n//importScripts(\"./assets/pyodide.js\");\n\ndeclare var loadPyodide: any;\n\n//let worker: PyodideFsWorker;\nasync function main() {\n  let worker = new PyodideWorker(pyodideRoot, pyodideMount);\n}\n\n\n\n// Worker definition \n//TODO: import claees from pydiode-fsdriver\ntype PromiseResolver<T> = (value: T ) => void;\n\n\nexport interface FsNode {\n  name: string;\n  path: string;\n}\n\nexport interface FsNodeFolder extends FsNode {\n  folders: FsNodeFolder[];\n  files: FsNodeFile[];\n}\nexport interface FsNodeFile extends FsNode {\n  content: string|ArrayBuffer\n}\n\nexport enum PyodideState {\n  Unknown = 'Unknown',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Error = 'Error',\n}\n\nexport enum PyodideMessageType {\n  Ready = 'Ready',\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Exists = 'Exists',\n  Delete = 'Delete', \n}\n\nexport interface PyodideMessage {\n  uid: string;\n  type: PyodideMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface PyodideRequest {\n  uid: string;\n  timestamp: number;\n  message: PyodideMessage;\n}\n\nexport interface PyodideResponse {\n  uid: string;\n  timestamp: number;\n  success: boolean;\n  message: PyodideMessage;\n  errors: string[];\n}\n\nexport type FsMessageHandler = (message:PyodideRequest)=>PyodideResponse;\n\nclass PyodideWorker{\n  \n  requestQueueNotify = new Map<string,PyodideRequest>();\n  requestQueueState = new Map<string,PyodideRequest>();\n  requestQueueStdout = new Map<string,PyodideRequest>();\n  requestQueueStderr = new Map<string,PyodideRequest>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  pyodide: any;\n  fs: any;\n  loadPyodide: any;\n  micropip: any;\n  root:string;\n  mount:string;\n  isReady = false;\n  readyPromise: Promise<boolean>;\n  readyResolver: PromiseResolver<boolean>;\n  stdinPending=false;\n  stdinResolver?: PromiseResolver<string>;\n  isSync = false;\n  needSync = false;\n  stdinBuffer = new Array<string>();\n  lastState = PyodideState.Unknown\n  lastResult?:any\n  interruptBuffer = new Uint8Array(1);\n  interruptTimer:any\n  \n  constructor(root:string, mount:string ){\n    this.root = root;\n    this.mount = mount;\n\n    this.requestQueueStdout = new Map();\n    this.requestQueueStderr = new Map();\n    \n    //onReady\n    let readyResolver: PromiseResolver<boolean>;\n    this.readyPromise =  new Promise<boolean>((resolve, reject) => {\n      readyResolver = resolve;\n    })\n    this.readyResolver = (value)=>{ readyResolver(value) }\n\n    \n    addEventListener(\"message\", async ( payload:any ) => { this.onData(payload.data) })\n   \n    //Send Init event, but outside the constructor\n    setTimeout(()=>{this.sendState(PyodideState.Loading)})\n\n  \n    this.initPydiode().then(()=>{\n      this.load(this.root, this.mount);\n      this.fs.syncfs(true,()=>{\n        \n        this.interruptBuffer[0]=0\n        this.pyodide.setInterruptBuffer(this.interruptBuffer)\n        this.interruptTimer = setInterval(()=>{this.pyodide.checkInterrupt()},1000)\n        \n        this.isReady = true;\n        this.sendState(PyodideState.Ready)\n        this.readyResolver(this.isReady);\n        \n      });\n    }).catch( (error:any)=>{\n      this.sendState(PyodideState.Error, error)\n    });\n\n\n  }\n\n  async initPydiode(){\n    \n    console.log(\"loadPyodide: ...\")\n    \n    let options = {\n      stdin: ()=>{return this.onStdin()},\n      stdout: (msg:string)=>{this.sendStdout(msg)},\n      stderr: (msg:string)=>{this.sendStderr(msg)},\n    }\n\n    //console.log(loadPyodide)\n    this.pyodide = await loadPyodide(options);\n    this.fs = this.pyodide.FS;\n    await this.pyodide.loadPackage([\"micropip\"]);\n    this.micropip = this.pyodide.pyimport(\"micropip\");\n    \n    console.log(\"loadPyodide: done\")\n    //console.log(pyodide)\n\n    this.setCustomHooks()\n  }\n\n  async setCustomHooks(){\n    let oldInput = this.pyodide.globals.input;\n    console.log(\"setCustomHooks:oldInput:\",oldInput)\n\n    let localThis = this;\n    this.pyodide.globals.set('input', async function (prompt?:string) {\n      if (prompt && prompt.trim().length>0){localThis.sendStdout(prompt)}\n\n      localThis.sendState(PyodideState.Stdin)\n      console.log(\"setCustomHooks:scrivo sulla consolle!!!!\")\n      let stdinResolver: PromiseResolver<string>;      \n      let promise =  new Promise<string>((resolve, reject) => {\n        stdinResolver = resolve;\n      })\n      localThis.stdinResolver = (message:string)=>{ stdinResolver(message) }\n\n      if(localThis.stdinBuffer.length>0){\n        let line = localThis.stdinBuffer.shift()\n        localThis.stdinResolver(line!)\n      }\n\n      return promise;\n    });\n  }\n\n  async load(root:string, mount:string)\n  {\n    this.root = root;\n    this.mount = mount;\n    console.log(\"PyodideFsWorker: load\")\n    this.fs.mkdir(this.mount);\n    this.fs.mount(this.fs.filesystems.IDBFS, { root: root }, this.mount);\n    console.log(\"PyodideFsWorker: load: done\")\n\n    \n    console.log(this.fs.mounts)\n    console.log(this.fs.root)\n    console.log(this.fs.root.mount)\n  }\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n  \n  responseFromRequest(request:PyodideRequest, success:boolean=true, errors:string[]=[]):PyodideResponse{\n    let response:PyodideResponse = {\n      uid: request.uid,\n      timestamp: Date.now(),\n      success: success,\n      errors: errors,\n      message: {\n        uid: request.message.uid,\n        type: request.message.type,\n        args:[],\n        contents:[]\n      }\n    };\n    return response\n  }\n\n  responseError(response:PyodideResponse, error?:string):PyodideResponse{\n    response.success = false;\n    if (error){response.errors.push(error)};\n    return response;\n  }\n\n  syncFS(){\n    if (!this.isSync){\n      this.isSync = true\n      this.needSync = false;\n      console.log('syncFS: do!');\n      this.fs.syncfs((err?:any)=>{\n        if(err){\n          console.log('syncFS: error while syncing, retrying')\n          this.needSync = true;\n        }\n        this.isSync = false;\n        if (this.needSync){\n          this.needSync = false;\n          console.log('syncFS: repeat!');\n          this.syncFS()\n        }\n      })\n    }\n    else{\n      console.log('syncFS: queued');\n      this.needSync = true;\n    }\n  }\n\n  onStdin(){\n    //TOD: unused??\n    // localThis.sendState(PyodideState.Stdin)\n    console.log('PyodideWorker:onStdin:');   \n    if (this.stdinBuffer.length > 0){}\n    let item = this.stdinBuffer.shift()\n    console.log('PyodideWorker:onStdin:', item);\n    return item\n  }\n\n  execCodeAsync(code:string){\n    console.log(\"execCode:\",code)\n    this.interruptBuffer[0] = 0;\n    this.stdinBuffer = []\n\n    this.pyodide.runPythonAsync(code).then( (result:any)=>{\n      console.log(\"execCode: result:\\n\",result)\n      this.sendState(PyodideState.Success, result)\n    }).catch( (error:any)=>{\n      console.log(\"execCode: error:\\n\", error)\n      this.sendState(PyodideState.Error, error)\n    })\n  }\n\n  sendNotify(title: string, msg:string, kind:string=\"\"){\n    console.log(\"sendNotify: \",msg)\n    this.requestQueueNotify.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [title, msg, kind]\n      console.log(\"sendNotify:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendState(state?: PyodideState, content?:any){\n    if(!state){ state = this.lastState } //Resend the same state, used onSubscribe\n    else { this.lastState = state }\n    \n    console.log(\"sendState: \",state)\n    this.requestQueueState.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [state ?? PyodideState.Unknown]\n      if(content){\n        response.message.contents.push(content)\n      }\n      console.log(\"sendState:uid:\\n\",response)\n      postMessage(response)\n    })\n  }\n\n  sendStdout(msg:string){\n    console.log(\"sendStdout: \"+msg)\n    this.requestQueueStdout.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStdout:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStderr(msg:string){\n    console.log(\"sendStderr: \"+msg)\n    this.requestQueueStderr.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStderr:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  onData(request:PyodideRequest) {\n    console.log('PyodideFsWorker:onData:',request);\n    let action: FsMessageHandler | null = null;\n\n    switch (request.message.type) {\n      case PyodideMessageType.Ready:\n        this.ready(request);\n        break;\n      case PyodideMessageType.SubscribeNotify:\n        action=(request)=>{return this.subscribeNotify(request)};\n        break;\n      case PyodideMessageType.SubscribeState:\n        action=(request)=>{return this.subscribeState(request)};\n        break;\n      case PyodideMessageType.SubscribeStdout:\n        action=(request)=>{return this.subscribeStdout(request)};\n        break;\n      case PyodideMessageType.SubscribeStderr:\n        action=(request)=>{return this.subscribeStderr(request)};\n        break;\n      case PyodideMessageType.SendStdin:\n        action=(request)=>{return this.sendStdin(request)};\n        break;\n      case PyodideMessageType.InstallPackages:\n        action=(request)=>{return this.installPackages(request)};\n        break;\n      case PyodideMessageType.ExecuteCode:\n        action=(request)=>{return this.executeCode(request)};\n        break;\n      case PyodideMessageType.ExecuteFile:\n        action=(request)=>{return this.executeFile(request)};\n        break;\n      case PyodideMessageType.StopExecution:\n        action=(request)=>{return this.stopExecution(request)};\n        break;\n      case PyodideMessageType.CreateDirectory:\n        action=(request)=>{return this.createDirectory(request)};\n        break;\n      case PyodideMessageType.ReadDirectory:\n        action=(request)=>{return this.readDirectory(request)};\n        break;\n      case PyodideMessageType.WriteFile:\n        action=(request)=>{return this.writeFile(request)};\n        break;\n      case PyodideMessageType.ReadFile:\n        action=(request)=>{return this.readFile(request)};\n        break;\n      case PyodideMessageType.ScanDirectory:\n        action=(request)=>{return this.scanDirectory(request)};\n        break;\n      case PyodideMessageType.Delete:\n        action=(request)=>{return this.delete(request)};\n        break;\n      case PyodideMessageType.Exists:\n        action=(request)=>{return this.exists(request)};\n        break;\n      default: break;\n    }\n    if(action){ \n      let response = action(request);\n      if (response){ postMessage(response) }\n    }\n  }\n\n  ready(request:PyodideRequest){\n    let response = this.responseFromRequest(request);\n    response.message.args = ['true'];\n    if (this.isReady) {\n      postMessage(response);\n    }else{\n      this.readyPromise.then((ready)=>{\n        response.message.args = [ready?'true':'false'];\n        postMessage(response);\n      })\n    }\n  }\n\n  installPackages(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let packages = request.message.args;\n    console.log(\"installPackages:\\n\",packages)//,res)\n    let res = this.micropip.install(packages)\n    this.syncFS()\n    console.log(\"installPackages: DONE!\\n\",res)\n    response.message.contents.push(\"\")//res+\": \"+res)\n    \n    return response;\n  }\n\n  executeCode(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let rawContent = request.message.contents[0];\n    let code;\n    if(rawContent instanceof ArrayBuffer){\n      code = new TextDecoder().decode(rawContent);\n    }else{\n      code = rawContent\n    }\n    console.log(\"executeCode:\\n\",code)//,res)\n    this.execCodeAsync(code)\n\n\n    response.message.contents = [\"true\"]\n    \n    return response;\n  }\n\n  stopExecution(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let wasRunning = this.lastState == PyodideState.Run || this.lastState == PyodideState.Stdin\n    \n    let arg = request.message.args[0] ?? \"2\"\n    let signal = parseInt(arg); // 2 stands for SIGINT.\n    if(isNaN(signal)){signal = 2}\n    \n    this.interruptBuffer[0] = signal;\n\n    response.message.contents = [wasRunning?\"true\":\"false\"]\n    return response\n  }\n\n  executeFile(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let fullpath = request.message.args[0];\n    let path = this.mount +\"/\"+ fullpath\n    console.log(\"executeFile:\",path)//,res)\n    \n    let rawContent = this.fs.readFile(path) as Uint8Array\n    let code = new TextDecoder().decode(rawContent.buffer);\n\n    this.stdinBuffer = []\n    this.execCodeAsync(code)\n\n    response.message.contents = [\"true\"]\n    return response\n  }\n\n  subscribeNotify(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueNotify.set(request.uid, request)\n    } else{\n      this.requestQueueNotify.delete(request.uid)\n    }\n    console.log(\"subscribeNotify:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeState(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueState.set(request.uid, request)\n      setTimeout(()=>{this.sendState(PyodideState.Loading)})\n    } else {\n      this.requestQueueState.delete(request.uid)\n    }\n    console.log(\"subscribeState:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStdout(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeStdout:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStderr(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStderr.set(request.uid, request)\n    } else{\n      this.requestQueueStderr.delete(request.uid)\n    }\n    console.log(\"subscribeStderr:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  sendStdin(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let data = request.message.contents[0];\n    console.log(\"PyodideWorker:sendStdin:\\n\",data)\n    this.sendState(PyodideState.Run)\n    if (this.stdinResolver){\n      this.stdinResolver(this.toString(data))\n      this.stdinResolver=undefined\n    }else{\n      this.stdinBuffer.push(this.toString(data))\n    }\n    response.message.args = ['true']\n    \n    return response;\n  }\n\n  createDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    //TODO: allow for multiple queries;\n    let fullpath = request.message.args[0];\n    if(!this.internal_exists(this.mount + fullpath)){\n      let res = this.fs.mkdir(this.mount + fullpath);\n      console.log('pydiode:mkdir:',res)\n      this.syncFS()\n    }\n    response.message.args = [fullpath];\n    return response;\n  }\n\n  getPath(node:any){\n    //any: https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.getPath\n    let path = this.fs.getPath(node)\n    let pattern =  new RegExp(\"^\"+this.mount); \n    return path.replace(pattern,\"/\").replace(/\\/\\/+/,\"/\");\n  }\n\n  readDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    let curDir = this.scanDirectory_recursive(fullpath)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n\n  scanDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    console.log(\"scanDirectory: \", fullpath)\n    let curDir = this.scanDirectory_recursive(fullpath, true)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  jsonReplacer(key:any,value:any){\n    if (value instanceof ArrayBuffer){\n      let buffer = new Uint8Array(value)\n      return {\n        constructor: value.constructor.name,\n        data: Array.from(buffer),\n        flags: []\n      }\n    }\n    return value\n  }\n\n\n  scanDirectory_recursive(fullpath:string, recursive=false):FsNodeFolder{\n    let res = this.fs.lookupPath(this.mount + fullpath);\n    console.log(\"scanDirectory_recursive: \", res)\n    console.log(\"scanDirectory_recursive:contents: \", res.node.contents);\n    let curDir:FsNodeFolder = {\n      folders: [],\n      files: [],\n      name: res.node.name,\n      path: this.getPath(res.node)\n    };\n\n    for(let name in res.node.contents){\n      let item = res.node.contents[name];\n      let path = this.getPath(item);\n      if (this.fs.isDir(item.mode)){\n        let childDir;\n        if (recursive){\n          childDir = this.scanDirectory_recursive(path, true);\n        }\n        else{\n          childDir = {\n            folders: [],\n            files: [],\n            name: name,\n            path: path\n          }\n        }\n        curDir.folders.push(childDir);\n      }else{\n        let content = this.fs.readFile(this.mount + path)\n        curDir.files.push({\n          name: name,\n          path: path,\n          content: content.buffer\n        })\n      }\n    }\n\n    return curDir;\n  }\n\n  writeFile(request:PyodideRequest):PyodideResponse{\n    \n    let response = this.responseFromRequest(request);\n    let nargs = request.message.args.length;\n    let ncont = request.message.contents.length\n    if ( nargs < 1 || nargs < ncont ){ \n      return this.responseError(response,\"writeFile: Requires at least 1 path as argument and 1 content\");\n    }\n    \n    let fullpath = request.message.args[0];\n    let data = request.message.contents[0];\n    let content;\n    let options = {encoding: \"binary\"}\n    if (data instanceof ArrayBuffer){\n      content = new Uint8Array(data)\n      options.encoding = \"utf8\"\n    }else{\n      content = data\n    }\n\n    console.log(\"writeFile: \", fullpath)\n    console.log(\"writeFile:content: \", content)\n    let res = this.fs.writeFile(this.mount + fullpath, content, options);\n    console.log(\"writeFile:res: \", res)\n    this.syncFS()\n    return response;\n  }\n\n  readFile(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request);\n    if ( request.message.args.length < 1){ \n      return this.responseError(response,\"readFile: Requires at least 1 path as argument\");\n    }\n     \n    let fullpath = request.message.args[0];\n\n    let opts:{} = { encoding: 'utf8' }\n    if (request.message.args.length == 2 && request.message.args[1] == 'binary' ){\n      opts = {encoding: 'binary'} \n    }\n\n    console.log(\"readFile: \", fullpath)\n    let content = this.fs.readFile(this.mount + fullpath, opts);\n    console.log('readFile:content:\\n', content.length)\n    if(content instanceof Uint8Array){\n      console.log('readFile:content: BUFFER',content)\n      response.message.contents = [content.buffer];\n    }\n    else{\n      console.log('readFile:content: STRING')\n      response.message.contents = [content];\n    }\n    return response;\n  }\n\n  delete(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n\n    \n    let fullpath = request.message.args[0];\n    console.log(\"delete: \", fullpath)\n    //TODO: use lookupPath and isDir/isFile\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.lookupPath\n    //TODO: do it recursive\n    try{this.fs.rmdir(this.mount + fullpath)}catch(_){}\n    try{this.fs.unlink(this.mount + fullpath)}catch(_){}\n    this.syncFS()\n    response.message.args = [\"true\"]\n    return response;\n  }\n\n  exists(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n    let fullpath = request.message.args[0];\n    console.log(\"exists: \", this.mount + fullpath)\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.analyzePath\n    let exists = this.internal_exists(this.mount + fullpath)\n    console.log(\"exists:\", exists)\n    response.message.args = [exists?'true':'false']\n    return response;\n  }\n\n  internal_exists(path:string){\n    let res = this.fs.analyzePath(path)\n    console.log(\"internal_file_exists:analyzePath\", res)\n    return res[\"exists\"]\n  }\n}\n  \n\n\n\n\nmain()\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["pyodideRoot","pyodideMount","importScripts","main","worker","PyodideWorker","PyodideState","PyodideMessageType","constructor","root","mount","Map","TextEncoder","TextDecoder","Array","Unknown","Uint8Array","requestQueueStdout","requestQueueStderr","readyResolver","readyPromise","Promise","resolve","reject","value","addEventListener","payload","onData","data","setTimeout","sendState","Loading","initPydiode","then","load","fs","syncfs","interruptBuffer","pyodide","setInterruptBuffer","interruptTimer","setInterval","checkInterrupt","isReady","Ready","catch","error","Error","console","log","options","stdin","onStdin","stdout","msg","sendStdout","stderr","sendStderr","loadPyodide","FS","loadPackage","micropip","pyimport","setCustomHooks","oldInput","globals","input","localThis","set","prompt","trim","length","Stdin","stdinResolver","promise","message","stdinBuffer","line","shift","mkdir","filesystems","IDBFS","mounts","toString","ArrayBuffer","binDecoder","decode","toArrayBuffer","binEncoder","encode","responseFromRequest","request","success","errors","response","uid","timestamp","Date","now","type","args","contents","responseError","push","syncFS","isSync","needSync","err","item","execCodeAsync","code","runPythonAsync","result","Success","sendNotify","title","kind","requestQueueNotify","forEach","postMessage","state","content","lastState","requestQueueState","action","ready","SubscribeNotify","subscribeNotify","SubscribeState","subscribeState","SubscribeStdout","subscribeStdout","SubscribeStderr","subscribeStderr","SendStdin","sendStdin","InstallPackages","installPackages","ExecuteCode","executeCode","ExecuteFile","executeFile","StopExecution","stopExecution","CreateDirectory","createDirectory","ReadDirectory","readDirectory","WriteFile","writeFile","ReadFile","readFile","ScanDirectory","scanDirectory","Delete","delete","Exists","exists","packages","res","install","rawContent","wasRunning","Run","arg","signal","parseInt","isNaN","fullpath","path","buffer","enable","undefined","internal_exists","getPath","node","pattern","RegExp","replace","curDir","scanDirectory_recursive","JSON","stringify","jsonReplacer","key","name","from","flags","recursive","lookupPath","folders","files","isDir","mode","childDir","nargs","ncont","encoding","opts","rmdir","_","unlink","analyzePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[1]}