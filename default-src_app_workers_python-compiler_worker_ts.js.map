{"version":3,"file":"default-src_app_workers_python-compiler_worker_ts.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AAGA,IAAIA,WAAW,GAAG,GAAG;AACrB,IAAIC,YAAY,GAAG,MAAM;AAEzB;AAEAC,aAAa,CAAC,0DAA0D,CAAC;AAYzE;AAAA,SACeC,IAAI;EAAA;AAAA;AAAA;EAAA,4MAAnB,aAAmB;IACjB,IAAIC,MAAM,GAAG,IAAIC,aAAa,CAACL,WAAW,EAAEC,YAAY,CAAC;EAC3D,CAAC;EAAA;AAAA;AAsBM,IAAKK,YAOX;AAPD,WAAYA,YAAY;EACtBA,6BAAa;EACbA,+BAAe;EACfA,2BAAW;EACXA,+BAAe;EACfA,mCAAmB;EACnBA,+BAAe;AACjB,CAAC,EAPWA,YAAY,KAAZA,YAAY;AASjB,IAAKC,kBAiBX;AAjBD,WAAYA,kBAAkB;EAC5BA,qCAAe;EACfA,yDAAmC;EACnCA,iDAA2B;EAC3BA,iDAA2B;EAC3BA,yDAAmC;EACnCA,uDAAiC;EACjCA,yDAAmC;EACnCA,yDAAmC;EACnCA,6CAAuB;EACvBA,yDAAmC;EACnCA,6CAAuB;EACvBA,2CAAqB;EACrBA,qDAA+B;EAC/BA,qDAA+B;EAC/BA,uCAAiB;EACjBA,uCAAiB;AACnB,CAAC,EAjBWA,kBAAkB,KAAlBA,kBAAkB;AA0C9B,MAAMF,aAAa;EAyBjBG,YAAYC,IAAW,EAAEC,KAAY;IAAA;IAvBrC,uBAAkB,GAAG,IAAIC,GAAG,EAAyB;IACrD,sBAAiB,GAAG,IAAIA,GAAG,EAAyB;IACpD,uBAAkB,GAAG,IAAIA,GAAG,EAAyB;IACrD,uBAAkB,GAAG,IAAIA,GAAG,EAAyB;IAE9C,eAAU,GAAG,IAAIC,WAAW,EAAE,CAAC,CAAC;IAChC,eAAU,GAAG,IAAIC,WAAW,CAAC,OAAO,CAAC;IAQ5C,YAAO,GAAG,KAAK;IAGf,iBAAY,GAAC,KAAK;IAElB,WAAM,GAAG,KAAK;IACd,aAAQ,GAAG,KAAK;IAChB,gBAAW,GAAG,IAAIC,KAAK,EAAU;IAG/B,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACK,kBAAkB,GAAG,IAAIJ,GAAG,EAAE;IACnC,IAAI,CAACK,kBAAkB,GAAG,IAAIL,GAAG,EAAE;IAEnC;IACA,IAAIM,aAAuC;IAC3C,IAAI,CAACC,YAAY,GAAI,IAAIC,OAAO,CAAU,CAACC,OAAO,EAAEC,MAAM,KAAI;MAC5DJ,aAAa,GAAGG,OAAO;IACzB,CAAC,CAAC;IACF,IAAI,CAACH,aAAa,GAAIK,KAAK,IAAG;MAAEL,aAAa,CAACK,KAAK,CAAC;IAAC,CAAC;IAGtDC,gBAAgB,CAAC,SAAS;MAAA,+MAAE,WAAQC,OAAW,EAAK;QAAG,KAAI,CAACC,MAAM,CAACD,OAAO,CAACE,IAAI,CAAC;MAAC,CAAC;MAAA;QAAA;MAAA;IAAA,IAAC;IAInF,IAAI,CAACC,WAAW,EAAE,CAACC,IAAI,CAAC,MAAI;MAC1B,IAAI,CAACC,IAAI,CAAC,IAAI,CAACpB,IAAI,EAAE,IAAI,CAACC,KAAK,CAAC;MAChC,IAAI,CAACoB,EAAE,CAACC,MAAM,CAAC,IAAI,EAAC,MAAI;QACtB,IAAI,CAACC,OAAO,GAAG,IAAI;QACnB,IAAI,CAACC,SAAS,CAAC3B,YAAY,CAAC4B,KAAK,CAAC;QAClC,IAAI,CAACjB,aAAa,CAAC,IAAI,CAACe,OAAO,CAAC;MAClC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;EAEML,WAAW;IAAA;IAAA;MAEfQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAE/B,IAAIC,OAAO,GAAG;QACZC,KAAK,EAAE,MAAI;UAAC,OAAO,MAAI,CAACC,OAAO,EAAE;QAAA,CAAC;QAClCC,MAAM,EAAGC,GAAU,IAAG;UAAC,MAAI,CAACC,UAAU,CAACD,GAAG,CAAC;QAAA,CAAC;QAC5CE,MAAM,EAAGF,GAAU,IAAG;UAAC,MAAI,CAACG,UAAU,CAACH,GAAG,CAAC;QAAA;OAC5C;MAED;MACA,MAAI,CAACI,OAAO,SAASC,WAAW,CAACT,OAAO,CAAC;MACzC,MAAI,CAACP,EAAE,GAAG,MAAI,CAACe,OAAO,CAACE,EAAE;MACzB,MAAM,MAAI,CAACF,OAAO,CAACG,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC;MAC5C,MAAI,CAACC,QAAQ,GAAG,MAAI,CAACJ,OAAO,CAACK,QAAQ,CAAC,UAAU,CAAC;MAEjDf,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC;MAEA,MAAI,CAACe,cAAc,EAAE;IAAA;EACvB;EAEMA,cAAc;IAAA;IAAA;MAClB,IAAIC,QAAQ,GAAG,MAAI,CAACP,OAAO,CAACQ,OAAO,CAACC,KAAK;MACzCnB,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACgB,QAAQ,CAAC;MAEhD,IAAIG,SAAS,GAAG,MAAI;MACpB,MAAI,CAACV,OAAO,CAACQ,OAAO,CAACG,GAAG,CAAC,OAAO;QAAA,gNAAE,WAAgBC,MAAc;UAC9D,IAAIA,MAAM,IAAIA,MAAM,CAACC,IAAI,EAAE,CAACC,MAAM,GAAC,CAAC,EAAC;YAACJ,SAAS,CAACb,UAAU,CAACe,MAAM,CAAC;;UAClEtB,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;UACvD,IAAIwB,aAAsC;UAC1C,IAAIC,OAAO,GAAI,IAAI1C,OAAO,CAAS,CAACC,OAAO,EAAEC,MAAM,KAAI;YACrDuC,aAAa,GAAGxC,OAAO;UACzB,CAAC,CAAC;UACFmC,SAAS,CAACK,aAAa,GAAIE,OAAc,IAAG;YAAEF,aAAa,CAACE,OAAO,CAAC;UAAC,CAAC;UAEtE,IAAGP,SAAS,CAACQ,WAAW,CAACJ,MAAM,GAAC,CAAC,EAAC;YAChC,IAAIK,IAAI,GAAGT,SAAS,CAACQ,WAAW,CAACE,KAAK,EAAE;YACxCV,SAAS,CAACK,aAAa,CAACI,IAAK,CAAC;;UAGhC,OAAOH,OAAO;QAChB,CAAC;QAAA;UAAA;QAAA;MAAA,IAAC;IAAC;EACL;EAEMhC,IAAI,CAACpB,IAAW,EAAEC,KAAY;IAAA;IAAA;MAElC,MAAI,CAACD,IAAI,GAAGA,IAAI;MAChB,MAAI,CAACC,KAAK,GAAGA,KAAK;MAClByB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC,MAAI,CAACN,EAAE,CAACoC,KAAK,CAAC,MAAI,CAACxD,KAAK,CAAC;MACzB,MAAI,CAACoB,EAAE,CAACpB,KAAK,CAAC,MAAI,CAACoB,EAAE,CAACqC,WAAW,CAACC,KAAK,EAAE;QAAE3D,IAAI,EAAEA;MAAI,CAAE,EAAE,MAAI,CAACC,KAAK,CAAC;MACpEyB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAG1CD,OAAO,CAACC,GAAG,CAAC,MAAI,CAACN,EAAE,CAACuC,MAAM,CAAC;MAC3BlC,OAAO,CAACC,GAAG,CAAC,MAAI,CAACN,EAAE,CAACrB,IAAI,CAAC;MACzB0B,OAAO,CAACC,GAAG,CAAC,MAAI,CAACN,EAAE,CAACrB,IAAI,CAACC,KAAK,CAAC;IAAA;EACjC;EAEA4D,QAAQ,CAAC5C,IAAuB;IAC9B,IAAGA,IAAI,YAAY6C,WAAW,EAAE;MAAE,OAAO,IAAI,CAACC,UAAU,CAACC,MAAM,CAAC/C,IAAI,CAAC;;IACrE,OAAOA,IAAI;EACb;EAEAgD,aAAa,CAAChD,IAAuB;IACnC,IAAGA,IAAI,YAAY6C,WAAW,EAAE;MAAE,OAAO7C,IAAI;;IAC7C,OAAO,IAAI,CAACiD,UAAU,CAACC,MAAM,CAAClD,IAAI,CAAC;EACrC;EAGAmD,mBAAmB,CAACC,OAAsB,EAAEC,UAAgB,IAAI,EAAEC,SAAgB,EAAE;IAClF,IAAIC,QAAQ,GAAmB;MAC7BC,GAAG,EAAEJ,OAAO,CAACI,GAAG;MAChBC,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;MACrBN,OAAO,EAAEA,OAAO;MAChBC,MAAM,EAAEA,MAAM;MACdlB,OAAO,EAAE;QACPoB,GAAG,EAAEJ,OAAO,CAAChB,OAAO,CAACoB,GAAG;QACxBI,IAAI,EAAER,OAAO,CAAChB,OAAO,CAACwB,IAAI;QAC1BC,IAAI,EAAC,EAAE;QACPC,QAAQ,EAAC;;KAEZ;IACD,OAAOP,QAAQ;EACjB;EAEAQ,aAAa,CAACR,QAAwB,EAAES,KAAa;IACnDT,QAAQ,CAACF,OAAO,GAAG,KAAK;IACxB,IAAIW,KAAK,EAAC;MAACT,QAAQ,CAACD,MAAM,CAACW,IAAI,CAACD,KAAK,CAAC;;IAAC;IACvC,OAAOT,QAAQ;EACjB;EAEAW,MAAM;IACJ,IAAI,CAAC,IAAI,CAACC,MAAM,EAAC;MACf,IAAI,CAACA,MAAM,GAAG,IAAI;MAClB,IAAI,CAACC,QAAQ,GAAG,KAAK;MACrB3D,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;MAC1B,IAAI,CAACN,EAAE,CAACC,MAAM,CAAEgE,GAAQ,IAAG;QACzB,IAAGA,GAAG,EAAC;UACL5D,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;UACpD,IAAI,CAAC0D,QAAQ,GAAG,IAAI;;QAEtB,IAAI,CAACD,MAAM,GAAG,KAAK;QACnB,IAAI,IAAI,CAACC,QAAQ,EAAC;UAChB,IAAI,CAACA,QAAQ,GAAG,KAAK;UACrB3D,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9B,IAAI,CAACwD,MAAM,EAAE;;MAEjB,CAAC,CAAC;KACH,MACG;MACFzD,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7B,IAAI,CAAC0D,QAAQ,GAAG,IAAI;;EAExB;EAEAvD,OAAO;IACL;IACAJ,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,IAAI,IAAI,CAAC2B,WAAW,CAACJ,MAAM,GAAG,CAAC,EAAC;IAChC,IAAIqC,IAAI,GAAG,IAAI,CAACjC,WAAW,CAACE,KAAK,EAAE;IACnC9B,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE4D,IAAI,CAAC;IAC3C,OAAOA,IAAI;EACb;EAEAC,QAAQ,CAACC,IAAW;IAClB/D,OAAO,CAACC,GAAG,CAAC,WAAW,EAAC8D,IAAI,CAAC;IAC7B,IAAI,CAACnC,WAAW,GAAG,EAAE;IAErB,IAAG;MACD,IAAI,CAAClB,OAAO,CAACsD,cAAc,CAACD,IAAI,CAAC,CAACtE,IAAI,CAAGwE,MAAU,IAAG;QACpDjE,OAAO,CAACC,GAAG,CAACgE,MAAM,CAAC;QACnB,IAAI,CAACnE,SAAS,CAAC3B,YAAY,CAAC+F,OAAO,EAAED,MAAM,CAAC;QAC5CjE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAACgE,MAAM,CAAC;MAC3C,CAAC,CAAC;KACH,QAAMV,KAAS,EAAC;MACf,IAAI,CAACzD,SAAS,CAAC3B,YAAY,CAACgG,KAAK,EAACZ,KAAK,CAAC;;EAI5C;EAEAa,UAAU,CAACC,KAAa,EAAE/D,GAAU,EAAEgE,OAAY,EAAE;IAClDtE,OAAO,CAACC,GAAG,CAAC,UAAU,EAACK,GAAG,CAAC;IAC3B,IAAI,CAACiE,kBAAkB,CAACC,OAAO,CAAC,CAAE7B,OAAsB,EAAEI,GAAU,KAAI;MACtE,IAAID,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;MAChDG,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACiB,KAAK,EAAE/D,GAAG,EAAEgE,IAAI,CAAC;MAC1CtE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC6C,QAAQ,CAAC;MACrC2B,WAAW,CAAC3B,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAEAhD,SAAS,CAAC4E,KAAmB,EAAEC,OAAY;IACzC3E,OAAO,CAACC,GAAG,CAAC,SAAS,EAACyE,KAAK,CAAC;IAC5B,IAAI,CAACE,iBAAiB,CAACJ,OAAO,CAAC,CAAE7B,OAAsB,EAAEI,GAAU,KAAI;MACrE,IAAID,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;MAChDG,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACsB,KAAK,CAAC;MAC/B,IAAGC,OAAO,EAAC;QACT7B,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,CAACG,IAAI,CAACqB,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;;MAEzD3E,OAAO,CAACC,GAAG,CAAC,cAAc,EAAC6C,QAAQ,CAAC;MACpC2B,WAAW,CAAC3B,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAEAvC,UAAU,CAACD,GAAU;IACnBN,OAAO,CAACC,GAAG,CAAC,UAAU,GAACK,GAAG,CAAC;IAC3B,IAAI,CAAC1B,kBAAkB,CAAC4F,OAAO,CAAC,CAAE7B,OAAsB,EAAEI,GAAU,KAAI;MACtE,IAAID,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;MAChDG,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAAC/C,GAAG,CAAC;MACjCN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC6C,QAAQ,CAAC;MACrC2B,WAAW,CAAC3B,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAEArC,UAAU,CAACH,GAAU;IACnBN,OAAO,CAACC,GAAG,CAAC,UAAU,GAACK,GAAG,CAAC;IAC3B,IAAI,CAACzB,kBAAkB,CAAC2F,OAAO,CAAC,CAAE7B,OAAsB,EAAEI,GAAU,KAAI;MACtE,IAAID,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;MAChDG,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAAC/C,GAAG,CAAC;MACjCN,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC6C,QAAQ,CAAC;MACrC2B,WAAW,CAAC3B,QAAQ,CAAC;IACvB,CAAC,CAAC;EACJ;EAEAxD,MAAM,CAACqD,OAAsB;IAC3B3C,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAC0C,OAAO,CAAC;IAC9C,IAAIoC,MAAM,GAA4B,IAAI;IAE1C,QAAQpC,OAAO,CAAChB,OAAO,CAACwB,IAAI;MAC1B,KAAK/E,kBAAkB,CAAC2B,KAAK;QAC3B,IAAI,CAACiF,KAAK,CAACrC,OAAO,CAAC;QACnB;MACF,KAAKvE,kBAAkB,CAAC6G,eAAe;QACrCF,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACuC,eAAe,CAACvC,OAAO,CAAC;QAAA,CAAC;QACxD;MACF,KAAKvE,kBAAkB,CAAC+G,cAAc;QACpCJ,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACyC,cAAc,CAACzC,OAAO,CAAC;QAAA,CAAC;QACvD;MACF,KAAKvE,kBAAkB,CAACiH,eAAe;QACrCN,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC2C,eAAe,CAAC3C,OAAO,CAAC;QAAA,CAAC;QACxD;MACF,KAAKvE,kBAAkB,CAACmH,eAAe;QACrCR,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC6C,eAAe,CAAC7C,OAAO,CAAC;QAAA,CAAC;QACxD;MAEF,KAAKvE,kBAAkB,CAACqH,SAAS;QAC/BV,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC+C,SAAS,CAAC/C,OAAO,CAAC;QAAA,CAAC;QAClD;MACF,KAAKvE,kBAAkB,CAACuH,eAAe;QACrCZ,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACiD,eAAe,CAACjD,OAAO,CAAC;QAAA,CAAC;QACxD;MACF,KAAKvE,kBAAkB,CAACyH,WAAW;QACjCd,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACmD,WAAW,CAACnD,OAAO,CAAC;QAAA,CAAC;QACpD;MACF,KAAKvE,kBAAkB,CAAC2H,WAAW;QACjChB,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACqD,WAAW,CAACrD,OAAO,CAAC;QAAA,CAAC;QACpD;MACF,KAAKvE,kBAAkB,CAAC6H,eAAe;QACrClB,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACuD,eAAe,CAACvD,OAAO,CAAC;QAAA,CAAC;QACxD;MACF,KAAKvE,kBAAkB,CAAC+H,aAAa;QACnCpB,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACyD,aAAa,CAACzD,OAAO,CAAC;QAAA,CAAC;QACtD;MACF,KAAKvE,kBAAkB,CAACiI,SAAS;QAC/BtB,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC2D,SAAS,CAAC3D,OAAO,CAAC;QAAA,CAAC;QAClD;MACF,KAAKvE,kBAAkB,CAACmI,QAAQ;QAC9BxB,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC6D,QAAQ,CAAC7D,OAAO,CAAC;QAAA,CAAC;QACjD;MACF,KAAKvE,kBAAkB,CAACqI,aAAa;QACnC1B,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAAC+D,aAAa,CAAC/D,OAAO,CAAC;QAAA,CAAC;QACtD;MACF,KAAKvE,kBAAkB,CAACuI,MAAM;QAC5B5B,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACiE,MAAM,CAACjE,OAAO,CAAC;QAAA,CAAC;QAC/C;MACF,KAAKvE,kBAAkB,CAACyI,MAAM;QAC5B9B,MAAM,GAAEpC,OAAO,IAAG;UAAC,OAAO,IAAI,CAACmE,MAAM,CAACnE,OAAO,CAAC;QAAA,CAAC;QAC/C;MACF;QAAS;IAAM;IAEjB,IAAGoC,MAAM,EAAC;MACR,IAAIjC,QAAQ,GAAGiC,MAAM,CAACpC,OAAO,CAAC;MAC9B,IAAIG,QAAQ,EAAC;QAAE2B,WAAW,CAAC3B,QAAQ,CAAC;;;EAExC;EAEAkC,KAAK,CAACrC,OAAsB;IAC1B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChDG,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC,MAAM,CAAC;IAChC,IAAI,IAAI,CAACvD,OAAO,EAAE;MAChB4E,WAAW,CAAC3B,QAAQ,CAAC;KACtB,MAAI;MACH,IAAI,CAAC/D,YAAY,CAACU,IAAI,CAAEuF,KAAK,IAAG;QAC9BlC,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC4B,KAAK,GAAC,MAAM,GAAC,OAAO,CAAC;QAC9CP,WAAW,CAAC3B,QAAQ,CAAC;MACvB,CAAC,CAAC;;EAEN;EAEA8C,eAAe,CAACjD,OAAsB;IACpC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIoE,QAAQ,GAAGpE,OAAO,CAAChB,OAAO,CAACyB,IAAI;IACnCpD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAC8G,QAAQ,CAAC;IAC1C,IAAIC,GAAG,GAAG,IAAI,CAAClG,QAAQ,CAACmG,OAAO,CAACF,QAAQ,CAAC;IACzC,IAAI,CAACtD,MAAM,EAAE;IACbzD,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAC+G,GAAG,CAAC;IAC3ClE,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,CAACG,IAAI,CAAC,EAAE,CAAC;IAElC,OAAOV,QAAQ;EACjB;EAEAgD,WAAW,CAACnD,OAAsB;IAChC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIuE,UAAU,GAAGvE,OAAO,CAAChB,OAAO,CAAC0B,QAAQ,CAAC,CAAC,CAAC;IAC5C,IAAIU,IAAI;IACR,IAAGmD,UAAU,YAAY9E,WAAW,EAAC;MACnC2B,IAAI,GAAG,IAAIrF,WAAW,EAAE,CAAC4D,MAAM,CAAC4E,UAAU,CAAC;KAC5C,MAAI;MACHnD,IAAI,GAAGmD,UAAU;;IAEnBlH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAC8D,IAAI,CAAC;IAClC,IAAI,CAACD,QAAQ,CAACC,IAAI,CAAC;IAGnBjB,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAAC,MAAM,CAAC;IAEpC,OAAOP,QAAQ;EACjB;EAEAkD,WAAW,CAACrD,OAAsB;IAChC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIwE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtC,IAAIgE,IAAI,GAAG,IAAI,CAAC7I,KAAK,GAAE,GAAG,GAAE4I,QAAQ;IACpCnH,OAAO,CAACC,GAAG,CAAC,cAAc,EAACmH,IAAI,CAAC;IAEhC,IAAIF,UAAU,GAAG,IAAI,CAACvH,EAAE,CAAC6G,QAAQ,CAACY,IAAI,CAAe;IACrD,IAAIrD,IAAI,GAAG,IAAIrF,WAAW,EAAE,CAAC4D,MAAM,CAAC4E,UAAU,CAACG,MAAM,CAAC;IAEtD,IAAI,CAACzF,WAAW,GAAG,EAAE;IACrB,IAAI,CAACkC,QAAQ,CAACC,IAAI,CAAC;IAEnBjB,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAAC,MAAM,CAAC;IACpC,OAAOP,QAAQ;EACjB;EAEAoC,eAAe,CAACvC,OAAsB;IACpC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAI2E,MAAM,GAAG3E,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM;IAC9C,IAAIkE,MAAM,EAAC;MACT,IAAI,CAAC1I,kBAAkB,CAACyC,GAAG,CAACsB,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAAC;KAClD,MAAK;MACJ,IAAI,CAAC/D,kBAAkB,CAACgI,MAAM,CAACjE,OAAO,CAACI,GAAG,CAAC;;IAE7C/C,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEqH,MAAM,CAAC;IACzCxE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACkE,MAAM,GAAC,MAAM,GAAC,OAAO,CAAC;IAC/C,OAAOxE,QAAQ;EACjB;EAEAsC,cAAc,CAACzC,OAAsB;IACnC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAI2E,MAAM,GAAG3E,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM;IAC9C,IAAIkE,MAAM,EAAC;MACT,IAAI,CAAC1I,kBAAkB,CAACyC,GAAG,CAACsB,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAAC;KAClD,MAAK;MACJ,IAAI,CAAC/D,kBAAkB,CAACgI,MAAM,CAACjE,OAAO,CAACI,GAAG,CAAC;;IAE7C/C,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEqH,MAAM,CAAC;IACxCxE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACkE,MAAM,GAAC,MAAM,GAAC,OAAO,CAAC;IAC/C,OAAOxE,QAAQ;EACjB;EAEAwC,eAAe,CAAC3C,OAAsB;IACpC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAI2E,MAAM,GAAG3E,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM;IAC9C,IAAIkE,MAAM,EAAC;MACT,IAAI,CAAC1I,kBAAkB,CAACyC,GAAG,CAACsB,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAAC;KAClD,MAAK;MACJ,IAAI,CAAC/D,kBAAkB,CAACgI,MAAM,CAACjE,OAAO,CAACI,GAAG,CAAC;;IAE7C/C,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEqH,MAAM,CAAC;IACzCxE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACkE,MAAM,GAAC,MAAM,GAAC,OAAO,CAAC;IAC/C,OAAOxE,QAAQ;EACjB;EAEA0C,eAAe,CAAC7C,OAAsB;IACpC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAI2E,MAAM,GAAG3E,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM;IAC9C,IAAIkE,MAAM,EAAC;MACT,IAAI,CAACzI,kBAAkB,CAACwC,GAAG,CAACsB,OAAO,CAACI,GAAG,EAAEJ,OAAO,CAAC;KAClD,MAAK;MACJ,IAAI,CAAC9D,kBAAkB,CAAC+H,MAAM,CAACjE,OAAO,CAACI,GAAG,CAAC;;IAE7C/C,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEqH,MAAM,CAAC;IACzCxE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAACkE,MAAM,GAAC,MAAM,GAAC,OAAO,CAAC;IAC/C,OAAOxE,QAAQ;EACjB;EAEA4C,SAAS,CAAC/C,OAAsB;IAC9B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIpD,IAAI,GAAGoD,OAAO,CAAChB,OAAO,CAAC0B,QAAQ,CAAC,CAAC,CAAC;IACtCrD,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAACV,IAAI,CAAC;IAC9C,IAAI,IAAI,CAACkC,aAAa,EAAC;MACrB,IAAI,CAACA,aAAa,CAAC,IAAI,CAACU,QAAQ,CAAC5C,IAAI,CAAC,CAAC;MACvC,IAAI,CAACkC,aAAa,GAAC8F,SAAS;KAC7B,MAAI;MACH,IAAI,CAAC3F,WAAW,CAAC4B,IAAI,CAAC,IAAI,CAACrB,QAAQ,CAAC5C,IAAI,CAAC,CAAC;;IAE5CuD,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC,MAAM,CAAC;IAChC,OAAON,QAAQ;EACjB;EAEAoD,eAAe,CAACvD,OAAsB;IACpC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAKA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAE;MACpC,OAAO,IAAI,CAAC8B,aAAa,CAACR,QAAQ,EAAC,uDAAuD,CAAC;;IAE7F;IACA,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtC,IAAG,CAAC,IAAI,CAACoE,eAAe,CAAC,IAAI,CAACjJ,KAAK,GAAG4I,QAAQ,CAAC,EAAC;MAC9C,IAAIH,GAAG,GAAG,IAAI,CAACrH,EAAE,CAACoC,KAAK,CAAC,IAAI,CAACxD,KAAK,GAAG4I,QAAQ,CAAC;MAC9CnH,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAC+G,GAAG,CAAC;MACjC,IAAI,CAACvD,MAAM,EAAE;;IAEfX,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC+D,QAAQ,CAAC;IAClC,OAAOrE,QAAQ;EACjB;EAEA2E,OAAO,CAACC,IAAQ;IACd;IACA,IAAIN,IAAI,GAAG,IAAI,CAACzH,EAAE,CAAC8H,OAAO,CAACC,IAAI,CAAC;IAChC,IAAIC,OAAO,GAAI,IAAIC,MAAM,CAAC,GAAG,GAAC,IAAI,CAACrJ,KAAK,CAAC;IACzC,OAAO6I,IAAI,CAACS,OAAO,CAACF,OAAO,EAAC,GAAG,CAAC,CAACE,OAAO,CAAC,OAAO,EAAC,GAAG,CAAC;EACvD;EAIAzB,aAAa,CAACzD,OAAsB;IAClC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAKA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAE;MACpC,OAAO,IAAI,CAAC8B,aAAa,CAACR,QAAQ,EAAC,mEAAmE,CAAC;;IAEzG,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtC,IAAI0E,MAAM,GAAG,IAAI,CAACC,uBAAuB,CAACZ,QAAQ,CAAC;IACnDrE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC+D,QAAQ,CAAC;IAClCrE,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAACwB,IAAI,CAACC,SAAS,CAACgD,MAAM,EAAC,IAAI,CAACE,YAAY,CAAC,CAAC;IACtE,OAAOlF,QAAQ;EACjB;EAGA4D,aAAa,CAAC/D,OAAsB;IAClC,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAKA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAE;MACpC,OAAO,IAAI,CAAC8B,aAAa,CAACR,QAAQ,EAAC,mEAAmE,CAAC;;IAEzG,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtCpD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkH,QAAQ,CAAC;IACxC,IAAIW,MAAM,GAAG,IAAI,CAACC,uBAAuB,CAACZ,QAAQ,EAAE,IAAI,CAAC;IACzDrE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC+D,QAAQ,CAAC;IAClCrE,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAACwB,IAAI,CAACC,SAAS,CAACgD,MAAM,EAAC,IAAI,CAACE,YAAY,CAAC,CAAC;IACtE,OAAOlF,QAAQ;EACjB;EAEAkF,YAAY,CAACC,GAAO,EAAC9I,KAAS;IAC5B,IAAIA,KAAK,YAAYiD,WAAW,EAAC;MAC/B,IAAIiF,MAAM,GAAG,IAAIa,UAAU,CAAC/I,KAAK,CAAC;MAClC,OAAO;QACLd,WAAW,EAAEc,KAAK,CAACd,WAAW,CAAC8J,IAAI;QACnC5I,IAAI,EAAEZ,KAAK,CAACyJ,IAAI,CAACf,MAAM,CAAC;QACxBgB,KAAK,EAAE;OACR;;IAEH,OAAOlJ,KAAK;EACd;EAGA4I,uBAAuB,CAACZ,QAAe,EAAEmB,SAAS,GAAC,KAAK;IACtD,IAAItB,GAAG,GAAG,IAAI,CAACrH,EAAE,CAAC4I,UAAU,CAAC,IAAI,CAAChK,KAAK,GAAG4I,QAAQ,CAAC;IACnDnH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE+G,GAAG,CAAC;IAC7ChH,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAE+G,GAAG,CAACU,IAAI,CAACrE,QAAQ,CAAC;IACpE,IAAIyE,MAAM,GAAgB;MACxBU,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,EAAE;MACTN,IAAI,EAAEnB,GAAG,CAACU,IAAI,CAACS,IAAI;MACnBf,IAAI,EAAE,IAAI,CAACK,OAAO,CAACT,GAAG,CAACU,IAAI;KAC5B;IAED,KAAI,IAAIS,IAAI,IAAInB,GAAG,CAACU,IAAI,CAACrE,QAAQ,EAAC;MAChC,IAAIQ,IAAI,GAAGmD,GAAG,CAACU,IAAI,CAACrE,QAAQ,CAAC8E,IAAI,CAAC;MAClC,IAAIf,IAAI,GAAG,IAAI,CAACK,OAAO,CAAC5D,IAAI,CAAC;MAC7B,IAAI,IAAI,CAAClE,EAAE,CAAC+I,KAAK,CAAC7E,IAAI,CAAC8E,IAAI,CAAC,EAAC;QAC3B,IAAIC,QAAQ;QACZ,IAAIN,SAAS,EAAC;UACZM,QAAQ,GAAG,IAAI,CAACb,uBAAuB,CAACX,IAAI,EAAE,IAAI,CAAC;SACpD,MACG;UACFwB,QAAQ,GAAG;YACTJ,OAAO,EAAE,EAAE;YACXC,KAAK,EAAE,EAAE;YACTN,IAAI,EAAEA,IAAI;YACVf,IAAI,EAAEA;WACP;;QAEHU,MAAM,CAACU,OAAO,CAAChF,IAAI,CAACoF,QAAQ,CAAC;OAC9B,MAAI;QACH,IAAIjE,OAAO,GAAG,IAAI,CAAChF,EAAE,CAAC6G,QAAQ,CAAC,IAAI,CAACjI,KAAK,GAAG6I,IAAI,CAAC;QACjDU,MAAM,CAACW,KAAK,CAACjF,IAAI,CAAC;UAChB2E,IAAI,EAAEA,IAAI;UACVf,IAAI,EAAEA,IAAI;UACVzC,OAAO,EAAEA,OAAO,CAAC0C;SAClB,CAAC;;;IAIN,OAAOS,MAAM;EACf;EAEAxB,SAAS,CAAC3D,OAAsB;IAE9B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIkG,KAAK,GAAGlG,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM;IACvC,IAAIsH,KAAK,GAAGnG,OAAO,CAAChB,OAAO,CAAC0B,QAAQ,CAAC7B,MAAM;IAC3C,IAAKqH,KAAK,GAAG,CAAC,IAAIA,KAAK,GAAGC,KAAK,EAAE;MAC/B,OAAO,IAAI,CAACxF,aAAa,CAACR,QAAQ,EAAC,+DAA+D,CAAC;;IAGrG,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtC,IAAI7D,IAAI,GAAGoD,OAAO,CAAChB,OAAO,CAAC0B,QAAQ,CAAC,CAAC,CAAC;IACtC,IAAIsB,OAAO;IACX,IAAIzE,OAAO,GAAG;MAAC6I,QAAQ,EAAE;IAAQ,CAAC;IAClC,IAAIxJ,IAAI,YAAY6C,WAAW,EAAC;MAC9BuC,OAAO,GAAG,IAAIuD,UAAU,CAAC3I,IAAI,CAAC;MAC9BW,OAAO,CAAC6I,QAAQ,GAAG,MAAM;KAC1B,MAAI;MACHpE,OAAO,GAAGpF,IAAI;;IAGhBS,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEkH,QAAQ,CAAC;IACpCnH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE0E,OAAO,CAAC;IAC3C,IAAIqC,GAAG,GAAG,IAAI,CAACrH,EAAE,CAAC2G,SAAS,CAAC,IAAI,CAAC/H,KAAK,GAAG4I,QAAQ,EAAExC,OAAO,EAAEzE,OAAO,CAAC;IACpEF,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE+G,GAAG,CAAC;IACnC,IAAI,CAACvD,MAAM,EAAE;IACb,OAAOX,QAAQ;EACjB;EAEA0D,QAAQ,CAAC7D,OAAsB;IAC7B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAKA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAC;MACnC,OAAO,IAAI,CAAC8B,aAAa,CAACR,QAAQ,EAAC,gDAAgD,CAAC;;IAGtF,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IAEtC,IAAI4F,IAAI,GAAM;MAAED,QAAQ,EAAE;IAAM,CAAE;IAClC,IAAIpG,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,IAAI,CAAC,IAAImB,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE;MAC3E4F,IAAI,GAAG;QAACD,QAAQ,EAAE;MAAQ,CAAC;;IAG7B/I,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEkH,QAAQ,CAAC;IACnC,IAAIxC,OAAO,GAAG,IAAI,CAAChF,EAAE,CAAC6G,QAAQ,CAAC,IAAI,CAACjI,KAAK,GAAG4I,QAAQ,EAAE6B,IAAI,CAAC;IAC3DhJ,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE0E,OAAO,CAACnD,MAAM,CAAC;IAClD,IAAGmD,OAAO,YAAYuD,UAAU,EAAC;MAC/BlI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAC0E,OAAO,CAAC;MAC/C7B,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAACsB,OAAO,CAAC0C,MAAM,CAAC;KAC7C,MACG;MACFrH,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC6C,QAAQ,CAACnB,OAAO,CAAC0B,QAAQ,GAAG,CAACsB,OAAO,CAAC;;IAEvC,OAAO7B,QAAQ;EACjB;EAEA8D,MAAM,CAACjE,OAAsB;IAC3B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAEhD,IAAIA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAC;MAClCsB,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC,OAAO,CAAC;MACjC,OAAON,QAAQ;;IAIjB,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtCpD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEkH,QAAQ,CAAC;IACjC;IACA;IACA;IACA,IAAG;MAAC,IAAI,CAACxH,EAAE,CAACsJ,KAAK,CAAC,IAAI,CAAC1K,KAAK,GAAG4I,QAAQ,CAAC;KAAC,QAAM+B,CAAC,EAAC;IACjD,IAAG;MAAC,IAAI,CAACvJ,EAAE,CAACwJ,MAAM,CAAC,IAAI,CAAC5K,KAAK,GAAG4I,QAAQ,CAAC;KAAC,QAAM+B,CAAC,EAAC;IAClD,IAAI,CAACzF,MAAM,EAAE;IACbX,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC,MAAM,CAAC;IAChC,OAAON,QAAQ;EACjB;EAEAgE,MAAM,CAACnE,OAAsB;IAC3B,IAAIG,QAAQ,GAAG,IAAI,CAACJ,mBAAmB,CAACC,OAAO,CAAC;IAChD,IAAIA,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC5B,MAAM,GAAG,CAAC,EAAC;MAClCsB,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC,OAAO,CAAC;MACjC,OAAON,QAAQ;;IAEjB,IAAIqE,QAAQ,GAAGxE,OAAO,CAAChB,OAAO,CAACyB,IAAI,CAAC,CAAC,CAAC;IACtCpD,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC1B,KAAK,GAAG4I,QAAQ,CAAC;IAC9C;IACA,IAAIL,MAAM,GAAG,IAAI,CAACU,eAAe,CAAC,IAAI,CAACjJ,KAAK,GAAG4I,QAAQ,CAAC;IACxDnH,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE6G,MAAM,CAAC;IAC9BhE,QAAQ,CAACnB,OAAO,CAACyB,IAAI,GAAG,CAAC0D,MAAM,GAAC,MAAM,GAAC,OAAO,CAAC;IAC/C,OAAOhE,QAAQ;EACjB;EAEA0E,eAAe,CAACJ,IAAW;IACzB,IAAIJ,GAAG,GAAG,IAAI,CAACrH,EAAE,CAACyJ,WAAW,CAAChC,IAAI,CAAC;IACnCpH,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAE+G,GAAG,CAAC;IACpD,OAAOA,GAAG,CAAC,QAAQ,CAAC;EACtB;;AAOFhJ,IAAI,EAAE;;;;;;;;;;;;;;AC3tBN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA","sources":["./src/app/workers/python-compiler.worker.ts","./node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["/// <reference lib=\"webworker\" />\n// Configs\n\n\nlet pyodideRoot = \"/\"\nlet pyodideMount = \"/mnt\"\n\n// Bootstrap pyodide\n\nimportScripts(\"https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js\");\n\n\n//\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide_py.tar\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.asm.js\n//wget https://cdn.jsdelivr.net/pyodide/v0.21.3/full/pyodide.js.map\n//importScripts(\"./assets/pyodide.js\");\n\ndeclare var loadPyodide: any;\n\n//let worker: PyodideFsWorker;\nasync function main() {\n  let worker = new PyodideWorker(pyodideRoot, pyodideMount);\n}\n\n\n\n// Worker definition \n//TODO: import claees from pydiode-fsdriver\ntype PromiseResolver<T> = (value: T ) => void;\n\n\nexport interface FsNode {\n  name: string;\n  path: string;\n}\n\nexport interface FsNodeFolder extends FsNode {\n  folders: FsNodeFolder[];\n  files: FsNodeFile[];\n}\nexport interface FsNodeFile extends FsNode {\n  content: string|ArrayBuffer\n}\n\nexport enum PyodideState {\n  Init = 'Init',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Error = 'Error',\n}\n\nexport enum PyodideMessageType {\n  Ready = 'Ready',\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Exists = 'Exists',\n  Delete = 'Delete', \n}\n\nexport interface PyodideMessage {\n  uid: string;\n  type: PyodideMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface PyodideRequest {\n  uid: string;\n  timestamp: number;\n  message: PyodideMessage;\n}\n\nexport interface PyodideResponse {\n  uid: string;\n  timestamp: number;\n  success: boolean;\n  message: PyodideMessage;\n  errors: string[];\n}\n\nexport type FsMessageHandler = (message:PyodideRequest)=>PyodideResponse;\n\nclass PyodideWorker{\n  \n  requestQueueNotify = new Map<string,PyodideRequest>();\n  requestQueueState = new Map<string,PyodideRequest>();\n  requestQueueStdout = new Map<string,PyodideRequest>();\n  requestQueueStderr = new Map<string,PyodideRequest>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  pyodide: any;\n  fs: any;\n  loadPyodide: any;\n  micropip: any;\n  root:string;\n  mount:string;\n  isReady = false;\n  readyPromise: Promise<boolean>;\n  readyResolver: PromiseResolver<boolean>;\n  stdinPending=false;\n  stdinResolver?: PromiseResolver<string>;\n  isSync = false;\n  needSync = false;\n  stdinBuffer = new Array<string>();\n  \n  constructor(root:string, mount:string ){\n    this.root = root;\n    this.mount = mount;\n\n    this.requestQueueStdout = new Map();\n    this.requestQueueStderr = new Map();\n    \n    //onReady\n    let readyResolver: PromiseResolver<boolean>;\n    this.readyPromise =  new Promise<boolean>((resolve, reject) => {\n      readyResolver = resolve;\n    })\n    this.readyResolver = (value)=>{ readyResolver(value) }\n\n    \n    addEventListener(\"message\", async ( payload:any ) => { this.onData(payload.data) })\n\n   \n\n    this.initPydiode().then(()=>{\n      this.load(this.root, this.mount);\n      this.fs.syncfs(true,()=>{\n        this.isReady = true;\n        this.sendState(PyodideState.Ready)\n        this.readyResolver(this.isReady);\n      });\n    })\n  }\n\n  async initPydiode(){\n    \n    console.log(\"loadPyodide: ...\")\n    \n    let options = {\n      stdin: ()=>{return this.onStdin()},\n      stdout: (msg:string)=>{this.sendStdout(msg)},\n      stderr: (msg:string)=>{this.sendStderr(msg)},\n    }\n\n    //console.log(loadPyodide)\n    this.pyodide = await loadPyodide(options);\n    this.fs = this.pyodide.FS;\n    await this.pyodide.loadPackage([\"micropip\"]);\n    this.micropip = this.pyodide.pyimport(\"micropip\");\n    \n    console.log(\"loadPyodide: done\")\n    //console.log(pyodide)\n\n    this.setCustomHooks()\n  }\n\n  async setCustomHooks(){\n    let oldInput = this.pyodide.globals.input;\n    console.log(\"setCustomHooks:oldInput:\",oldInput)\n\n    let localThis = this;\n    this.pyodide.globals.set('input', async function (prompt?:string) {\n      if (prompt && prompt.trim().length>0){localThis.sendStdout(prompt)}\n      console.log(\"setCustomHooks:scrivo sulla consolle!!!!\")\n      let stdinResolver: PromiseResolver<string>;      \n      let promise =  new Promise<string>((resolve, reject) => {\n        stdinResolver = resolve;\n      })\n      localThis.stdinResolver = (message:string)=>{ stdinResolver(message) }\n\n      if(localThis.stdinBuffer.length>0){\n        let line = localThis.stdinBuffer.shift()\n        localThis.stdinResolver(line!)\n      }\n\n      return promise;\n    });\n  }\n\n  async load(root:string, mount:string)\n  {\n    this.root = root;\n    this.mount = mount;\n    console.log(\"PyodideFsWorker: load\")\n    this.fs.mkdir(this.mount);\n    this.fs.mount(this.fs.filesystems.IDBFS, { root: root }, this.mount);\n    console.log(\"PyodideFsWorker: load: done\")\n\n    \n    console.log(this.fs.mounts)\n    console.log(this.fs.root)\n    console.log(this.fs.root.mount)\n  }\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n  \n  responseFromRequest(request:PyodideRequest, success:boolean=true, errors:string[]=[]):PyodideResponse{\n    let response:PyodideResponse = {\n      uid: request.uid,\n      timestamp: Date.now(),\n      success: success,\n      errors: errors,\n      message: {\n        uid: request.message.uid,\n        type: request.message.type,\n        args:[],\n        contents:[]\n      }\n    };\n    return response\n  }\n\n  responseError(response:PyodideResponse, error?:string):PyodideResponse{\n    response.success = false;\n    if (error){response.errors.push(error)};\n    return response;\n  }\n\n  syncFS(){\n    if (!this.isSync){\n      this.isSync = true\n      this.needSync = false;\n      console.log('syncFS: do!');\n      this.fs.syncfs((err?:any)=>{\n        if(err){\n          console.log('syncFS: error while syncing, retrying')\n          this.needSync = true;\n        }\n        this.isSync = false;\n        if (this.needSync){\n          this.needSync = false;\n          console.log('syncFS: repeat!');\n          this.syncFS()\n        }\n      })\n    }\n    else{\n      console.log('syncFS: queued');\n      this.needSync = true;\n    }\n  }\n\n  onStdin(){\n    //TOD: unused??\n    console.log('PyodideWorker:onStdin:');   \n    if (this.stdinBuffer.length > 0){}\n    let item = this.stdinBuffer.shift()\n    console.log('PyodideWorker:onStdin:', item);\n    return item\n  }\n\n  execCode(code:string){\n    console.log(\"execCode:\",code)\n    this.stdinBuffer = []\n\n    try{\n      this.pyodide.runPythonAsync(code).then( (result:any)=>{\n        console.log(result)\n        this.sendState(PyodideState.Success, result)\n        console.log(\"execCode: result:\\n\",result)\n      });\n    }catch(error:any){\n      this.sendState(PyodideState.Error,error)\n    }\n    \n    \n  }\n\n  sendNotify(title: string, msg:string, kind:string=\"\"){\n    console.log(\"notify: \",msg)\n    this.requestQueueNotify.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.args = [title, msg, kind]\n      console.log(\"notify:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendState(state: PyodideState, content?:any){\n    console.log(\"state: \",state)\n    this.requestQueueState.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.args = [state]\n      if(content){\n        response.message.contents.push(JSON.stringify(content))\n      }\n      console.log(\"state:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStdout(msg:string){\n    console.log(\"stdout: \"+msg)\n    this.requestQueueStdout.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"stdout:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStderr(msg:string){\n    console.log(\"stderr: \"+msg)\n    this.requestQueueStderr.forEach(( request:PyodideRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"stderr:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  onData(request:PyodideRequest) {\n    console.log('PyodideFsWorker:onData:',request);\n    let action: FsMessageHandler | null = null;\n\n    switch (request.message.type) {\n      case PyodideMessageType.Ready:\n        this.ready(request);\n        break;\n      case PyodideMessageType.SubscribeNotify:\n        action=(request)=>{return this.subscribeNotify(request)};\n        break;\n      case PyodideMessageType.SubscribeState:\n        action=(request)=>{return this.subscribeState(request)};\n        break;\n      case PyodideMessageType.SubscribeStdout:\n        action=(request)=>{return this.subscribeStdout(request)};\n        break;\n      case PyodideMessageType.SubscribeStderr:\n        action=(request)=>{return this.subscribeStderr(request)};\n        break;\n      \n      case PyodideMessageType.SendStdin:\n        action=(request)=>{return this.sendStdin(request)};\n        break;\n      case PyodideMessageType.InstallPackages:\n        action=(request)=>{return this.installPackages(request)};\n        break;\n      case PyodideMessageType.ExecuteCode:\n        action=(request)=>{return this.executeCode(request)};\n        break;\n      case PyodideMessageType.ExecuteFile:\n        action=(request)=>{return this.executeFile(request)};\n        break;\n      case PyodideMessageType.CreateDirectory:\n        action=(request)=>{return this.createDirectory(request)};\n        break;\n      case PyodideMessageType.ReadDirectory:\n        action=(request)=>{return this.readDirectory(request)};\n        break;\n      case PyodideMessageType.WriteFile:\n        action=(request)=>{return this.writeFile(request)};\n        break;\n      case PyodideMessageType.ReadFile:\n        action=(request)=>{return this.readFile(request)};\n        break;\n      case PyodideMessageType.ScanDirectory:\n        action=(request)=>{return this.scanDirectory(request)};\n        break;\n      case PyodideMessageType.Delete:\n        action=(request)=>{return this.delete(request)};\n        break;\n      case PyodideMessageType.Exists:\n        action=(request)=>{return this.exists(request)};\n        break;\n      default: break;\n    }\n    if(action){ \n      let response = action(request);\n      if (response){ postMessage(response) }\n    }\n  }\n\n  ready(request:PyodideRequest){\n    let response = this.responseFromRequest(request);\n    response.message.args = ['true'];\n    if (this.isReady) {\n      postMessage(response);\n    }else{\n      this.readyPromise.then((ready)=>{\n        response.message.args = [ready?'true':'false'];\n        postMessage(response);\n      })\n    }\n  }\n\n  installPackages(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let packages = request.message.args;\n    console.log(\"installPackages:\\n\",packages)//,res)\n    let res = this.micropip.install(packages)\n    this.syncFS()\n    console.log(\"installPackages: DONE!\\n\",res)\n    response.message.contents.push(\"\")//res+\": \"+res)\n    \n    return response;\n  }\n\n  executeCode(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let rawContent = request.message.contents[0];\n    let code;\n    if(rawContent instanceof ArrayBuffer){\n      code = new TextDecoder().decode(rawContent);\n    }else{\n      code = rawContent\n    }\n    console.log(\"executeCode:\\n\",code)//,res)\n    this.execCode(code)\n\n\n    response.message.contents = [\"true\"]\n    \n    return response;\n  }\n\n  executeFile(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let fullpath = request.message.args[0];\n    let path = this.mount +\"/\"+ fullpath\n    console.log(\"executeFile:\",path)//,res)\n    \n    let rawContent = this.fs.readFile(path) as Uint8Array\n    let code = new TextDecoder().decode(rawContent.buffer);\n\n    this.stdinBuffer = []\n    this.execCode(code)\n\n    response.message.contents = [\"true\"]\n    return response\n  }\n\n  subscribeNotify(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeNotify:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeState(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeState:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStdout(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeStdout:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStderr(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStderr.set(request.uid, request)\n    } else{\n      this.requestQueueStderr.delete(request.uid)\n    }\n    console.log(\"subscribeStderr:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  sendStdin(request:PyodideRequest){\n    let response = this.responseFromRequest(request); \n    let data = request.message.contents[0];\n    console.log(\"PyodideWorker:sendStdin:\\n\",data)\n    if (this.stdinResolver){\n      this.stdinResolver(this.toString(data))\n      this.stdinResolver=undefined\n    }else{\n      this.stdinBuffer.push(this.toString(data))\n    }\n    response.message.args = ['true']\n    return response;\n  }\n\n  createDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    //TODO: allow for multiple queries;\n    let fullpath = request.message.args[0];\n    if(!this.internal_exists(this.mount + fullpath)){\n      let res = this.fs.mkdir(this.mount + fullpath);\n      console.log('pydiode:mkdir:',res)\n      this.syncFS()\n    }\n    response.message.args = [fullpath];\n    return response;\n  }\n\n  getPath(node:any){\n    //any: https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.getPath\n    let path = this.fs.getPath(node)\n    let pattern =  new RegExp(\"^\"+this.mount); \n    return path.replace(pattern,\"/\").replace(/\\/\\/+/,\"/\");\n  }\n\n  \n\n  readDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    let curDir = this.scanDirectory_recursive(fullpath)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n\n  scanDirectory(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    console.log(\"scanDirectory: \", fullpath)\n    let curDir = this.scanDirectory_recursive(fullpath, true)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  jsonReplacer(key:any,value:any){\n    if (value instanceof ArrayBuffer){\n      let buffer = new Uint8Array(value)\n      return {\n        constructor: value.constructor.name,\n        data: Array.from(buffer),\n        flags: []\n      }\n    }\n    return value\n  }\n\n\n  scanDirectory_recursive(fullpath:string, recursive=false):FsNodeFolder{\n    let res = this.fs.lookupPath(this.mount + fullpath);\n    console.log(\"scanDirectory_recursive: \", res)\n    console.log(\"scanDirectory_recursive:contents: \", res.node.contents);\n    let curDir:FsNodeFolder = {\n      folders: [],\n      files: [],\n      name: res.node.name,\n      path: this.getPath(res.node)\n    };\n\n    for(let name in res.node.contents){\n      let item = res.node.contents[name];\n      let path = this.getPath(item);\n      if (this.fs.isDir(item.mode)){\n        let childDir;\n        if (recursive){\n          childDir = this.scanDirectory_recursive(path, true);\n        }\n        else{\n          childDir = {\n            folders: [],\n            files: [],\n            name: name,\n            path: path\n          }\n        }\n        curDir.folders.push(childDir);\n      }else{\n        let content = this.fs.readFile(this.mount + path)\n        curDir.files.push({\n          name: name,\n          path: path,\n          content: content.buffer\n        })\n      }\n    }\n\n    return curDir;\n  }\n\n  writeFile(request:PyodideRequest):PyodideResponse{\n    \n    let response = this.responseFromRequest(request);\n    let nargs = request.message.args.length;\n    let ncont = request.message.contents.length\n    if ( nargs < 1 || nargs < ncont ){ \n      return this.responseError(response,\"writeFile: Requires at least 1 path as argument and 1 content\");\n    }\n    \n    let fullpath = request.message.args[0];\n    let data = request.message.contents[0];\n    let content;\n    let options = {encoding: \"binary\"}\n    if (data instanceof ArrayBuffer){\n      content = new Uint8Array(data)\n      options.encoding = \"utf8\"\n    }else{\n      content = data\n    }\n\n    console.log(\"writeFile: \", fullpath)\n    console.log(\"writeFile:content: \", content)\n    let res = this.fs.writeFile(this.mount + fullpath, content, options);\n    console.log(\"writeFile:res: \", res)\n    this.syncFS()\n    return response;\n  }\n\n  readFile(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request);\n    if ( request.message.args.length < 1){ \n      return this.responseError(response,\"readFile: Requires at least 1 path as argument\");\n    }\n     \n    let fullpath = request.message.args[0];\n\n    let opts:{} = { encoding: 'utf8' }\n    if (request.message.args.length == 2 && request.message.args[1] == 'binary' ){\n      opts = {encoding: 'binary'} \n    }\n\n    console.log(\"readFile: \", fullpath)\n    let content = this.fs.readFile(this.mount + fullpath, opts);\n    console.log('readFile:content:\\n', content.length)\n    if(content instanceof Uint8Array){\n      console.log('readFile:content: BUFFER',content)\n      response.message.contents = [content.buffer];\n    }\n    else{\n      console.log('readFile:content: STRING')\n      response.message.contents = [content];\n    }\n    return response;\n  }\n\n  delete(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n\n    \n    let fullpath = request.message.args[0];\n    console.log(\"delete: \", fullpath)\n    //TODO: use lookupPath and isDir/isFile\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.lookupPath\n    //TODO: do it recursive\n    try{this.fs.rmdir(this.mount + fullpath)}catch(_){}\n    try{this.fs.unlink(this.mount + fullpath)}catch(_){}\n    this.syncFS()\n    response.message.args = [\"true\"]\n    return response;\n  }\n\n  exists(request:PyodideRequest):PyodideResponse{\n    let response = this.responseFromRequest(request); \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n    let fullpath = request.message.args[0];\n    console.log(\"exists: \", this.mount + fullpath)\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.analyzePath\n    let exists = this.internal_exists(this.mount + fullpath)\n    console.log(\"exists:\", exists)\n    response.message.args = [exists?'true':'false']\n    return response;\n  }\n\n  internal_exists(path:string){\n    let res = this.fs.analyzePath(path)\n    console.log(\"internal_file_exists:analyzePath\", res)\n    return res[\"exists\"]\n  }\n}\n  \n\n\n\n\nmain()\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["pyodideRoot","pyodideMount","importScripts","main","worker","PyodideWorker","PyodideState","PyodideMessageType","constructor","root","mount","Map","TextEncoder","TextDecoder","Array","requestQueueStdout","requestQueueStderr","readyResolver","readyPromise","Promise","resolve","reject","value","addEventListener","payload","onData","data","initPydiode","then","load","fs","syncfs","isReady","sendState","Ready","console","log","options","stdin","onStdin","stdout","msg","sendStdout","stderr","sendStderr","pyodide","loadPyodide","FS","loadPackage","micropip","pyimport","setCustomHooks","oldInput","globals","input","localThis","set","prompt","trim","length","stdinResolver","promise","message","stdinBuffer","line","shift","mkdir","filesystems","IDBFS","mounts","toString","ArrayBuffer","binDecoder","decode","toArrayBuffer","binEncoder","encode","responseFromRequest","request","success","errors","response","uid","timestamp","Date","now","type","args","contents","responseError","error","push","syncFS","isSync","needSync","err","item","execCode","code","runPythonAsync","result","Success","Error","sendNotify","title","kind","requestQueueNotify","forEach","postMessage","state","content","requestQueueState","JSON","stringify","action","ready","SubscribeNotify","subscribeNotify","SubscribeState","subscribeState","SubscribeStdout","subscribeStdout","SubscribeStderr","subscribeStderr","SendStdin","sendStdin","InstallPackages","installPackages","ExecuteCode","executeCode","ExecuteFile","executeFile","CreateDirectory","createDirectory","ReadDirectory","readDirectory","WriteFile","writeFile","ReadFile","readFile","ScanDirectory","scanDirectory","Delete","delete","Exists","exists","packages","res","install","rawContent","fullpath","path","buffer","enable","undefined","internal_exists","getPath","node","pattern","RegExp","replace","curDir","scanDirectory_recursive","jsonReplacer","key","Uint8Array","name","from","flags","recursive","lookupPath","folders","files","isDir","mode","childDir","nargs","ncont","encoding","opts","rmdir","_","unlink","analyzePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[1]}