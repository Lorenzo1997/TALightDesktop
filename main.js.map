{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/routes.ts","./src/app/services/api-service/api.commands.ts","./src/app/services/api-service/api.packets.ts","./src/app/services/api-service/api.service.ts","./src/app/services/api-service/api.socket.ts","./src/app/services/clang-compiler-service/clang-compiler.service.ts","./src/app/services/connection-manager-service/connection-manager.service.ts","./src/app/services/fs-service/fs.service.test.ts","./src/app/services/fs-service/fs.service.ts","./src/app/services/notification-mananger-service/notification-manager.service.ts","./src/app/services/problem-manager-service/problem-manager.service.ts","./src/app/services/problem-manager-service/problem-manager.types.ts","./src/app/services/project-manager-service/project-manager.service.ts","./src/app/services/project-manager-service/project-manager.types.ts","./src/app/services/python-compiler-service/pydiode-driver.ts","./src/app/services/python-compiler-service/python-compiler.service.ts","./src/app/services/theme-service/theme.service.ts","./src/app/views/connect-view/connect-view.component.ts","./src/app/views/connect-view/connect-view.component.html","./src/app/views/demo-view/demo-view.ts","./src/app/views/demo-view/demo-view.component.html","./src/app/views/home-view/home-view.component.ts","./src/app/views/home-view/home-view.component.html","./src/app/views/select-problem-view/select-problem-view.component.ts","./src/app/views/select-problem-view/select-problem-view.component.html","./src/app/widgets/code-editor/code-editor.module.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.html","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.ts","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.html","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.ts","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.html","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.ts","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.html","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.ts","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.html","./src/app/widgets/code-editor/output-widget/output-widget.component.ts","./src/app/widgets/code-editor/output-widget/output-widget.component.html","./src/app/widgets/code-editor/problem-widget/problem-widget.component.ts","./src/app/widgets/code-editor/problem-widget/problem-widget.component.html","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.ts","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.html","./src/app/widgets/topbar/topbar.module.ts","./src/environments/environment.ts","./src/main.ts","ignored|/home/runner/work/TALightDesktop/TALightDesktop/node_modules/tar-web|fs"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n\n}\n","<div class=\"tal-page-container\">\n  <div class=\"tal-page-topbar\">\n    <tal-topbar-widget></tal-topbar-widget>\n  </div>\n  <div class=\"tal-page-content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { routes } from './routes';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { SplitterModule } from 'primeng/splitter';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { CodeEditorModule } from './widgets/code-editor/code-editor.module';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopbarModule } from './widgets/topbar/topbar.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeViewComponent,\n    ConnectViewComponent,\n    SelectProblemViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MonacoEditorModule.forRoot(),\n    RouterModule.forRoot(routes),\n    FormsModule,\n    InputTextModule,\n    InputSwitchModule,\n    DropdownModule,\n    FileUploadModule,\n    FormsModule,\n    InputTextModule,\n    TooltipModule,\n    ScrollPanelModule,\n    SelectButtonModule,\n    SplitterModule,\n    RadioButtonModule,\n    CodeEditorModule,\n    TopbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConnectionManagerService } from '../services/connection-manager-service/connection-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly connectionManagerService: ConnectionManagerService,\n    private readonly router: Router,\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isConnected: boolean = this.connectionManagerService.isConnected;\n\n    if (!isConnected) {\n      //this.router.navigate(['/connect']);\n    }\n    return true;\n    return isConnected;\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { DemoViewComponent } from './views/demo-view/demo-view';\n\nexport const routes: Routes = [\n    /*\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n    */\n\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n\n    /*\n    {\n        path: 'connect',\n        component: ConnectViewComponent\n    },\n\n    {\n        path: 'select-problem',\n        component: SelectProblemViewComponent\n    },\n    */\n    {\n        path: 'demo',\n        component: DemoViewComponent\n    },\n];","import { TALightSocket } from \"./api.socket\";\nimport { Packets } from \"./api.packets\";\nimport { xxhash128 } from \"hash-wasm\";\nvar JSONbig = require('json-bigint');\n\nexport namespace Commands{\n\n    export class Command{\n      public tal: TALightSocket;\n      public url?:string;\n      public debug=false; \n      public onReciveHandshake?:(message:Packets.Reply.Handshake)=>void;\n      public onReciveBinary?:(message:string)=>void;\n      public onReciveUndecodedBinary?:(message:ArrayBuffer)=>void;\n      public onRecive?:(message:Packets.PacketsPayload)=>void; \n      public onClose?:()=>void;\n      public onError?:(error:any)=>void;\n  \n      constructor(url:string, decodeBinary?:boolean){\n        this.url = url;\n        this.tal = new TALightSocket(this.url);\n        if(decodeBinary === false) {this.tal.decode = decodeBinary;}\n\n        this.tal.onError = (error)=>{ this.didError(error); };\n        this.tal.onClose = ()=>{ this.didClose(); };\n        this.tal.onRecive = (payload)=> { this.didRecive(payload) }\n        this.tal.onReciveBinary = (payload)=> { this.didReciveBinary(payload) }\n        this.tal.onReciveUndecodedBinary = (payload)=> { this.didReciveUndecodedBinary(payload) }\n      }\n      \n      public run(){\n        let msg = new Packets.Request.Handshake();\n        this.tal.send(msg);\n      }\n\n      public sendBinary(data:string){\n        this.log(\"didSendBinary: \"+data);\n        this.tal.sendBinary(data);\n      }\n\n      public log(...args:any[]){\n        let prefix = this.constructor.name+\": \"\n        console.log(prefix, ...args);\n        \n        if (this.debug) alert(prefix + (args).join(\" \") );\n      }\n      \n      public didClose(){\n        this.log(\"didClose\");\n        if (this.onClose){ this.onClose();}\n      }\n  \n      public didError(error:any){\n        this.log(\"didError \",error);\n        if (this.onError){ this.onError(error);}\n      }\n\n      public didReciveBinary(payload:string){\n        this.log(\"didReciveBinary:\\n\"+payload);\n        if(this.onReciveBinary){this.onReciveBinary(payload)}\n      }\n\n      public didReciveUndecodedBinary(payload:ArrayBuffer){\n        this.log(\"didReciveUndecodedBinary:\\n\");\n        if(this.onReciveUndecodedBinary){this.onReciveUndecodedBinary(payload)}\n      }\n\n      public async didRecive(payload:Packets.PacketsPayload){\n        this.log(\"didRecive\");\n        if(this.onRecive){ this.onRecive(payload) }\n        \n        let message = payload.getMessage(Packets.Reply.Handshake)\n        if (message){ this.didReciveHandshake(message); }\n      }\n\n      \n      public didReciveHandshake(message:Packets.Reply.Handshake){\n        this.log(\"didRecieveHandshake\");\n        if (this.onReciveHandshake) { this.onReciveHandshake(message); }\n      }\n    }\n\n    export class ProblemList extends Command{\n      public onRecieveProblemList?:(message:Packets.Reply.MetaList)=>void\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.MetaList();\n        this.tal.send(msg);\n      }\n\n      public override async didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage_MetaList(Packets.Reply.MetaList);\n        if (message){ this.didReciveProblemList(message); }\n      }\n        \n      public didReciveProblemList(message:Packets.Reply.MetaList){\n        this.log(\"onRecieveProblemList\");\n        if (this.onRecieveProblemList) { this.onRecieveProblemList(message); }\n      }\n    }\n\n    export class Attchment extends Command{\n      public onReciveAttachment?:(message:Packets.Reply.Attachment )=>void;\n      public onReciveAttachmentInfo?:(message:Packets.Reply.AttachmentInfo)=>void;\n\n      private msg:Packets.Request.Attachment;\n  \n      constructor(url:string, problem_name:string){\n        super(url, false);\n  \n        this.msg = new Packets.Request.Attachment(problem_name);\n      }\n  \n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n  \n        this.tal!.send(this.msg)\n      }\n\n      public override async didRecive(payload: Packets.PacketsPayload) {\n        super.didRecive(payload);\n        let message;\n\n        message = payload.getMessage(Packets.Reply.Attachment)\n        if (message){ this.didRecieveAttachment(message); }\n \n        message = payload.getMessage(Packets.Reply.AttachmentInfo)\n        if (message){ this.didRecieveAttachmentInfo(message);}\n        \n      }\n\n      public didRecieveAttachment(message: Packets.Reply.Attachment){\n        this.log(\"Attachment\");\n        if (this.onReciveAttachment ) { this.onReciveAttachment(message); }\n      }\n      \n      public didRecieveAttachmentInfo(message: Packets.Reply.AttachmentInfo){\n        this.log(\"AttachmentInfo\");\n        if (this.onReciveAttachmentInfo ) { this.onReciveAttachmentInfo(message); }\n      }\n      \n    }  \n    \n    export class Connect extends Command{ \n      files = new Map<string,string>()\n\n      public onReciveConnectBegin?:(message:Packets.Reply.ConnectBegin)=>void;\n      public onReciveConnectStart?:(message:Packets.Reply.ConnectStart)=>void;\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n      public onReciveBinaryHeader?:(message:Packets.Reply.AttachmentInfo)=>void;\n      \n      private msg:Packets.Request.ConnectBegin;\n  \n      constructor(url:string, problem_name:string, service:string, args?:{}, tty?:boolean, token?:string, files?:Map<string,string>){\n        super(url);\n        if(files){this.files = files}\n        let fileArgNames = [...this.files.keys()]\n        this.msg = new Packets.Request.ConnectBegin(problem_name, service, args, tty, token, fileArgNames);\n      }\n\n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal.send(this.msg);\n      }\n      \n      public override async didRecive(payload: Packets.PacketsPayload) {\n        super.didRecive(payload);\n        let message;\n        message = payload.getMessage(Packets.Reply.ConnectBegin);\n        if (message){ \n          this.didRecieveConnectBegin(message); \n\n          if(this.files.size > 0 && message.status.Ok.length > 0 && message.status.Ok[0] !== \"\") {\n            const byteSize = (str:string) => new Blob([str]).size;\n            \n            for (let [nameArgFile, content] of this.files.entries()) {\n              let hashHex =  '0x' + await xxhash128(content)\n              let hash = BigInt( hashHex ) \n              let size = byteSize(content);\n\n              let header = new Packets.Request.BinaryHeader(nameArgFile, size, hash);\n              console.log(\"header: \", header);\n              console.log(\"header:string\", header.toString());\n\n              var header_parsed = JSONbig.stringify(header);\n              console.log(\"header:parsed: \", header_parsed);\n              console.log(\"header:parsed:type \", typeof header_parsed);\n\n              this.tal.ws!.next(header_parsed);\n              this.tal.sendBinary(content);\n            }\n          }\n        }\n\n        message = payload.getMessage(Packets.Reply.ConnectStart)\n        if (message){ this.didRecieveConnectStart(message); }\n\n        message = payload.getMessage(Packets.Reply.ConnectStop)\n        if (message){ this.didRecieveConnectStop(message); }\n\n        message = payload.getMessage(Packets.Reply.AttachmentInfo)\n        if (message){ this.didRecieveBinaryHeader(message); }\n      }\n\n      public didRecieveConnectBegin(message: Packets.Reply.ConnectBegin){\n        this.log(\"didRecieveConnectBegin\");\n        if (this.onReciveConnectBegin ) { this.onReciveConnectBegin(message); }\n      }\n\n      public didRecieveConnectStart(message: Packets.Reply.ConnectStart){\n        this.log(\"didRecieveConnectStart\");\n        if (this.onReciveConnectStart ) { this.onReciveConnectStart(message); }\n      }\n      \n      public didRecieveConnectStop(message: Packets.Reply.ConnectStop){\n        this.log(\"didRecieveConnectStop\",message);\n        /* download result files */\n        \n        if (this.onReciveConnectStop) { \n          this.onReciveConnectStop(message); \n\n          if(this.tal.isOpen() === true) {this.sendConnectStop();}\n        }\n      }\n\n      public didRecieveBinaryHeader(message: Packets.Reply.AttachmentInfo){\n        this.log(\"BinaryHeader\");\n        if (this.onReciveBinaryHeader ) { this.onReciveBinaryHeader(message); }\n      }\n\n      public sendConnectStop() {\n        this.tal.send(new Packets.Request.ConnectStop());\n        //this.tal.closeConnection();\n      }\n    }\n\n    export class CloseConnection extends Command{\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n\n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.ConnectStop();\n        this.tal.send(msg);\n      }\n\n      public override async didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.ConnectStop);\n        if (message){ this.didReciveConnectStop(message); }\n      }\n        \n      public didReciveConnectStop(message:Packets.Reply.ConnectStop){\n        this.log(\"didRecieveGameList\");\n        if (this.onReciveConnectStop) { this.onReciveConnectStop(message); }\n      }\n    }\n\n  \n  }","\nexport namespace Packets{\n\n    export class PacketsPayload{\n      public data;\n      public packets:any;\n      public packetTypes:string[] = []\n\n      constructor(data:string){\n        this.data = data;\n        this.packets = JSON.parse(this.data);\n        for (var pkttype in this.packets) {\n          this.packetTypes.push(pkttype)\n        }\n\n        if(this.packetTypes.length === 3 &&\n          this.packetTypes.indexOf(\"name\") === 0 &&\n          this.packetTypes.indexOf(\"size\") === 1 &&\n          this.packetTypes.indexOf(\"hash\") === 2\n          ) {\n            this.packetTypes = [\"AttachmentInfo\"];\n            this.packets = {\"AttachmentInfo\" : this.packets};\n        }\n      }\n\n      public getMessage<T extends Message>( packetClass: new (packet?: any)=>T ):T | null{\n        let packetType = packetClass.name;\n        for (var pkttype in this.packets) {\n          if (pkttype != packetType){ continue; }\n          let packet = this.packets[packetType] \n          console.log(\"Packet:\", packet);\n          let message = new packetClass(packet);\n          message.fromPacket(packet);\n          console.log(\"Packet:Message:\", message);\n          return message;\n        }        \n        return null;\n      }\n\n      public getMessage_MetaList<T extends Message>( packetClass: new (packet?: any)=>T ):T | null{\n        let packetType = packetClass.name;\n        for (var pkttype in this.packets) {\n          if (pkttype != packetType){ continue; }\n          let packet = this.packets[packetType] \n          console.log(\"Packet:\", packet);\n          let message = new packetClass(packet);\n          console.log(\"Packet:Message:\", message);\n          return message;\n        }        \n        return null;\n      }\n\n    }\n  \n    export class Message{\n      constructor(packet?: any){\n        console.log(\"packet:message:constructor:\", packet)\n        if(packet){this.fromPacket(packet);}\n      }\n\n      public static dataToPayload(data: string): PacketsPayload{\n        let raw = JSON.parse(data);\n        return raw;\n      }\n      \n      public static findPacketName(msgClasses: Array<string>, packet: any): string{\n        var msgClass = \"\";\n        msgClasses.forEach((msgName) => {\n          if(msgName in JSON.parse(packet)){\n            msgClass = msgName;\n          }\n        });\n  \n        return msgClass;\n      }\n\n\n\n      public messageName():string{\n        return this.constructor.name;\n      }\n  \n      public toPacketWithName(messageName: string){\n        const packet = { [messageName]:this };\n        return packet;\n      }\n\n      public toPacket(): any{\n        const packetName = this.messageName();\n        const packet = { [packetName]:this };\n        return packet;\n      }\n      \n      public fromPacket(packet:any){\n        console.log(\"packet:message:fromPacket:\", this)\n        if(\"name\" in this){console.log(\"packet:message:fromPacket:\", this[\"name\"])} else {console.log(\"packet:message:fromPacket:\", false)}\n        for (var msgField in this) {\n          console.log(\"packet:message:fromPacket:var:checkprint\")\n          console.log(\"packet:message:fromPacket:var:\", msgField)\n        }\n        for (var msgField in this) {\n          if (! (msgField in packet)){ continue; }\n          let value = packet[msgField];\n          const varType = typeof value;\n          if (varType in [\"function\",\"undefined\",\"symbol\"] ){ continue; }\n  \n          if (varType === \"object\") {\n            console.log(\"packet:message:copyObject:\",value)\n            this[msgField] = Object.assign(value);\n          } else {\n            console.log(\"packet:message:copyValue:\",value)\n            this[msgField] = value;\n          }\n        }\n        return true;\n      }\n    }\n  \n  export class Meta {\n    constructor(data?: any){\n      //console.log(\"Meta:constructor:\", data)\n      this.public_folder = data.public_folder\n      let servicesMap = new Map<string,Service>()\n      for(var attr in data.services){\n        let value = data.services[attr];\n        //console.log(\"Meta:constructor:services:\",attr,value)\n        let service = new Service(value);\n        servicesMap.set(attr,service)\n      }\n      this.services = servicesMap\n    }\n    public public_folder: string = \"\";\n    public services: Map<string, Service> = new Map<string, Service>();\n  }\n\n  export class Service {\n    constructor(data?: any){\n      //console.log(\"Service:constructor:\", data)\n      this.evaluator = data.evaluator\n      this.files = data.files\n      let argsMap = new Map<string,Arg>()\n      for(var attr in data.args){\n        let value = data.args[attr];\n        let arg = new Arg(value);\n        argsMap.set(attr,arg)\n      }\n      this.args = argsMap\n    }\n    public evaluator: string[] = [];\n    public args?:Map<string, Arg>;\n    public files?: string[];\n  }\n\n  export class Arg {\n    constructor(data: any){\n      this.regex = data.regex\n      this.default = data.default\n    }\n    public regex: RegExp;\n    public default: string;\n  }\n\n\n\n    \n  // Requests ---------------------------------\n  export namespace Request{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"rtal\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {}\n    export class  Attachment extends Message{\n      public problem: String;\n\n      constructor(problem_name:String) {\n        super();\n        this.problem = problem_name;\n      }\n    }\n    export class ConnectBegin extends Message {\n      public problem:string = \"\";\n      public service:string = \"\";\n      public args:{} = {};\n      public tty:boolean = false;\n      public token:string|null = null;\n      public files:string[] = [];\n\n      constructor(problem:string, service:string, args:{}={}, tty:boolean=false, token:string|null = null, files:string[] = []) {\n        super();\n        this.problem = problem;\n        this.service = service;\n        this.args = args;\n        this.tty = tty;\n        this.token = token;\n        this.files = files;\n      }\n    }\n    export class BinaryHeader extends Message {\n      public name:string = \"\";\n      public size:number = 0;\n      public hash:bigint = 0n;\n\n      constructor(name:string, size:number, hash:bigint) {\n        super();\n        this.name = name;\n        this.size = size;\n        this.hash = hash;\n      }\n    }\n    export class ConnectStop extends Message {\n\n    }\n  }\n\n\n  export namespace Reply{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {\n      constructor(packet?: any){\n        super(packet)\n        let metaMap = new Map<string,Meta>()\n        for(var attr in packet.meta){\n          let value = packet.meta[attr];\n          let meta = new Meta(value);\n          metaMap.set(attr,meta)\n        }\n        this.meta = metaMap\n      }\n      public meta:Map<string, Meta> = new Map<string, Meta>();\n    }\n    export class  Attachment extends Message{\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class AttachmentInfo extends Message {\n      public name:string = \"\";\n      public size:string = \"\";\n      public hash:string = \"\";\n    }\n    export class ConnectBegin extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n    export class ConnectStart extends Message {\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class ConnectStop extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n\n\n\n    export class Result {\n      Ok: string[]|null = null\n      Err: string = \"\"\n      constructor(data:any){\n        if(\"Ok\" in data){this.Err = data[\"Ok\"]}\n        if(\"Err\" in data){this.Err = data[\"Err\"]}\n      }\n      \n      success(){ return this.Err == \"\" }\n    }\n    /*\n    Attachment { status: Result<(), String> },\n    ConnectBegin { status: Result<Vec<String>, String> },\n    ConnectStart { status: Result<(), String> },\n    ConnectStop { status: Result<Vec<String>, String> }\n    */\n\n    \n  }\n}\n\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Packets } from './api.packets';\nimport { Commands } from './api.commands';\n\nexport class Meta extends Packets.Meta{}\nexport interface AttachmentInfo extends Packets.Reply.AttachmentInfo{}\n\n\nexport enum ApiState{\n  Idle,\n  Good,\n  Maybe,\n  Bad\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private _url;\n  urlCache;\n  lastState = ApiState.Idle\n\n  public onApiStateChange = new EventEmitter<ApiState>();\n\n  constructor(){\n    this._url = 'wss://ta.di.univr.it/sfide'\n    this.urlCache = [\n      'wss://ta.di.univr.it/sfide',\n      'ws://localhost:8008/',\n      'wss://ta.di.univr.it/rtal',\n    ]\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public addToCache(url:string){\n    this.removeFromCache(url)\n    this.urlCache.unshift(url)\n  }\n\n  public removeFromCache(url:string){\n    let idx = this.urlCache.indexOf(url)\n    if(idx != -1){\n      this.urlCache.splice(idx,1)\n      return true\n    }\n    return false\n  }\n\n  public setUrl(value: string): boolean {\n    let url;\n    console.log(\"setUrl\")\n    try{ url = new URL(value); }catch(_){ return false; }\n    if(!( url.protocol == 'ws:' || url.protocol == 'wss:' )){ return false; }\n    console.log(\"setUrl:valid!\")\n    this.resetAllConnections()\n    this._url = url.href\n    console.log(\"setUrl:href:\",url.href)\n    this.addToCache(this._url)\n    return true;\n  }\n\n  public updateState(state: ApiState){\n    if(this.lastState != state){\n      this.lastState = state\n      this.onApiStateChange.emit(state)\n    }\n  }\n\n  public stateIdle(){ this.updateState(ApiState.Idle); }\n  public stateGood(){ this.updateState(ApiState.Good); }\n  public stateMaybe(){ this.updateState(ApiState.Maybe); }\n  public stateBad(){ this.updateState(ApiState.Bad); }\n\n  public resetAllConnections(){\n    //TODO: is it necessary to kill all old connection upon URL change ? \n  }\n\n  public problemList(onResult:(problemList:Map<string, Meta>)=>void, onError?: (error: string)=>void){\n    this.stateMaybe()\n    console.log(\"problemList:\")\n    let cmdList = new Commands.ProblemList(this._url);\n    cmdList.onRecieveProblemList = (message)=>{\n      console.log(\"problemList:onRecieveProblemList:\",message)\n      this.stateGood()\n      if(onResult){onResult(message.meta)}\n    }\n    cmdList.onError = (error) => {\n      this.stateBad();\n      console.log(\"problemList:onError:\")\n      if(onError) {onError(error)} \n    }\n    cmdList.run();\n    return cmdList;\n  }\n\n  public GetAttachment( \n    problemName:string, \n    onAttachment?: ()=>void,\n    onAttachmentInfo?: (message: Packets.Reply.AttachmentInfo)=>void, \n    onData?: (data: ArrayBuffer)=>void,\n    onError?: (error: string)=>void\n  ){\n    this.stateMaybe()\n    let cmdGet = new Commands.Attchment(this._url, problemName);\n\n    cmdGet.onReciveAttachment = (message) => { \n      if (message.status.Err){\n        this.stateBad() \n        if (cmdGet.onError) { cmdGet.onError(\"Failed to receive attachment: \"+message.status.Ok) } \n        return;\n      }\n      this.stateGood() \n      if(onAttachment) { onAttachment() } \n    }\n    \n    cmdGet.onReciveAttachmentInfo = (message) => {\n      this.stateGood();\n      if(onAttachmentInfo) { onAttachmentInfo(message) } \n    }\n    \n    cmdGet.onReciveUndecodedBinary = (message) => { \n      this.stateGood();\n      if(onData) { onData( message )} \n    }\n\n    cmdGet.onError = (error) => {\n      this.stateBad();\n      if(onError) {onError(error)} \n    }\n\n    cmdGet.run();\n    return cmdGet;\n  }\n\n  public Connect (\n    problem_name:string, \n    service:string, \n    args?:{}, \n    tty?:boolean, \n    token?:string, \n    files?:Map<string, string>,\n    onConnectBegin?:(message:string[] )=>void,\n    onConnectStart?:()=>void,\n    onConnectStop?:(message:string[])=>void,\n    onData?: (data:string)=>void,\n    onBinaryHeader?:(message:Packets.Reply.AttachmentInfo)=>void,\n    onError?:(data:string)=>void\n  ){\n    this.stateMaybe()\n    let cmdConnect = new Commands.Connect(this._url, problem_name, service, args, tty, token, files);\n\n    cmdConnect.onReciveConnectBegin = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to begin connection: \"+message.status.Err); } \n        return;\n      }\n      this.stateGood() \n      if(onConnectBegin && message.status.Ok) { onConnectBegin(message.status.Ok) }\n    }\n\n    cmdConnect.onReciveConnectStart = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to start connect: \"+message.status.Err)  } \n        return;\n      }\n      this.stateGood() \n      if(onConnectStart) { onConnectStart() }\n    }\n\n    cmdConnect.onReciveConnectStop = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to stop connection: \"+message.status.Err)  } \n        return;\n      }\n      this.stateGood() \n      if(onConnectStop && message.status.Ok) { onConnectStop(message.status.Ok) }\n    }\n    \n    cmdConnect.onReciveBinary = (message) => { \n      this.stateGood();\n      if(onData) { onData(message)} \n    }\n\n    cmdConnect.onReciveBinaryHeader = (message) => { \n      this.stateGood();\n      if(onBinaryHeader) { onBinaryHeader( message )} \n    }\n    \n    cmdConnect.onError = (error) => { \n      this.stateBad();\n      if(onError) {onError(error)} \n    }\n    \n    cmdConnect.run();\n    return cmdConnect;\n  }\n\n}\n","import { WebSocketSubject } from 'rxjs/webSocket';\nimport { Packets } from './api.packets';\n\n\nexport class TALightSocket{\n  public url = 'ws://localhost:8008';\n  public ws?:WebSocketSubject<any>;\n  \n  public decode = true;\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n  \n  public onError?:(error:string)=>void;\n  public onClose?:()=>void;\n  public onRecive?:(payload: Packets.PacketsPayload) => void;\n  public onReciveBinary?:(payload: string) => void;\n  public onReciveUndecodedBinary?:(payload: ArrayBuffer) => void;\n      \n  constructor(url:string){\n    this.url = url;\n\n    if (!this.ws || this.ws.closed ){\n      this.ws = new WebSocketSubject({\n        url: this.url,\n        binaryType: \"arraybuffer\",\n        deserializer: msg => msg,\n        serializer: msg => {\n          if (msg instanceof ArrayBuffer)\n            return msg;\n          else if (typeof msg === \"string\")\n            return msg;\n          else\n            return JSON.stringify(msg);\n        }\n      });\n      this.ws.subscribe({\n        next: (payload:any)=>{ this.didRecieve(payload) },\n        error: (error:any)=>{ this.didError(error) },\n        complete: ()=>{ this.didClose() },\n      });\n\n      console.log(\"Created new socket\");\n    }\n  }\n\n  public isOpen():boolean{\n    return (!!this.ws) && !this.ws.closed;\n  }\n\n  public closeConnection(){\n    this.ws!.unsubscribe();\n    this.ws!.complete();\n    console.log(\"TALightSocket:closeConnection\");\n  }\n  \n  public send(request: Packets.Request.Message){\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:send: unable to send, socket is null\")\n      return false\n    } \n    \n    let packet = request.toPacket();\n    this.ws!.next(packet);\n\n    return true;\n  }\n\n  public sendBinary(data: string) {\n    let payload = this.binEncoder.encode(data);\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:sendBinary: unable to send, socket is null\")\n      return false\n    } \n    console.log(\"TALightSocket:sendBinary: sending payload \\n\"+payload);\n    this.ws!.next(payload.buffer);\n    return true;\n  }\n  \n  public didRecieve(payload:MessageEvent){ // Called whenever there is a message from the server.\n    let data = payload.data;\n    console.log(\"TALightSocket:didRecieve:type: \"+payload.constructor.name+\"<\"+payload.data.constructor.name+\">\" )\n\n    if(typeof data === \"object\" && data instanceof ArrayBuffer) {\n      if(this.decode) {\n        if (data.byteLength == 0) {return}\n        data = this.binDecoder.decode(data);\n        console.log(\"TALightSocket:didRecieve:binary:\\n\"+data)\n        if(this.onReciveBinary){ this.onReciveBinary( data );}\n      } \n      else {\n        if(this.onReciveUndecodedBinary){ this.onReciveUndecodedBinary( data );}\n      }\n    } else{\n      let packetsPayload = new Packets.PacketsPayload(data)\n      console.log(\"TALightSocket:didRecieve:packets: \"+packetsPayload.packetTypes)\n      if(this.onRecive){ this.onRecive( packetsPayload ); }\n      \n    }\n  }\n\n  public didError(error:any) { \n    //let errorMsg = JSON.stringify(err);\n    if (this.onError) { this.onError(error );}\n  }\n\n  public didClose() { \n    this.closeConnection();\n    if (this.onClose) { this.onClose();}\n  }\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClangCompilerService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api-service/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionManagerService {\n  private _url: string = \"\";\n  private _isConnected: boolean = false;\n\n  constructor( private readonly router: Router, private api:ApiService ) { }\n\n  public get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public set url(value: string) {\n    if(this.api.setUrl(value)){\n      this._url = value;\n    }\n  }\n\n  public disconnect(): void {\n    this._isConnected = false;\n    this.router.navigate(['/home']);\n  }\n\n}\n","import { resolve } from 'dns';\nimport { createFs } from 'indexeddb-fs';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver } from './fs.service';\n\n\nexport class IndexeddbFsDriver implements FsServiceDriver {\n  public fs;\n  public rootDir = \"root\"\n  public options = {\n    databaseVersion:    1,\n    objectStoreName:    'files',\n    databaseName:       'indexeddb',\n    rootDirectoryName:  this.rootDir\n  }\n\n  constructor() { \n    this.fs = createFs(this.options);\n  }\n\n  async ready(): Promise<boolean>{\n    return true;\n  }\n\n  async readFile(fullpath:string, binary: boolean=true): Promise<string|null>{\n    if (!(await this.fs.exists(fullpath)) ) {return null;}\n    return this.fs.readFile(fullpath);\n  }\n\n  async createDirectory(fullpath:string): Promise<boolean>{\n    let res = await this.fs.createDirectory(fullpath);\n    return await this.fs.exists(fullpath);\n  }\n\n  async writeFile(fullpath:string, content:string): Promise<number>{\n    let res = await this.fs.writeFile(fullpath, content);\n    if (!(await this.fs.exists(fullpath)) ) {return -1;}\n    return res.data.length;\n  }\n\n  async readDirectory(fullpath:string):Promise<FsNodeFolder|null>{\n    if ( await this.fs.exists(fullpath) ) {\n      return this.scanDirectory_recursive(fullpath);\n    }\n    return null;\n  }\n\n  async mount(path: string): Promise<boolean> {\n    //TODO\n    return new Promise<boolean>(resolve=>true);\n  }\n  \n  async unmount(path: string): Promise<boolean> \n  {\n    //TODO\n    return new Promise<boolean>(resolve=>true);\n  }\n  \n  async scanDirectory(path?:string):Promise<FsNodeFolder>{\n    if (!path){path = this.rootDir;}\n    return this.scanDirectory_recursive(path, true)\n  }\n\n  async scanDirectory_recursive(path:string, recursive=false):Promise<FsNodeFolder>{\n    let rootNode:FsNodeFolder = {\n      name: path.split(\"/\").reverse()[0]+\"/\",\n      path: path,\n      folders: [],\n      files: []\n    };\n    console.log(\"scanDirectory:dir: \",path);\n    \n    let dirContent = await this.fs.readDirectory(path)\n     \n\n    for(let key in dirContent.files){\n      let element = dirContent.files[key]\n      let childNode:FsNodeFile = {\n        name: element.name,\n        path: element.fullPath,\n        content: \"\"\n        //depth: depth + 1,\n      }\n      rootNode.files.push(childNode);\n      console.log(\"scanDirectory:file: \",element.fullPath);\n    }\n\n    for(let key in dirContent.directories){\n      let element = dirContent.directories[key]\n      if (recursive){\n        rootNode.folders.push(await this.scanDirectory_recursive(element.fullPath, true));\n      }\n      else{\n        let childNode:FsNodeFolder = {\n          name: element.name,\n          path: element.fullPath,\n          //depth: depth + 1,\n          folders: [],\n          files: []\n        }\n        rootNode.folders.push(childNode);\n      }\n    }\n\n    return rootNode;\n  }\n\n  async delete(fullpath:string): Promise<boolean>{\n    if(!this.exists(fullpath)) return true;\n    await this.fs.remove(fullpath);\n    return !this.exists(fullpath);\n  }\n\n  async exists(fullpath:string): Promise<boolean>{\n    return this.fs.exists(fullpath);\n  }\n\n}\n\n\nexport class FsServiceTest{\n  \n  public fs;\n  public driver;\n  public driverName;\n  constructor( fs:FsService, useDriver?:string ){\n    this.fs = fs;\n     \n    this.driverName = useDriver ?? 'example';\n    this.driver = fs.getDriver(this.driverName);\n    //alert('driverName:'+this.driver)\n  }\n  \n  \n\n  async createTestFiles(){\n    \n    if (!this.driver){return;}\n    //alert('createTestFiles: before: '+this.driver.constructor.name);\n    await this.driver.createDirectory('/src');\n    await this.driver.createDirectory('/assets');\n    await this.driver.createDirectory('/assets/data');\n    await this.driver.createDirectory('/assets/img');\n    await this.driver.writeFile('/main.py',           'import src/testclass.py\\nprint(\"hello\");');\n    await this.driver.writeFile('/mainC.py',           'import src/testclass.py\\nprint(\"helloC\");');\n    await this.driver.writeFile('/src/__init__.py',   '');\n    await this.driver.writeFile('/src/testclassA.py',  'class testclassA: pass');\n    await this.driver.writeFile('/src/testclassB.py',  'class testclassB: pass');\n    await this.driver.writeFile('/src/testclassC.py',  'class testclassC: pass');\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { IndexeddbFsDriver } from './fs.service.test';\n\nexport class FsNodeList extends Array<FsNodeFile|FsNodeFolder>{};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FsService {\n  public drivers = new Map<string,FsServiceDriver>();\n  public static EmptyFolder = {name:\"\", path: \"/\", files:[], folders:[]} as FsNodeFolder\n  public static EmptyFile = {name:\"\", path: \"/\", content:\"\"} as FsNodeFile\n  \n  constructor(){\n     //TODO: Remove test driver FS from constructor\n    this.registerDriver('example', new IndexeddbFsDriver());   \n  }\n\n  registerDriver(name:string, driver: FsServiceDriver):boolean{\n    //if (name in this.drivers){return false;}\n    //alert('register: '+driver)\n    this.drivers.set(name, driver);\n    //alert('register: '+driver.constructor.name+' | all: '+this.getDriverNames())\n    return true;\n  }\n\n  getDriver(name:string): FsServiceDriver | undefined{\n    //alert(name + ' '  + this.getDriverNames() )\n    if ( this.drivers.has(name) ){return this.drivers.get(name);}\n    alert(name + ' NOT found in: '  + this.getDriverNames() + \" | getDriver: undefined !!!\" )\n    return undefined\n    \n  }\n\n  getDriverNames(){\n    return Array.from(this.drivers.keys());\n  }\n\n  treeToList(root:FsNodeFolder){\n    let items = new Array<FsNodeFile|FsNodeFolder>();\n    let queue = new Array<FsNodeFolder>();\n    \n    queue.push(root)\n    console.log('treeToList:root',root)\n    console.log('treeToList:queue:0:',queue.length)\n    while(queue.length > 0){\n      let dir = queue.shift()\n      console.log('treeToList:dir:',dir)\n      if(!dir){break;}\n      items = items.concat(dir.files, dir.folders)\n      queue = queue.concat(dir.folders)\n      console.log('treeToList:queue:',queue.length)\n    }\n    return items;\n  }\n}\n\n\nexport class Tar{\n  public static tarstream = require('tar-web')\n  public static b4a = require('b4a')\n\n  public static binEncoder = new TextEncoder(); // always utf-8\n  public static binDecoder = new TextDecoder(\"utf-8\");\n\n  static unpack(tarball: ArrayBuffer, cb: (files:FsNodeFile[],folders:FsNodeFolder[])=>void ){\n    var extract = this.tarstream.extract()\n\n    var files = new Array<FsNodeFile>();\n    var folders = new Array<FsNodeFolder>();\n    \n    \n    extract.on('entry', function(header:any, stream:any, next:()=>void) {\n      // header is the tar header\n      // stream is the content body (might be an empty stream)\n      // call next when you are done with this entry\n\n      console.log('Tar:unpack:entry:header',header)\n      console.log('Tar:unpack:entry:stream',stream)\n\n      let fullpath = header.name;\n      let filetype = header.type;\n        \n      if ( filetype == 'file' ){\n        stream.on('data', (data:any)=>{\n          console.log('Tar:unpack:entry:data',data)\n          let filename = fullpath.split(\"/\").slice(0,-1)[0];\n          let file:FsNodeFile = {path:fullpath, name:filename, content: data}\n          console.log('Tar:unpack:entry:file',file, stream.read)\n          files.push(file)\n        })\n      }else if ( filetype == 'directory' ){\n        let dirname = fullpath;\n        if( dirname.slice(-1) == '/' ) {dirname = dirname.slice(0,-1)}\n        let forder:FsNodeFolder = {path:fullpath, name:dirname, files:[], folders:[] }\n        console.log('Tar:unpack:entry:forder',forder)\n        folders.push(forder)\n      }\n      \n      // ready for next entry\n      stream.on('end', () => {\n        console.log('Tar:unpack:entry:end'); \n        next()\n      })\n\n      stream.resume() // just auto drain the stream\n    })\n\n    extract.on('finish', function() {\n      console.log('Tar:unpack:finish')\n      console.log('Tar:unpack:files',files)\n      console.log('Tar:unpack:folders',folders)\n      files.sort((a,b)=>a.path.length - b.path.length)\n      folders.sort((a,b)=>a.path.length - b.path.length)\n      // all entries read\n      if(cb){cb(files,folders)}\n    })\n\n    console.log('Tar:unpack:tarball',tarball)\n    console.log('Tar:unpack:extract',extract)\n\n    let tarData = new Uint8Array(tarball)\n    extract.write(tarData, (errr:any)=>{console.log(\"Tar:unpack:extract:write:\",errr)})\n    extract.end()\n    \n    \n  }\n\n  static pack(items: Array<FsNodeFile|FsNodeFolder>, cb:(tarbell:ArrayBuffer)=>void){\n    let pack = this.tarstream.pack() // pack is a stream\n    console.log(pack);\n\n    var length = 0\n    var chunks = new Array<any>();\n    pack.on('data', (chunk:ArrayBuffer)=>{\n      console.log('data:chunk:prototype:',chunk.constructor.name)\n      console.log('data:chunk:',chunk)\n      length += chunk.byteLength\n      chunks.push(chunk)\n    })\n\n    pack.on('end', ()=>{\n      // Create a new array with total length and merge all source arrays.\n      console.log(chunks)\n      let data = new Uint8Array(length);\n      let offset = 0;\n      chunks.forEach(item => {\n        data.set(item, offset);\n        offset += item.length;\n      });\n      console.log(data)\n      if(cb){cb(data)}\n    })\n\n    let processItems = function(items: Array<FsNodeFile|FsNodeFolder>){\n      let item = items.shift()\n      let file = item as FsNodeFile;\n      console.log(\"Tar:pack:item\", item)\n      \n      let content;\n      let header;\n      if( file.content ){\n        console.log(\"Tar:pack:file\", file)\n        if ( file.content instanceof ArrayBuffer ){\n          content = new Uint8Array(file.content)\n        }else{\n          content = file.content\n        }\n        header = {name: file.path}\n      } else {\n        header = {name: item!.path, type:\"directory\"}\n      }\n      \n      pack.entry(header, content, (error:any) => {\n        console.log(\"Tar:pack:onFinishEntry\", error)\n        if (error) { throw error }\n        if ( items.length == 0 ){\n          pack.finalize()\n        }else{\n          processItems(items)\n        }\n      })\n\n    }\n\n    console.log(\"Tar:pack:processItems\", items)\n    processItems(items)\n  }\n\n  \n  \n\n}\n\nexport interface FsNode {\n  name: string;\n  path: string;\n}\n\nexport interface FsNodeFolder extends FsNode {\n  folders: FsNodeFolder[];\n  files: FsNodeFile[];\n}\nexport interface FsNodeFile extends FsNode {\n  content:string|ArrayBuffer\n}\n\n\n\n\n\nexport interface FsServiceDriver {\n  rootDir:string;\n  \n  mount(path: string): Promise<boolean>;\n  \n  unmount(path: string): Promise<boolean>;\n\n  ready(): Promise<boolean>;\n\n  createDirectory(fullpath:string): Promise<boolean>;\n\n  writeFile(fullpath:string, content:string|ArrayBuffer): Promise<number>;\n\n  readFile(fullpath:string, binary?: boolean): Promise<string|ArrayBuffer|null>;\n\n  readDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  scanDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  delete(fullpath:string): Promise<boolean>;\n\n  exists(fullpath:string): Promise<boolean>;\n}\n\n\n\nexport class xxhash{\n  static sharedInstance:any;\n\n  static async load(){\n    const response = await fetch('/assets/xxhsum.wasm')\n    console.log(\"xxhash:load:response\", response);\n    const buffer = await response.arrayBuffer();\n    console.log(\"xxhash:load:buffer\", buffer);\n    WebAssembly.instantiate(buffer).then( result =>{ \n      console.log(\"xxhash:load:instance\", result.instance);\n      xxhash.sharedInstance = result.instance.exports;\n      console.log(\"xxhash:load:DONE\");\n    }).catch((error)=>{\n      console.log(\"xxhash:load:error\", error);\n    })\n  }\n\n  static async xxh128(data:string){\n      return xxhash.sharedInstance.XXH128(data,data.length)\n  }\n}\n\n//xxhash.load()","import { EventEmitter, Injectable } from '@angular/core';\n\nexport enum NotificationType{\n  Debug = 'debug',\n  Info = 'info',\n  Warning = 'warning',\n  Error = 'error',\n  System = 'system',\n  Default = Info\n}\n\nexport class NotificationMessage{\n  constructor(\n    public title: string,\n    public message: string,\n    public type = NotificationType.Info,\n    public timestamp = Date.now()\n  ){}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationManagerService {\n  history = new Array<NotificationMessage>();\n  \n  constructor() { }\n\n  public onNotification = new EventEmitter<NotificationMessage>();\n\n  sendNotification(title:string, message: string, type=NotificationType.Info){\n    let notification = new NotificationMessage(title, message, type);\n    this.onNotification.emit(notification)\n    this.history.push(notification)\n  }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { ApiService, } from '../api-service/api.service';\nimport { ArgDescriptor, ParamsMap, ProblemDescriptor, ProblemList, ProblemMap, ServiceDescriptor, ServiceMap } from './problem-manager.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemManagerService {\n  \n  selectedProblem?: ProblemDescriptor\n  selectedService?: ServiceDescriptor\n\n  problemList=new ProblemList();\n  problems=new ProblemMap();\n  services=new ServiceMap();\n  savedParams=new ParamsMap();\n  \n\n  public onProblemsChanged = new EventEmitter<boolean>();\n  public onError = new EventEmitter<any>();\n    \n  constructor(\n    public api:ApiService\n  ){}\n\n\n  updateProblems(){\n    this.selectedProblem=undefined;\n    this.selectedService=undefined;\n    this.problemList=[];\n    this.problems.clear();\n    this.services.clear();\n    this.onProblemsChanged.emit(true)\n\n    let req = this.api.problemList((problemMap) => {\n      console.log('apiProblemList:problemList:', problemMap)\n      problemMap.forEach(( problem, name )=>{\n        let problemDesc = new ProblemDescriptor(name, problem)\n        this.problemList.push(problemDesc)\n        this.problems.set(problemDesc.key,problemDesc);\n        problemDesc.services.forEach((serviceDesc)=>{\n          this.services.set(serviceDesc.key, serviceDesc)\n        })\n      })\n      this.onProblemsChanged.emit(false)\n    });\n    req.onError = (error) => { \n      this.onProblemsChanged.emit(false)\n      this.onError.emit(error) \n    };\n  }\n\n  \n  \n  selectProblem(selectedProblem: ProblemDescriptor){\n    this.selectedProblem = selectedProblem;\n    this.selectedService = undefined\n  }\n  \n\n  selectService(selectedService: ServiceDescriptor){\n    let name = selectedService.key;\n    if ( this.savedParams.has(name) ){\n      //TODO: Deep copy param values from  to selectedProblem object, to account for changes in the problem structure.\n      this.selectedService = this.savedParams.get(name)\n    }else{\n      this.savedParams.set(name,selectedService);\n      this.selectedService = selectedService;\n    }\n  }\n\n\n  validateArgs(service: ServiceDescriptor){\n    let issues = new Map<string,any>();\n    service.args.forEach((arg)=>{\n      let issue = this.validateArg(arg)\n      if(issue){issues.set(arg.key,issue)}\n    })\n    return issues;\n  }\n\n  validateArg(arg: ArgDescriptor){\n      //set\n      if (arg.regex === null){\n        console.log(\"validateArg:regex:null\")\n        return null\n      }\n\n      //valid re\n      let pattern;\n      try{\n        pattern = new RegExp(arg.regex)\n      }catch(error:any) { \n        console.log(\"validateArg:regex:invalid\")\n        return null;\n      }\n\n      //match\n      let match = arg.value.match(pattern)\n      console.log(\"validateArg:value:\",arg.value)\n      console.log(\"validateArg:pattern:\",pattern)\n      console.log(\"validateArg:match:\",match)\n      if(!match || match.length == 0){\n        console.log(\"validateArg:match:no\")\n        return arg.name + \": Validation error\";\n      }\n      console.log(\"validateArg:match:yes\")\n      return null;\n  }\n\n}\n","import { Packets } from '../api-service/api.packets';\nimport {  Meta } from '../api-service/api.service';\n\n\nexport class RawMap extends Map<string, Meta>{};\nexport class ProblemList extends Array<ProblemDescriptor>{};\nexport class ProblemMap extends Map<string, ProblemDescriptor>{};\nexport class ServiceMap extends Map<string, ServiceDescriptor>{};\nexport class ParamsMap extends ServiceMap{};\nexport class ArgsMap extends Map<string, ArgDescriptor>{};\nexport class FilesMap extends Map<string, FileDescriptor>{};\n\nexport class ProblemDescriptor {\n  public key;\n  public services=new ServiceMap();\n  \n  constructor(\n    public name:string, \n    meta:Meta,\n    ){\n      meta.services.forEach((service,serviceName)=>{\n        let serviceDesc = new ServiceDescriptor(serviceName,service,this)\n        this.services.set(serviceDesc.getKey(), serviceDesc)\n      })\n      this.key = this.getKey()\n    }\n\n    getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase()\n      key = key.replace(\"_+\",\"_\")\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      \n      return key\n    }\n}\n\nexport class ServiceDescriptor {\n  public key;\n  public args = new ArgsMap();\n  public evaluator;\n  public files = new FilesMap();\n  public filesOrder\n  constructor( public name:string, \n               service:Packets.Service,\n               public parent:ProblemDescriptor,\n    ){\n      this.evaluator = service.evaluator\n      \n      this.filesOrder = service.files ?? []\n      this.filesOrder.forEach(name =>{\n        let file = new FileDescriptor(name,this)\n        this.files.set(file.name,file)\n      })\n      service.args!.forEach((arg,argName)=>{\n        //console.log('ServiceDescriptor:constructor:arg', arg)\n        let argDesc = new ArgDescriptor(argName,arg,this)\n        this.args.set(argName,argDesc)\n      })\n      console.log('ServiceDescriptor:constructor:args', this.args)\n      this.key = this.getKey()\n    }\n\n    public getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase().trim()\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"_+\",\"_\")\n      return this.parent.getKey() + \"_\" + key\n    }\n\n    public exportArgs(){\n      let args:any = {}\n      this.args.forEach(arg=>{\n        args[arg.name]=arg.value\n      })\n      return args;\n    }\n\n    public exportFilesPaths(){\n      let fileArgs = new Map<string,string>();\n      this.filesOrder.forEach((name)=>{\n        let file = this.files.get(name)\n        if(!file || file.value==\"\"){return}\n        fileArgs.set(name,file.value)\n      })\n\n      return fileArgs\n    }\n}\n\nexport class ArgDescriptor{\n  public key;\n  public default: string\n  public regex: RegExp\n  public value: string\n  \n  constructor(\n    public name:string, \n    arg: Packets.Arg,\n    public parent: ServiceDescriptor\n    ){\n    this.default = arg.default\n    this.regex = arg.regex\n    this.value = arg.default\n    this.key = this.getKey()\n  }\n\n  getKey(){\n    let key = this.name.trim()\n    key = key.toLowerCase().trim()\n    key = key.replace(\" \",\"-\")\n    key = key.replace(\"[^a-z0-9_-]\",\"\")\n    key = key.replace(\"-+\",\"-\")\n    key = key.replace(\"_+\",\"_\")\n    return this.parent.getKey() + \"_\" + key\n  }\n}\n\nexport class FileDescriptor{\n  public key;\n  public value:string=\"\"; \n\n  constructor(\n    public name:string, \n    public parent: ServiceDescriptor\n    ){\n    this.key = this.getKey()\n  }\n\n  getKey(){\n    let key = this.name.trim()\n    key = key.toLowerCase().trim()\n    key = key.replace(\" \",\"-\")\n    key = key.replace(\"[^a-z0-9_-]\",\"\")\n    key = key.replace(\"-+\",\"-\")\n    key = key.replace(\"_+\",\"_\")\n    return this.parent.getKey() + \"_\" + key\n  }\n}\n\n\n","import { EventEmitter, Injectable, Input } from '@angular/core';\nimport { ApiService } from '../api-service/api.service';\nimport { ClangCompilerService } from '../clang-compiler-service/clang-compiler.service';\nimport { FsService } from '../fs-service/fs.service';\nimport { PyodideDriver } from '../python-compiler-service/pydiode-driver';\nimport { PythonCompilerService } from '../python-compiler-service/python-compiler.service';\nimport { ProjectEnvironment, ProjectType } from './project-manager.types';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectManagerService {\n  \n  projects = new Array<ProjectEnvironment>();\n  private _selectedProject?: ProjectEnvironment;\n  driver\n  \n  @Input(\"onProjectSelected\") onProjectSelected = new EventEmitter<ProjectEnvironment>();\n  @Input(\"onProjectListChanged\") onProjectListChanged = new EventEmitter<void>();\n\n  constructor(\n      public fs:FsService,  \n      public api:ApiService,\n      public python:PythonCompilerService,\n      public clang:ClangCompilerService,\n    ) {\n      this.driver = python.driver;\n  }\n\n\n  public set currentProject(project:ProjectEnvironment | undefined){\n    if(!project){return}\n    this.addProject(project)\n    this._selectedProject = project\n    this.onProjectSelected.emit(project)\n  }\n\n  public get currentProject(): ProjectEnvironment | undefined{\n    return this._selectedProject\n  }\n  \n\n\n  public createProject(name:string, mount:string, root:string, ){\n    let project = new ProjectEnvironment();\n    //TODO: \n    return project\n  }\n\n  public closeProject(project:ProjectEnvironment){\n    //TODO: \n    return project\n  }\n\n  public listProject(){\n    let projects = new Array<ProjectEnvironment>();\n    //TODO: \n    return projects\n  }\n\n  public addProject(project:ProjectEnvironment){\n    if( this.projects.indexOf(project) == -1 ){\n      this.projects.push(project)\n    }\n  }\n\n\n\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { Packets } from \"../api-service/api.packets\";\nimport { ApiService, Meta } from \"../api-service/api.service\";\nimport { ClangCompilerService } from \"../clang-compiler-service/clang-compiler.service\";\nimport { FsNodeFile, FsNodeFolder, FsNodeList, FsService, FsServiceDriver as FsDriver } from \"../fs-service/fs.service\"\nimport { PyodideDriver } from \"../python-compiler-service/pydiode-driver\";\nimport { PythonCompiler, PythonCompilerService } from \"../python-compiler-service/python-compiler.service\";\n\nexport enum ProjectType{\n  PY='PY',\n  C='C',\n  CPP='CPP',\n}\n\nexport class ProjectList extends Array<ProjectEnvironment>{}\n\n\nexport class ProjectEnvironment{\n\n  public config?: ProjectConfig;\n  public isLoaded = false;\n  \n  //FS\n  public fs?: FsDriver;\n  public fsroot?:FsNodeFolder;\n  public fslist?:FsNodeList;\n  public fslistfiles?:Array<FsNodeFile>;\n\n  //Compiler\n  public compiler?: PythonCompiler;\n  \n  async load(){\n    if(!this.fs){return false}\n    let config = await ProjectConfig.load(this.fs)\n    if(config){return false;}\n    //load more\n    return true;\n  }\n\n  public activate(){\n    //subscribe\n  }\n\n  public deactivate(){\n    //unsubscribe\n  }\n}\n\n\n\nexport class ProjectConfig {\n  RUN = \"/main.py\"\n  DEBUG = false //TODO\n  PROJECT_NAME=\"My solution\" //TODO\n  PREFERED_LANG=\"it\"\n  \n  TAL_SERVERS = [ //TODO\n    \"wss://ta.di.univr.it/sfide\",\n    \"wss://ta.di.univr.it/rtal\",\n    \"ws://localhost:8008/\",\n  ]\n  TAL_SERVER = \"wss://ta.di.univr.it/sfide\" //TODO\n  TAL_PROBLEM = \"\" //TODO\n  TAL_SERVICE = \"\" //TODO\n  TAL_TOKEN = \"\" //TODO\n\n  DIR_PROJECT = '/.talight/'\n  DIR_ATTACHMENTS = '/data/'\n  DIR_RESULTS = '/results/' //TODO\n  DIR_ARGSFILE = '/files/' //TODO\n  DIR_EXAMPLES = '/examples/'\n  CREATE_EXAMPLES = true\n\n  //TODO: hotkey manager service\n  HOTKEY_RUN = \"f8\"\n  HOTKEY_TEST = \"f9\"\n  HOTKEY_SAVE = \"ctrl+s\"\n\n  CONFIG_NAME = 'talight.json'\n  CONFIG_PATH = this.DIR_PROJECT + this.CONFIG_NAME\n\n  PIP_PACKAGES: string[] = []\n\n  public static readonly defaultConfig = new ProjectConfig()\n\n  static async load(fs:FsDriver, path?:string){\n    if(!path){ path = ProjectConfig.defaultConfig.CONFIG_PATH }\n    if (!await fs.exists(path)){\n      console.log(\"ProjectConfig:LoadConfig: Config file doesn't exisit!\")\n      return null;\n    }\n    \n    let configContent = await fs.readFile(path, false ) as string;\n    let config = JSON.parse(configContent) as ProjectConfig\n    return config\n  }\n\n  async save(fs:FsDriver){\n    let content = JSON.stringify(this, null, 4)\n    let res = await fs.writeFile(this.CONFIG_PATH, content); \n    return true\n  }\n}\n\n\n","import { FsNodeFolder, FsServiceDriver } from '../fs-service/fs.service';\nimport { PyodideState, PythonCompiler as PythonCompiler } from './python-compiler.service';\n\n// --- PyodideDriver --- \n\ntype UID = string; // should I ? \n\ntype PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\ntype stdCallback = (data:string)=>void;\ntype stateCallback = (state:PyodideState, content?:string)=>void;\ntype notifyCallback = (title:string, msg:string, kind:string)=>void;\n\n\nexport enum PyodideMessageType {\n  Ready = 'Ready', // Deprecated -> SubscribeState\n  Mount = 'Mount', //TODO\n  Unmount = 'Unmount', //TODO\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState  = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n}\nexport interface PyodideMessage {\n  uid: UID;\n  type: PyodideMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface PyodideRequest {\n  uid: UID;\n  timestamp: number;\n  message: PyodideMessage;\n}\n\nexport interface PyodideResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: PyodideMessage;\n  errors: string[];\n}\n\nexport interface PyodideRequestHandler {\n  uid: UID;\n  request: PyodideRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\nexport class PyodideDriver implements FsServiceDriver, PythonCompiler {\n  public worker: Worker;\n  public mountDir = \"/mnt\"\n  public homeDir = \"/\"\n  public rootDir = \".\"\n  public requestIndex = new Map<UID, PyodideRequestHandler>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  onStdout?: stdCallback\n  onStderr?: stdCallback\n  onState?: stateCallback\n  onNotify?: notifyCallback\n\n  constructor() {\n    //alert('driver built!');\n    this.worker = new Worker(new URL('../../workers/python-compiler.worker', import.meta.url));\n    this.worker.onmessage = (event: MessageEvent) => { this.didRecieve(event.data) };   \n    this.worker.addEventListener('error', (event) => { console.log('Workererror!')});\n  }\n\n\n\n  private didRecieve(response: PyodideResponse) {\n    if (!response) {return;}\n    console.log('PyodideFsDriver:didRecieve:', response.message.type, response);\n\n    let requestHandler = this.requestIndex.get(response.uid);\n    if (requestHandler != null) {\n      let removeRequest = true;\n      let msgSent = requestHandler.request.message;\n      let msgRecived = response.message;\n      let resolvePromise = requestHandler.resolvePromise;\n\n      switch(response.message.type){\n        case PyodideMessageType.Ready:           this.didReceiveReady(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.InstallPackages: this.didReceiveInstallPackages(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteCode:     this.didReceiveExecuteCode(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteFile:     this.didReceiveExecuteFile(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.StopExecution:     this.didReceiveStopExecution(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.SubscribeNotify: this.didReceiveSubscribeNotify(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeState:  this.didReceiveSubscribeState(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeStdout: this.didReceiveSubscribeStdout(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeStderr: this.didReceiveSubscribeStderr(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SendStdin:       this.didReceiveSendStdin(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.CreateDirectory: this.didReceiveCreateDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadDirectory:   this.didReceiveReadDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ScanDirectory:   this.didReceiveScanDirectory(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.WriteFile:       this.didReceiveWriteFile(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadFile:        this.didReceiveReadFile(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.Delete:          this.didReceiveDelete(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.Exists:          this.didReceiveExists(msgSent, msgRecived, resolvePromise); break;\n      }\n      \n      if (removeRequest){\n        this.requestIndex.delete(response.uid)\n      }\n    }\n  }\n\n  private didReceiveReady(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveReady: \")\n    let ready = msgRecived.args[0]\n    resolvePromise(ready == 'true'?true:false)\n  }\n\n  private didReceiveInstallPackages(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveInstallPackages: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveExecuteCode(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteCode: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveExecuteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteFile: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveStopExecution(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveStopExecution: \",msgRecived.args )\n    if (msgSent.args.length != 1){ \n      resolvePromise(false); \n    }\n\n    resolvePromise(true)\n  } \n\n  private didReceiveSubscribeNotify(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeNotify: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onNotify && msgRecived.contents.length > 1){\n      console.log(msgRecived.contents)\n      let [title, msg, kind] = msgRecived.contents\n      this.onNotify(this.toString(title), this.toString(msg), this.toString(kind))\n    }\n  } \n\n  private didReceiveSubscribeState(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeState: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onState && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let state = msgRecived.contents[0] as PyodideState\n      let content;\n      if(msgRecived.contents.length>1){\n        content = this.toString(msgRecived.contents[1])\n      }\n      this.onState(state,content)\n    }\n  } \n\n  private didReceiveSubscribeStdout(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStdout: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStdout && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStdout(this.toString(content))\n    }\n  } \n\n  private didReceiveSubscribeStderr(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStderr: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStderr && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStderr(this.toString(content))\n    }\n  } \n\n  private didReceiveSendStdin(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSendStdin: \")\n    if (msgRecived.args.length > 0){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n\n    resolvePromise(false)\n  } \n\n  private didReceiveCreateDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveCreateDirectory: \")\n    if (msgSent.args.length != 1){ \n      resolvePromise(false); \n    }\n    let pathSent = msgSent.args[0];\n    let pathRecived = msgRecived.args[0];\n\n    resolvePromise(pathSent == pathRecived)\n  } \n\n  private didReceiveReadDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let replacer = (key:any, value:any) => {\n      if (value instanceof ArrayBuffer){\n        let buffer = new Uint8Array(value)\n        return Array.from(buffer)\n      }\n      return value\n    }\n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.internal_jsonReplacer)\n    console.log(\"didReceiveReadDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  private didReceiveScanDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.internal_jsonReplacer)\n    console.log(\"didReceiveScanDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  private internal_jsonReplacer(key:any,value:any){\n    if ( typeof value !== 'object') {return value; }\n    //console.log('jsonReplacer:object:',key,value)\n    if (!(\"flags\" in value && \"constructor\" in value && \"data\" in value )){ return value; }\n    //console.log('jsonReplacer:constructor',value.constructor)\n    if ( value.constructor == 'ArrayBuffer' && value.data instanceof Array){\n      //console.log('jsonReplacer:ArrayBuffer')\n      let buffer = Uint8Array.from(value.data).buffer\n      console.log('jsonReplacer:ArrayBuffer',buffer)\n      return buffer;\n    }\n    return value\n  }\n  \n  private didReceiveReadFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string|ArrayBuffer> ){\n    console.log(\"didReceiveReadFile:\\n\", msgRecived.contents.length)\n    resolvePromise( msgRecived.contents[0] )\n  }\n  \n  private didReceiveWriteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<number> ){\n    console.log(\"didReceiveWriteFile: \")\n    console.log(msgRecived.args.length)\n    console.log(msgRecived.contents.length)\n    //TODO:\n    resolvePromise(msgRecived.contents.length)\n  }\n  \n\n  private didReceiveDelete(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveDelete: \")\n    resolvePromise(true)\n  }\n\n  private didReceiveExists(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveExists: \")\n    let res = msgRecived.args[0]\n    resolvePromise(res  == 'true' )\n  }\n\n  // SEND: INTERNAL\n\n  private sendMessage<T>(message: PyodideMessage) {\n    console.log(\"PyodideDriver:sendMessage:\"+message.type)\n    let request: PyodideRequest = {\n      uid: message.uid,\n      timestamp: Date.now(),\n      message: message\n    }\n\n    let promiseResolver: PromiseResolver<T>;\n    let resultPromise =  new Promise<T>((resolve, reject) => {\n      promiseResolver = resolve;\n    })\n    \n    let requestHandler: PyodideRequestHandler = {\n      uid: message.uid,\n      request: request,\n      resolvePromise: (value)=>{ promiseResolver(value) }\n    }\n\n    this.requestIndex.set(message.uid, requestHandler);\n    this.worker.postMessage(request);\n\n    return resultPromise;\n  }\n\n  //SEND: PUBLIC\n\n  public mount(path: string): Promise<boolean> {\n    //TODO\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Mount,\n      args: [path],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public unmount(path: string): Promise<boolean> {\n    //TODO\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Unmount,\n      args: [path],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async ready(): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Ready,\n      args: [],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async installPackages(packages: string[]): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.InstallPackages,\n      args: packages,\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async executeCode(code: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteCode,\n      args: [],\n      contents: [code],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async executeFile(fullpath: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async stopExecution(signal: number=2): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.StopExecution,\n      args: [signal.toString()],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    //TODO: stop pyodide gracefully -> stopExecution ( keyboard interrupt ) seams ineffetive\n    //let res = confirm(\"**WORK IN PROGRESS**\\nPurtroppo qualcosa è andato storto con le API e pyodide è rimasto appeso.\\nPer il momento mi tocca fare il reload della pagina.\")\n    //if(res){ window.location.reload() }\n\n    return resultPromise;\n  }\n\n  public subscribeNotify(enable=true, onNotify?:notifyCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeNotify,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onNotify && enable){\n      this.onNotify = (title: string, msg:string, kind:string=\"\")=>{\n        onNotify(title,msg,kind)\n      }\n    }else{\n      this.onNotify = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeState(enable=true, onState?:stateCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeState,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onState && enable){\n      this.onState = (state: PyodideState, content?:any)=>{onState(state,content)}\n    }else{\n      this.onState = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeStdout(enable=true, onStdout?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStdout,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStdout && enable){\n      this.onStdout = (msg:string)=>{onStdout(msg)}\n    }else{\n      this.onStdout = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeStderr(enable=true, onStderr?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStderr,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStderr && enable){\n      this.onStderr = (msg:string)=>{onStderr(msg)}\n    }else{\n      this.onStderr = undefined;\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public sendStdin(msg:string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SendStdin,\n      args: [],\n      contents: [msg],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  public async createDirectory(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.CreateDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async readFile(fullpath: string, binary: boolean=true): Promise<string|ArrayBuffer> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadFile,\n      args: [fullpath],\n      contents: [],\n    }\n    if(binary){message.args.push('binary');}\n    let resultPromise = this.sendMessage<string|ArrayBuffer>(message);\n    return resultPromise;\n  }\n\n  public async writeFile(fullpath: string, content: string|ArrayBuffer): Promise<number> {\n    console.log(\"writeFile: \"+fullpath)\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.WriteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    message.contents.push(content)\n    \n    let resultPromise = this.sendMessage<number>(message);\n    return resultPromise;\n  }\n\n  public async readDirectory(fullpath: string): Promise<FsNodeFolder | null> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n\n  public async scanDirectory(fullpath?: string, recursive = false, parent?: FsNodeFolder): Promise<FsNodeFolder | null> {\n    if (!fullpath) { fullpath = './' }\n    \n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ScanDirectory,\n      args: [fullpath, recursive?'recursive':'flat'],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n  public async delete(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Delete,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  public async exists(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Exists,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  private toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  private toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n\n\n  private requestUID(): UID {\n    var timestap = new Date().getTime();\n    let seed = Math.floor(Math.random() * 100000000);\n    return 'uid-' + timestap + '-' + seed;\n  }\n}\n  ","import { Injectable } from '@angular/core';\nimport { PyodideDriver } from './pydiode-driver';\nimport { FsService } from '../fs-service/fs.service';\nimport { ProjectConfig } from '../project-manager-service/project-manager.types';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PythonCompilerService {\n  public driverName = 'pyodide';\n  public projectFolder = ProjectConfig.defaultConfig.DIR_PROJECT\n  public configName = ProjectConfig.defaultConfig.CONFIG_NAME\n  public configPath = ProjectConfig.defaultConfig.CONFIG_PATH\n  \n  public driver?: PyodideDriver;\n  \n\n  constructor( private fs:FsService) { \n    this.driver = new PyodideDriver();\n    this.fs.registerDriver(this.driverName, this.driver); \n  }\n\n  async createPythonProject(){\n    console.log(\"createPythonProject\")\n    if (!this.driver) {return false}\n\n    let writeConfig = false\n    let config = await this.readPythonConfig();\n    if (!config){\n      config = new ProjectConfig()\n      writeConfig = true\n    }\n    \n    \n    //Starter files\n    let folders = [\n      config.DIR_PROJECT,\n      config.DIR_ATTACHMENTS,\n    ]\n    if(config.CREATE_EXAMPLES){ folders.push(config.DIR_EXAMPLES)}\n    \n    for(let i = 0; i < folders.length; i++){\n      console.log(\"createPythonProject:createDirectory:\",folders[i])\n      await this.driver?.createDirectory(folders[i]);\n    }\n\n    //TODO: load from external asset bundle\n    let files: string[][] = []\n    \n    let mainContent = `print(\"Hello World!\")`;\n    let inputExample = `# Esempio che mostra come utilizzare la funzione di input in ambiente asincrono\nnome = await input(\"Ciao, come ti chiami?\")\nprint(f'Ciao {nome}, posso farti una domanda ?')    \n\nasync def main():\n  while(True):\n    lati = await input(\"quanti lati ha un triangolo?\")\n    if lati==\"3\": break;\n    print(f'No, mi dispiace non ha {lati} lati')    \n  print('Congratulazioni!')\n\nmain()`\n\n    let freesumExample = `# Example: sum -> free sum\nwhile True:\n    line = await input()\n    #print(f\"# BOT: line={line}\")\n    if line[0] == '#':   # this is a commented line (sent by the service server)\n        if '# WE HAVE FINISHED' == line:\n            exit(0)   # exit upon termination of the service server\n    else:\n        n = int(line)\n        print(f\"{n} 0\")`\n\n    let sumExample = `# Example: sfilde: somma, sovle\ncnt = int(input())\nfor i in range(cnt):\n    line = input()\n    #print(\"line:\", line)\n    nums = line.split(\" \")\n    a = int(nums[0])\n    b = int(nums[1])\n    print(a+b)`    \n    \n    if(writeConfig){ \n      let configContent = JSON.stringify(config, null, 4)\n      files.unshift([config.CONFIG_PATH, configContent])\n    }\n\n    files.push([config.RUN, mainContent])\n    \n\n    let examples = [\n      [config.DIR_EXAMPLES + 'input.py', inputExample],\n      [config.DIR_EXAMPLES + 'freesum.py', freesumExample],\n      [config.DIR_EXAMPLES + 'sum.py', sumExample],\n    ]\n    if(config.CREATE_EXAMPLES){ files = files.concat(examples) }\n\n    \n    \n    \n    for(let i=0; i < files.length; i++){\n      let path = files[i][0]\n      let content = files[i][1]\n      console.log(\"createPythonProject:files:\", path, content)\n      if(await this.driver.exists(path)){\n        console.log(\"createPythonProject:files:SKIP:\", path)\n        continue;\n      }\n      await this.driver?.writeFile(path, content);  \n    }\n\n    return true\n  }\n\n  async readPythonConfig(){\n    if (!this.driver) {return null}\n\n    let defaultConfig = new ProjectConfig()\n    if (!await this.driver.exists(defaultConfig.CONFIG_PATH)){\n      console.log(\"readPythonConfig: config file doesn't exisit!\")\n      return null;\n    }\n    \n    let configContent = await this.driver?.readFile(defaultConfig.CONFIG_PATH, false ) as string;\n    let config = JSON.parse(configContent) as ProjectConfig\n    return config\n  }\n\n  \n  async runProject(){\n    let config = await this.readPythonConfig()\n    if (!config){return null;}\n    await this.driver?.installPackages(config.PIP_PACKAGES)\n    let result = await this.driver?.executeFile(config!.RUN)\n    console.log(result)\n    return result    \n  }\n\n  async installPackages(packages:string[]){\n    this.driver?.installPackages(packages)\n  }\n\n  async executeFile(fullpath:string){\n    this.driver?.executeFile(fullpath)\n  }\n\n}\n\n\nexport enum PyodideState {\n  Unknown = 'Unknown',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Killed = 'Killed',\n  Error = 'Error',\n}\n\n\nexport interface PythonCompiler{\n  installPackages(packages: string[]): Promise<string>;\n  executeCode(code: string): Promise<string>;\n  executeFile(fullpath: string): Promise<string>;\n  stopExecution(signal?: number): Promise<boolean>;\n  subscribeNotify(enable?:boolean, onNotify?:(title:string, msg:string, kind:string)=>void ): Promise<boolean>;\n  subscribeState(enable?:boolean, onState?:(state:PyodideState, content?:string)=>void ): Promise<boolean>;\n  subscribeStdout(enable?:boolean, onStdout?:(data:string)=>void): Promise<boolean>;\n  subscribeStderr(enable?:boolean, onStderr?:(data:string)=>void): Promise<boolean>;\n  sendStdin(msg:string): Promise<boolean> ;\n}\n\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport enum AppTheme {\n  light = \"light-theme.css\",\n  dark = \"dark-theme.css\",\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  public themeChanged: Subject<AppTheme> = new Subject<AppTheme>();\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    const storedTheme: AppTheme = localStorage.getItem('theme') as AppTheme || AppTheme.light;\n    this.setTheme(storedTheme);\n  }\n\n  public get currentTheme(): AppTheme {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    return storedTheme as AppTheme;\n  }\n\n  public setTheme(theme: AppTheme): void {\n    if (theme === AppTheme.light || theme === AppTheme.dark) {\n      let themeLink = this.document.getElementById('app-theme') as HTMLLinkElement;\n\n      if (themeLink) {\n        localStorage.setItem('theme', theme);\n        themeLink.href = theme;\n        this.themeChanged.next(theme);\n      }\n    }\n  }\n\n  public toggleTheme(): void {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    const newTheme: AppTheme = storedTheme === AppTheme.light ? AppTheme.dark : AppTheme.light;\n    this.setTheme(newTheme);\n  }\n\n  public themeName(): string {\n    switch (this.currentTheme) {\n      case AppTheme.dark:\n        return \"vs-dark\";\n      default:\n        return \"vs\";\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-connect-view',\n  templateUrl: './connect-view.component.html',\n  styleUrls: ['./connect-view.component.scss']\n})\nexport class ConnectViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Connettiti ad un server</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-form-input\">\n      <label for=\"serverurl\">Server Url</label>\n      <input name=\"serverurl\" input type=\"text\" pInputText placeholder=\"https://...\" />\n    </div>\n    <p class=\"tal-error\">\n      <i class=\"pi pi-times-circle\"></i>\n      <span>Questo è un errore</span>\n    </p>\n    <button  pButton>Connetti</button>\n  </div>\n\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ApiService, Meta } from 'src/app/services/api-service/api.service';\nimport { Commands } from 'src/app/services/api-service/api.commands';\nimport { xxhash128} from 'hash-wasm';\nimport { Buffer } from 'buffer';\n\n@Component({\n  selector: 'app-demo-view',\n  templateUrl: './demo-view.component.html',\n  styleUrls: ['./demo-view.component.scss']\n})\nexport class DemoViewComponent implements OnInit {\n  public output = \"\";\n  public cmdConnect?:Commands.Connect;\n\n  constructor(\n    private zone: NgZone,\n    private api: ApiService\n    ) {}\n\n  ngOnInit(): void {\n    //this.hashTest()\n    \n  }\n  //API Test\n    \n  async onApiError(message: string){\n    alert(\"Error: \"+message)\n  }\n\n  public refreshOutput() {\n    this.zone.run(() => this.output += \"\")\n  }\n\n  async apiProblemList() {\n    let onSuccess = (problemList:Map<string, Meta>)=>{ \n      console.log(problemList);\n      this.refreshOutput();\n    }\n    let req = this.api.problemList( onSuccess );\n    req.onError = this.onApiError;\n  }\n\n  async apiGetAttachment() {\n    let problem_name = \"piastrelle\";\n\n    let onAttachment = ()=>{console.log(\"Attachment packet received\")};\n    let onAttachmentInfo = (onAttachmentInfo: any) => {console.log(onAttachmentInfo)};\n    \n    let onData = (data: ArrayBuffer)=>{\n      console.log(data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.GetAttachment(problem_name, onAttachment, onAttachmentInfo, onData);\n    req.onError = this.onApiError;\n\n  }\n  \n\n  async apiConnect() {\n    let problem_name = \"sum_testAPI\";\n    let service = \"free_sum\";\n\n    let onConnectionBegin = (onConnectionBegin: string[]) => {console.log(\"Connection Begin -> \" + onConnectionBegin); };\n    let onConnectionStart = () => {console.log(\"Connection Start\")};\n    let onConnectionClose = (onConnectionClose: string[]) => {console.log(onConnectionClose)};\n    \n    let onData = (data: string)=>{\n      this.output += ''+data\n      console.log(\"Binary data: \"+data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.Connect(problem_name, service, undefined, undefined, undefined, undefined, onConnectionBegin, onConnectionStart, onConnectionClose, onData);\n    req.onError = this.onApiError;\n\n    this.cmdConnect = req;\n\n    this.sendBinary();\n  }\n\n  //OLD\n\n  async apiConnectOld() {\n    let problem_name = \"sum_testAPI\";\n    let service = \"free_sum\";\n\n    let onConnectionBegin = (onConnectionBegin: string[]) => {console.log(\"Connection Begin -> \" + onConnectionBegin); };\n    let onConnectionStart = () => {console.log(\"Connection Start\")};\n    let onConnectionClose = (onConnectionClose: string[]) => {console.log(onConnectionClose)};\n    \n    let onData = (data: string)=>{\n      this.output += ''+data\n      console.log(\"Binary data: \"+data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.Connect(problem_name, service, undefined, undefined, undefined, undefined, onConnectionBegin, onConnectionStart, onConnectionClose, onData);\n    req.onError = this.onApiError;\n\n    this.cmdConnect = req;\n\n    this.sendBinary();\n  }\n\n  async sendBinary() {\n    setTimeout(() => {this.cmdConnect?.sendBinary(\"100 0\\n\");}, 1500);\n    //setTimeout(() => {this.cmdConnect?.sendConnectStop();}, 2500);\n    /*\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 2500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 3500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 4500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 5500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 6500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 7500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 8500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 9500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 10500);\n    */\n\n    setTimeout(() => {console.log(\"this.cmdConnect!.tal.isOpen()\");\n    console.log(this.cmdConnect!.tal.isOpen());}, 2500);\n  }\n\n  async hashTest(){\n    let hex = await xxhash128(Buffer.from(\"ciao\"));\n    let dec = parseInt(hex,16)\n    alert(hex);\n    alert(dec);\n  }\n}\n","<script>\nfunction testxx(){\n    alert(1)\n}\n</script>\n<script src=\"/assets/xxhsum.js\" type=\"javascript\"></script>\n<div style=\"display:flex; flex-direction: column\">\n    <div>\n        <div>\n            API Demo\n        </div>\n        <div>\n            <button (click)=\"apiProblemList()\">Problem List</button>\n            <button (click)=\"apiGetAttachment()\">Get Attachment</button>\n            <button (click)=\"apiConnectOld()\">Connect Old</button>\n            <button (click)=\"apiConnect()\">Connect</button>\n            <button (click)=\"hashTest()\">Hash</button>\n        </div>\n    </div>\n    \n    \n    <div>\n        <pre>{{output}}</pre>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CodeEditorComponent } from 'src/app/widgets/code-editor/code-editor/code-editor.component';\n\n\n@Component({\n  selector: 'tal-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.scss']\n})\nexport class HomeViewComponent implements OnInit {\n  \n  @ViewChild(\"codeEditor\") public codeEditor!: CodeEditorComponent;\n\n  constructor(\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-home-container\">\n  <div class=\"tal-home-editor\">\n    <tal-code-editor #codeEditor></tal-code-editor>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-select-problem-view',\n  templateUrl: './select-problem-view.component.html',\n  styleUrls: ['./select-problem-view.component.scss']\n})\nexport class SelectProblemViewComponent implements OnInit {\n\n  public problems: any[] = [\n    {\n      id: 1, name: 'Problem 1',\n    },\n    {\n      id: 2, name: 'Problem 2',\n    },\n    {\n      id: 3, name: 'Problem 3',\n    },\n    {\n      id: 4, name: 'Problem 4',\n    },\n  ];\n\n  public selectedProblem: any = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Seleziona un problema da risolvere</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-problems-list\">\n      <ng-container *ngFor=\"let problem of problems\">\n        <div class=\"tal-problem\" (click)=\"selectedProblem=problem.id\">\n          <p-radioButton name=\"groupname\" [value]=\"problem.id\" [(ngModel)]=\"selectedProblem\">\n          </p-radioButton>\n          <div class=\"tal-problem-details\">\n            <p>{{problem.name}}</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <button pButton>Inizia</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileExplorerWidgetComponent } from './file-explorer-widget/file-explorer-widget.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { FormsModule } from '@angular/forms';\nimport { ConfirmationService, SharedModule } from 'primeng/api';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { SplitterModule } from 'primeng/splitter';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileEditorWidgetComponent } from './file-editor-widget/file-editor-widget.component';\nimport { ExecbarWidgetComponent } from './execbar-widget/execbar-widget.component';\nimport { ProblemWidgetComponent } from './problem-widget/problem-widget.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MonacoEditorWidgetComponent } from './monaco-editor-widget/monaco-editor-widget.component';\nimport { OutputWidgetComponent } from './output-widget/output-widget.component';\nimport {TabViewModule} from 'primeng/tabview';\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\n\n@NgModule({\n  declarations: [\n    FileExplorerWidgetComponent,\n    FileEditorWidgetComponent,\n    CodeEditorComponent,\n    ExecbarWidgetComponent,\n    ProblemWidgetComponent,\n    MonacoEditorWidgetComponent,\n    OutputWidgetComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MonacoEditorModule,\n    ConfirmDialogModule,\n    OverlayPanelModule,\n    SplitterModule,\n    SharedModule,\n    TooltipModule,\n    DropdownModule,\n    TabViewModule,\n    ScrollPanelModule,\n  ],\n  exports: [\n    FileExplorerWidgetComponent,\n    CodeEditorComponent\n  ],\n  providers: [ ConfirmationService ],\n})\nexport class CodeEditorModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Commands } from 'src/app/services/api-service/api.commands';\nimport { ApiService } from 'src/app/services/api-service/api.service';\n\nimport { FsService, FsNodeFile, Tar, FsNodeFolder, FsNodeList } from 'src/app/services/fs-service/fs.service';\nimport { NotificationManagerService, NotificationType } from 'src/app/services/notification-mananger-service/notification-manager.service';\nimport { ProblemDescriptor, ServiceDescriptor } from 'src/app/services/problem-manager-service/problem-manager.types';\n\nimport { ProjectManagerService } from 'src/app/services/project-manager-service/project-manager.service';\nimport { ProjectEnvironment } from 'src/app/services/project-manager-service/project-manager.types';\n\nimport { PyodideState, PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\nimport { FileExplorerWidgetComponent } from 'src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component';\nimport { ExecbarWidgetComponent } from '../execbar-widget/execbar-widget.component';\nimport { FileEditorWidgetComponent } from '../file-editor-widget/file-editor-widget.component';\nimport { OutputType, OutputWidgetComponent } from '../output-widget/output-widget.component';\nimport { ProblemWidgetComponent } from '../problem-widget/problem-widget.component';\n\n@Component({\n  selector: 'tal-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss']\n})\nexport class CodeEditorComponent implements OnInit {\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  public cmdConnect?:Commands.Connect;\n  \n  public currentProject?:ProjectEnvironment;\n\n  public selectedFile?: FsNodeFile;\n  public selectedProblem?: ProblemDescriptor;\n  public selectedService?: ServiceDescriptor;\n  public driver;\n  public pyodideState = PyodideState.Unknown\n  public pyodideStateContent? = \"\"\n\n  public fsroot = FsService.EmptyFolder;\n  public fslist: FsNodeList = [];\n  public fslistfile: FsNodeFile[] = [];\n\n  @ViewChild(\"fileExplorer\") public fileExplorer!: FileExplorerWidgetComponent;\n  @ViewChild(\"fileEditor\") public fileEditor!: FileEditorWidgetComponent;\n  @ViewChild(\"execBar\") public execBar!: ExecbarWidgetComponent;\n  @ViewChild(\"problemWidget\") public problemWidget!: ProblemWidgetComponent;\n  @ViewChild(\"outputWidget\") public outputWidget!: OutputWidgetComponent;\n\n  private output_files:string[]|undefined = undefined;\n  private current_output_file:string|undefined = undefined;\n  \n  constructor(\n    private fs: FsService,\n    private python:PythonCompilerService,\n    private api:ApiService,\n    private nm: NotificationManagerService,\n    private pm: ProjectManagerService,\n  ) {\n    if(!pm.currentProject ){\n      let project = pm.createProject('My Solution', '/mnt','/');\n      pm.currentProject = project;\n    }\n\n    this.driver = python.driver\n  }\n\n  ngOnInit(): void {\n    this.python.driver?.subscribeNotify(true,(msg)=>{this.didNotify(msg)})\n    this.python.driver?.subscribeState(true,(state:PyodideState,content?:string)=>{this.didStateChange(state,content)})\n    this.python.driver?.subscribeStdout(true,(msg)=>{this.didStdout(msg)})\n    this.python.driver?.subscribeStderr(true,(msg)=>{this.didStderr(msg)})\n  }\n\n  ngAfterViewInit(){\n    this.outputWidget.enableStdin(false); \n  }\n\n  public onUpdateRoot(fsroot:FsNodeFolder){\n    this.fsroot = fsroot;\n    this.fslist = this.fs.treeToList(fsroot);\n    this.fslistfile = this.fslist.filter( item=>\"content\" in item ) as FsNodeFile[]\n    let filePathList = new Array<string>()\n    this.fslistfile.forEach(item=>filePathList.push(item.path))\n    this.problemWidget.filePathList = filePathList\n  }\n  \n  public didNotify(data:string){\n    console.log(\"didNotify:\")\n    this.outputWidget!.print(data);\n    //TODO: if API connect then:\n    if(!this.cmdConnect){return;}\n    this.cmdConnect.sendBinary(data + \"\\n\"); //lo \\n va aggiunto all'output del bot python\n  }\n\n  public didStateChange(state:PyodideState,content?:string){\n    console.log(\"didStateChange:\")\n    //this.outputWidget!.print(state,OutputType.SYSTEM);\n    this.pyodideState=state\n    this.pyodideStateContent=content\n    this.outputWidget.didStateChange(state,content)\n  }\n\n  public didStdout(data:string){\n    console.log(\"onStdout:\")\n    this.outputWidget!.print(data);\n    //TODO: if API connect then:\n    if(!this.cmdConnect){return;}\n    this.cmdConnect.sendBinary(data + \"\\n\"); //lo \\n va aggiunto all'output del bot python\n  }\n\n  public didStderr(data:string){\n    console.log(\"onStderr:\")\n    //alert(\"STDERR: \"+data)\n    //this.nm.sendNotification(\"ERROR:\",data,NotificationType.Error)\n    this.outputWidget.print(data, OutputType.STDERR)\n  }\n\n  public sendStdin(msg:string, fromAPI=false){\n    console.log(\"sendStdin:\")\n    let msgs = msg.split(\"\\n\");\n    if(msgs[msgs.length - 1] === \"\") {msgs.pop();}\n    console.log(\"sendStdin:split: \", msgs)\n\n    for(let i = 0; i < msgs.length; i++){\n      this.outputWidget.print(msgs[i],fromAPI?OutputType.STDINAPI:OutputType.STDIN)\n      this.python.driver?.sendStdin(msgs[i])\n    }\n    if (fromAPI || this.pyodideState != PyodideState.Stdin ){\n      this.outputWidget.enableStdin(false)\n    }\n  }\n\n  public onProblemChanged(selectedProblem: ProblemDescriptor){\n    console.log(\"onProblemChanged:\",selectedProblem)\n    this.selectedProblem=selectedProblem;\n    this.selectedService=undefined;\n  }\n\n  public onServiceChanged(selectedService: ServiceDescriptor){\n    console.log(\"onServiceChanged:\",selectedService)\n    this.selectedService=selectedService;\n\n  }\n\n  async onAttachments(data: ArrayBuffer){\n    console.log(\"onAttachments:\",data)\n    if(!this.selectedProblem){return;}\n    console.log(\"onAttachments:selectedProblem:\",this.selectedProblem)\n    if (!(data instanceof ArrayBuffer ) ) {return;}\n    console.log(\"onAttachments:data:\",data)\n\n    console.log(\"extractTar:unpack:\")\n    Tar.unpack(data, async (files,folders) => {\n      console.log(\"extractTar:unpack:folders\",folders)\n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = '/data/' + folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n\n\n      console.log(\"extractTar:unpack:files\",files)\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = '/data/' + file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      \n      \n      this.fileExplorer.refreshRoot()\n    });\n    \n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.selectedFile = file;\n    this.execBar.selectedFile = this.selectedFile\n    this.fileEditor.selectedFile = this.selectedFile \n  }\n\n  public editorDidChange(file: FsNodeFile){\n    console.log(\"editorDidChange:\")\n    this.saveFile()\n  }\n\n  public editorDidInput(event: InputEvent){\n    console.log(\"Input: \", this.fileEditor)\n    this.saveFile()\n  }\n\n  public saveFile(){\n    if ( this.selectedFile ){ \n      console.log(\"saveFile:\", this.selectedFile.path, this.fileEditor)\n      this.driver?.writeFile(this.selectedFile.path, this.selectedFile.content)\n    } else {\n      console.log(\"saveFile:failed\")\n    }\n  }\n\n  async stopAll(){\n    console.log(\"stopAll:\")\n\n    if(this.cmdConnect){this.cmdConnect.tal.closeConnection()}\n    console.log(\"stopAll:cmdConnect:DONE\")\n    await this.driver?.stopExecution()\n    console.log(\"stopAll:cmdConnect:DONE\")\n  }\n  \n  //-------------- API CONNECT\n  public async runProject(useAPI = false){\n    console.log(\"runProject:\")\n    this.outputWidget.clearOutput()\n    \n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n    console.log(\"runProject:config:ok\")\n\n\n    console.log(\"runProject:main:\", config!.RUN)\n    let mainFile = this.fslistfile.find( item => item.path == config!.RUN)\n    if (!mainFile){return false}\n    console.log(\"runProject:main:ok\")\n    this.fileExplorer.selectFile(mainFile)\n\n    this.outputWidget.print(\"RUN: \"+config.RUN, OutputType.SYSTEM)\n    this.saveFile();\n    \n    await this.python.runProject()\n    return true\n  }\n\n\n  public async runConnectAPI(){\n    this.outputWidget.clearOutput()\n    this.saveFile();\n    \n    \n    this.apiConnect().then(()=>{\n      //TODO: on success, new files are downloaded \n      //this.fileExplorer.refreshRoot()\n    })\n  }\n  \n  \n  async apiConnect(){\n    console.log(\"apiConnect\")\n\n    if(!this.selectedService){\n      this.outputWidget.print(\"No problem selected\", OutputType.STDERR)\n      return false\n    }\n    console.log(\"apiConnect:service:ok\")\n    \n\n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n    console.log(\"apiConnect:config:ok\")\n\n    //Run MAIN\n    console.log(\"apiConnect:runProject\")\n    this.saveFile();\n    await this.python.runProject()\n    this.outputWidget.print(\"API: \"+config.RUN, OutputType.SYSTEM)\n    console.log(\"apiConnect:runProject:running\")\n\n    //Open Connection\n    let problem = this.selectedService.parent.name;\n    let service = this.selectedService.name;\n    let args = this.selectedService.exportArgs();\n    let tty = false //true: bash code coloring, backspaces, etc\n    let token =  (config.TAL_TOKEN && config.TAL_TOKEN!=\"\"?config.TAL_TOKEN:undefined)\n    let filePaths = this.selectedService.exportFilesPaths();\n    let files =  new Map<string,string>();\n\n    filePaths.forEach((fileArgPath, fileArgName)=>{\n      console.log(\"apiConnect:params:problem:path:\", fileArgName, fileArgPath)\n      let found = this.fslistfile.find(item => item.path == fileArgPath)\n      console.log(\"apiConnect:params:problem:found:\", found)\n      if(!found){return}\n      let content = found.content\n      if(content instanceof ArrayBuffer){\n        content = this.binDecoder.decode(content)\n      }\n      files.set(fileArgName, content)\n    })\n\n    \n    console.log(\"apiConnect:params:problem\",problem)\n    console.log(\"apiConnect:params:service\",service)\n    console.log(\"apiConnect:params:args\",args)\n    console.log(\"apiConnect:params:tty\",tty)\n    console.log(\"apiConnect:params:token\",token)\n    console.log(\"apiConnect:params:files\",files)\n\n    \n    let onConnectionStart = () => {this.didConnectStart()};\n    let onConnectionBegin = (msg: string[]) => {this.didConnectBegin(msg)};\n    let onConnectionClose = (msg: string[]) => {this.didConnectClose(msg)};\n    let onData = (data: string)=>{ this.didConnectData(data)};\n    let onBinaryHeader = (msg: any)=>{ this.didRecieveBinaryHeader(msg)};\n\n    this.cmdConnect = await this.api.Connect(\n      problem, \n      service, \n      args,\n      tty,\n      token,\n      files,\n      onConnectionBegin,\n      onConnectionStart,\n      onConnectionClose,\n      onData,\n      onBinaryHeader\n    );\n    console.log(\"apiConnect:DONE\")\n    \n \n    console.log(\"apiConnect:runProject\")\n    this.saveFile();\n    await this.python.runProject()\n    this.outputWidget.print(\"API: \"+config.RUN, OutputType.SYSTEM)\n    console.log(\"apiConnect:runProject:running\")\n    \n    \n    return true\n  }\n\n  async didConnectError(error: string){\n    console.log(\"apiConnect:didConnectError:\", error)\n    this.outputWidget.print(\"API Error: \"+error,OutputType.STDERR)\n    this.cmdConnect = undefined\n    this.outputWidget.enableStdin(false)\n\n    this.python.driver?.stopExecution()\n  }\n\n  async didConnectStart(){\n    console.log(\"apiConnect:didConnectStart\")\n  }\n\n  async didConnectBegin(message: string[]){\n    console.log(\"apiConnect:didConnectBegin:\", message)\n  }\n\n  async didConnectClose(message: string[]){\n    console.log(\"apiConnect:didConnectionClose:\",message)\n\n    if(message && message.length > 0 && message[0] !== \"\") {\n      this.output_files = message;\n    }\n    else {\n      this.cmdConnect = undefined;\n      console.log(\"apiConncect:cmdConnect:value:\", this.cmdConnect);\n    }\n  }\n\n  async didConnectData(data: string){\n    console.log(\"apiConnect:didConnectData:\", data)\n    if(this.output_files && this.current_output_file){\n      if(this.current_output_file){\n        this.driver?.writeFile(\"/\" + this.current_output_file, data)\n      };\n      if(this.current_output_file === this.output_files[this.output_files.length - 1]){\n        this.cmdConnect = undefined;\n      }\n      console.log(\"apiConncect:cmdConnect:value:\", this.cmdConnect);\n    }\n    else {\n      this.sendStdin(data, true);\n    }\n  }\n\n  async didRecieveBinaryHeader(message: any){\n    console.log(\"apiConnect:didRecieveBinaryHeader:\", message)\n\n    this.current_output_file = message.name;\n    if(this.current_output_file){this.driver?.writeFile(\"/\" + this.current_output_file, \"\")};\n  }\n}\n","\n<div class=\"tal-editor\">\n  <p-splitter [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50,35]\" [minSizes]=\"[12,20,20]\">\n\n\n    \n    <ng-template pTemplate>\n      <div class=\"tal-editor-files\">\n        <tal-file-explorer-widget #fileExplorer \n          (onUpdateRoot)=\"onUpdateRoot($event)\"\n          (onSelectFile)=\"selectFile($event)\">\n        </tal-file-explorer-widget>\n      </div>\n    </ng-template>\n\n\n\n    <ng-template pTemplate>\n      \n        <div class=\"tal-code-editor-container\">\n\n          <div class=\"tal-code-editor-header\">\n            <tal-execbar-widget #execBar \n              (onStop)=\"stopAll()\"\n              (onRun)=\"runProject()\"\n              (onConnect)=\"runConnectAPI()\"\n              [selectedFile]=\"selectedFile\">\n            </tal-execbar-widget>\n          </div>\n\n          <div class=\"tal-code-editor\">\n            <tal-file-editor-widget #fileEditor\n              (onChange)=\"editorDidChange($event)\">\n            </tal-file-editor-widget>\n          </div>\n\n        </div>\n      \n    </ng-template>\n\n\n    <ng-template pTemplate>\n      <p-splitter id=\"tal-problem-column\" [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50]\" [minSizes]=\"[12,20]\" layout=\"vertical\">\n\n        <ng-template pTemplate>\n          <tal-problem-widget #problemWidget \n            (onAttachments)=\"onAttachments($event)\"\n            (onProblemChanged)=\"onProblemChanged($event)\"\n            (onServiceChanged)=\"onServiceChanged($event)\">\n          </tal-problem-widget>\n        </ng-template>\n\n        <ng-template pTemplate>\n          <tal-output-widget #outputWidget \n            (onStdin)=\"sendStdin($event)\">\n          </tal-output-widget>\n        </ng-template>\n        \n      </p-splitter>\n    </ng-template>\n\n  </p-splitter>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FsNodeFile, FsNodeFolder } from 'src/app/services/fs-service/fs.service';\n\n@Component({\n  selector: 'tal-execbar-widget',\n  templateUrl: './execbar-widget.component.html',\n  styleUrls: ['./execbar-widget.component.scss']\n})\nexport class ExecbarWidgetComponent implements OnInit {\n  @Input('selectedFile') selectedFile?:FsNodeFile\n\n  @Output('onStop') public onStop = new EventEmitter<void>();\n  @Output('onRun') public onRun = new EventEmitter<FsNodeFile>();\n  @Output('onConnect') public onConnect = new EventEmitter<FsNodeFile>();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onStopClick(){\n    this.onStop.emit()\n  }\n\n  public onRunClick(){\n    this.onRun.emit(this.selectedFile)\n  }\n\n  public onConnectClick(){\n    this.onConnect.emit(this.selectedFile)\n  }\n\n}\n","<div class=\"tal-code-editor-execbar\">\n    <div class=\"tal-code-editor-execbar-left\">\n        <h3>{{selectedFile?.name}}</h3>\n    </div>\n    \n    <div class=\"tal-code-editor-execbar-right\">\n        <button pButton icon=\"pi pi-stop\" class=\"tal-square-button\" (click)=\"onStopClick()\" title=\"Stop Pyodide\"></button>\n        <button pButton icon=\"pi pi-play\" class=\"tal-square-button\" (click)=\"onRunClick()\" title=\"Run locally\"></button>\n        <button pButton icon=\"pi pi-cloud-upload\" class=\"tal-square-button\" (click)=\"onConnectClick()\" title=\"Verify solution with TALight server\"></button>\n    </div>\n</div>","import { Component, ElementRef, EventEmitter, Input,  OnInit, Output, ViewChild } from '@angular/core';\nimport { encode } from 'base64-arraybuffer';\nimport { marked } from 'marked';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\nimport { MonacoEditorWidgetComponent } from '../monaco-editor-widget/monaco-editor-widget.component';\n\n// Editor UI\nexport enum EditorType{\n  None,\n  Code,\n  Archive,\n  Markdown,\n  Image,\n  Browser,\n  Unknown,\n  Default = Browser,\n}\n\nexport enum MatchMethod{\n  Auto,\n  Exact,\n  Glob,\n  Regex,\n  Default = Auto,\n}\nexport enum MatchType{\n  Auto,\n  Extension,\n  Mime, //TODO: \n  Default = Auto,\n}\n\n//Editor Options\nexport class EditorOptions{}\nexport class EditorOptionsMonaco extends EditorOptions{\n  constructor(\n    public language = \"python\",\n  ){super()}\n}\nexport class EditorOptionsBrowser extends EditorOptions{\n  constructor(\n    public embedded = true,\n    public mime = 'application/octet'\n  ){super()}\n}\n\n\n//File Assoc\nexport class FileAssociation{\n  constructor(\n    public pattern=\".*\",\n    public editorType = EditorType.None,\n    public editorOption?: EditorOptions,\n    public priority=0,\n    public matchMethod = MatchMethod.Auto, \n    public matchType = MatchType.Auto, \n  ){}\n  \n  match(file:FsNodeFile){\n    let parts = file.name.split(\".\")\n    console.log('FileAssociation:match:',parts)\n    if (parts.length > 1){\n      let ext = parts.splice(-1)[0]\n      console.log('FileAssociation:ext:',ext)\n      if(this.pattern==ext) { return true } \n      if(ext.match(this.pattern)){ return true } \n    } else {\n      //TODO: mime-magic matching\n    }\n\n    return false; //No match\n  }\n\n  static matchAll(file:FsNodeFile, associations:FileAssociation[]){\n    let matches:FileAssociation[] = []\n    associations.forEach((association)=>{\n      if(association.match(file)){\n        matches.push(association)\n      }\n    })\n\n    matches = matches.sort((a,b)=>{\n      return b.priority-a.priority\n    })\n\n    return matches;\n  }\n}\n\n\nexport class FileAssociationChoiceList{\n  public associations: FileAssociation[]\n  constructor(items: FileAssociation[]){ \n    this.associations = Array.from(items)\n  }\n  add(item: FileAssociation){ \n    if(this.associations.includes(item)){return;}\n    this.associations.push(item)\n  }\n  match(file:FsNodeFile){\n    let matches = FileAssociation.matchAll(file, this.associations)\n    console.log('FileAssociationChoiceList:match:',matches)\n    if(matches.length == 0){return null}\n    let bestMatch = matches[0]\n    return bestMatch;\n  }\n}\n\n\n\n@Component({\n  selector: 'tal-file-editor-widget',\n  templateUrl: './file-editor-widget.component.html',\n  styleUrls: ['./file-editor-widget.component.scss']\n})\nexport class FileEditorWidgetComponent implements OnInit {\n\n  EditorType = EditorType\n  public editorType = EditorType.None\n  public editorOption?:EditorOptions\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n\n  fileAssocList = new FileAssociationChoiceList([\n    //Code\n    new FileAssociation('py', EditorType.Code, new EditorOptionsMonaco('python')),\n    new FileAssociation('csv', EditorType.Code, new EditorOptionsMonaco('csv')),\n    new FileAssociation('json', EditorType.Code, new EditorOptionsMonaco('json')),\n    new FileAssociation('txt', EditorType.Code, new EditorOptionsMonaco('text')),\n    new FileAssociation('js', EditorType.Code, new EditorOptionsMonaco('javascript')),\n    new FileAssociation('yaml', EditorType.Code, new EditorOptionsMonaco('yaml')),\n    \n    //Markdown\n    new FileAssociation('md', EditorType.Markdown, new EditorOptionsMonaco('markdown')),\n\n    //Archive\n    new FileAssociation('tar', EditorType.Archive),\n    new FileAssociation('zip', EditorType.Archive),\n\n    //PDF\n    new FileAssociation('pdf', EditorType.Browser, new EditorOptionsBrowser(true,'application/pdf')),\n\n    //Images\n    new FileAssociation('png', EditorType.Browser, new EditorOptionsBrowser(true,'image/png')),\n    new FileAssociation('jpg', EditorType.Browser, new EditorOptionsBrowser(true,'image/jpg')),\n\n    //Other\n    new FileAssociation('.*', EditorType.Browser, new EditorOptionsBrowser(true),-10),\n  ])\n  \n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @ViewChild(\"monacoEditor\") public monacoEditor!: MonacoEditorWidgetComponent;\n  @ViewChild(\"browserEditor\") public browserEditor!: ElementRef;\n  @ViewChild(\"imageViewer\") public imageViewer!: ElementRef;\n  @ViewChild(\"markdownPreview\") public markdownPreview!: ElementRef;\n  \n\n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n\n  constructor(\n    private readonly themeService: ThemeService, \n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    console.log('selectedFile:',selectedFile)\n    this.selectEditor()\n  }\n\n  public selectEditor(){\n    if(!this._selectedFile) { \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    \n    let bestMatch = this.fileAssocList.match(this._selectedFile)\n    if(!bestMatch){ \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    this.editorType = bestMatch.editorType\n    this.editorOption = bestMatch.editorOption\n\n    console.log(\"selectEditor:\",this.editorType)\n    console.log(\"selectEditor:editorOption:\",this.editorOption)\n    \n    this.openEditor()\n  }\n\n  public async openEditor(){\n    if (!this.selectedFile){return}\n    console.log('openEditor:', this.editorType.toString())\n    switch(this.editorType){\n      case EditorType.Markdown:\n        let markdownBox = this.markdownPreview.nativeElement as HTMLDivElement;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        markdownBox.innerHTML = await marked( this.selectedFile.content )\n        break;\n      case EditorType.Code: \n        let monacoOptions = this.editorOption as EditorOptionsMonaco;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        this.monacoEditor.selectedFile = this.selectedFile\n        this.monacoEditor.language = monacoOptions.language;\n        this.monacoEditor.updateEditorOptions()\n        break;\n      case EditorType.Browser: \n        let browserOptions = this.editorOption as EditorOptionsBrowser;\n        let iframe = this.browserEditor.nativeElement as HTMLIFrameElement;\n        let header = 'data:'+browserOptions.mime+';'\n        let body;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          console.log('openEditor:Browser:',Array.from(new Uint8Array(this.selectedFile.content) ) )\n          body = encode(this.selectedFile.content)\n        }else{\n          body = btoa(this.selectedFile.content)\n        }\n        let daraurl = header + 'base64,' + body\n\n        /*\n        let id = 'doclink'\n        let filename = this.selectedFile.name\n        let link = `<a id=\"${id}\" download=\"${filename}\" href=\"${daraurl}\"></a>`\n        let script = `<script>document.getElementById('${id}').click()</script>`\n        let template = `<html><body>${link}${script}</body></html>`\n        */\n        \n        iframe.src = daraurl\n        \n        break;\n    }\n  }\n\n  public shouldHide(editorType: EditorType){\n    return this.editorType !== editorType;\n  }\n\n  \n\n  //MonacoEditor\n\n  public monacoEditorDidChange(file:FsNodeFile){\n    this.onChange.emit(file)\n  }\n\n}\n","<div class=\"tal-file-editor-switch\">\n\n    <div [hidden]=\"shouldHide(EditorType.Unknown)\" class=\"tal-file-editor-case-unknown tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Formato file sconosciuto.</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.None)\" class=\"tal-file-editor-case-none tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Seleziona o crea un file</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Image)\" class=\"tal-file-editor-case-image tal-file-editor-case \">\n        <div class=\"tal-file-editor-image\">\n            <img #imageViewer/>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Code)\" class=\"tal-file-editor-case-code tal-file-editor-case \">\n        <div class=\"tal-file-editor-code\">\n            <tal-monaco-editor-widget class=\"tal-file-editor-monaco-widget\"\n                #monacoEditor\n                (onChange)=\"monacoEditorDidChange($event)\">\n            </tal-monaco-editor-widget>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Markdown)\" class=\"tal-file-editor-case-markdown tal-file-editor-case \">\n        <div class=\"tal-markdown-preview\">\n            <div #markdownPreview class=\"tal-markdown-preview-content\" ></div>\n        </div>\n    </div>\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Browser)\" class=\"tal-file-editor-case-browser tal-file-editor-case \">\n        <div class=\"tal-browser-viewer\">\n            <iframe #browserEditor class=\"tal-browser-viewer-iframe\" ></iframe>\n        </div>\n    </div>\n\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Archive)\" class=\"tal-file-editor-case-archive tal-file-editor-case \">\n        <div class=\"tal-archive-viewer tal-center-page\">\n            <div class=\"tal-placeholder-message\">{{selectedFile?.name}}</div>\n            <div class=\"tal-placeholder-message\">\n                TODO: file preview\n                <ul>\n                    <li>fileA.zip</li>\n                    <li>main.py</li>\n                    <li>.talight/talight.json</li>\n                </ul>\n                \n            </div>\n            <div class=\"tal-placeholder-message\">\n                <button #untarButton pButton \n                    class=\"tal-square-button\"\n                    label=\"Decompress\"\n                    [title]=\"'Untar: '+selectedFile?.name\"\n                    onclick=\"alert('TODO: Decompress')\"\n                    ></button>\n            </div>\n        </div>\n    </div>\n\n    \n</div>\n\n\n","import { Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { ConfirmationService } from 'primeng/api';\nimport { OverlayPanel } from 'primeng/overlaypanel';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver, Tar } from 'src/app/services/fs-service/fs.service';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\n\n\n@Component({\n  selector: 'tal-file-explorer-widget',\n  templateUrl: './file-explorer-widget.component.html',\n  styleUrls: ['./file-explorer-widget.component.scss']\n})\nexport class FileExplorerWidgetComponent implements OnInit {\n  public driver?: FsServiceDriver;\n  public rootDir = \"/\"\n  public driverName = 'pyodide'\n  public showHidden = false\n  public fsroot = FsService.EmptyFolder\n  \n  public editingValue: string = \"\";\n  public editingItem: FsNodeFile | FsNodeFolder | null = null;\n  public editingItemFolder: FsNodeFolder | null = null;\n  public editingItemError: boolean = false;\n\n  public newItemValue: string = \"\";\n  public newItemType: \"file\" | \"folder\" = \"file\";\n  public newItemFolder: FsNodeFolder | null = null;\n  public newItemError: boolean = false;\n\n  public selectedFile: FsNodeFile | null = null;\n  public selectedFolder: FsNodeFolder | null = null;\n  \n\n  @ViewChild(\"nameEditing\") public nameEditingElement?: ElementRef;\n  @ViewChild(\"newItemName\") public newItemNameElement?: ElementRef;\n\n  @ViewChildren(OverlayPanel) public panels?: QueryList<OverlayPanel>;\n\n  @Output(\"onUpdateRoot\") public onUpdateRoot = new EventEmitter<FsNodeFolder>();\n\n  @Output(\"onSelectFile\") public onSelectFile = new EventEmitter<FsNodeFile>();\n  \n  \n  @Output(\"showHiddenChanged\") public showHiddenChanged = new EventEmitter<boolean>(); \n\n  constructor(\n    private confirmationService: ConfirmationService, \n    private fs:FsService,\n    private python: PythonCompilerService,\n    private zone: NgZone\n    ) {\n    //this.driver = fs.getDriver('pyodide');\n    this.driver = fs.getDriver(this.driverName);\n    //alert(this.driver)\n    //this.driver?.writeFile(this.editingItem.path,this.editingItem)\n   }\n\n  ngOnInit() {\n    this.bindCollapseEvent();\n    //alert('init!');\n\n    //this.rootDir = this.driver?.rootDir ?? this.rootDir;\n    this.driver?.ready().then((ready)=>{\n      //alert('ready!');\n      \n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      })\n    })\n  }\n\n  refreshRoot(onDone?:()=>void){\n    this.driver?.scanDirectory(this.rootDir).then((folder)=>{\n      this.fsroot = folder ?? FsService.EmptyFolder\n\n      this.bindCollapseEvent();\n      this.onUpdateRoot?.emit(this.fsroot);\n      if(onDone){onDone()}\n    });\n    \n  }\n\n  private bindCollapseEvent() {\n    setTimeout(() => {\n      const rows = document.getElementsByClassName(\"collapse-toggle\");\n      for (let i = 0; i < rows.length; i++) {\n        if (!rows[i].classList.contains(\"bound\")) {\n          let row = rows[i];\n          row.addEventListener(\"click\", (event) => { this.handleClickEvent(event) });\n          row.classList.add(\"bound\");\n        }\n      }\n    }, 0);\n  }\n\n  public handleClickEvent(event:Event){\n    event.preventDefault();\n    event.stopPropagation();\n    const row = event.target as HTMLElement;\n    let newParent: HTMLElement = row;\n    let safeCount = 0;\n    do {\n      newParent = newParent.parentElement as HTMLElement;\n      safeCount++;\n    } while (!newParent.classList.contains(\"tal-folder-subtree\") && safeCount < 10);\n\n    if (safeCount < 10) {\n      newParent.classList.toggle(\"collapsed\");\n    }\n  }\n\n  public closeAllContextMenus(event: Event) {\n    event.preventDefault();\n    if (this.panels) {\n      this.panels.forEach(p => p.hide());\n    }\n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.driver?.readFile(file.path).then((content)=>{\n      file.content = content ?? \"\";\n      this.selectedFile = file;\n      this.onSelectFile?.emit(file);\n    })\n    \n  }\n\n  public selectFolder(folder: FsNodeFolder) {\n    if (this.selectedFolder == folder){\n      this.selectedFolder == null;\n    }\n  }\n\n  public openSettings(){\n    if(!this.showHidden){\n      this.showHidden = true\n      this.refreshRoot(()=>{this.openSettings()})\n    }\n\n    console.log(\"openSettings\")\n    let projectFolder = this.fsroot.folders.find((item)=>{\n      return item.path + \"/\" == this.python.projectFolder\n    })\n    if(!projectFolder){return}\n    console.log(\"openSettings:projectFolder:\",projectFolder)\n    let configFile = projectFolder.files.find((file)=>{\n      return file.path == this.python.configPath\n    })\n    if(!configFile){return}\n    console.log(\"openSettings:configFile:\",configFile)\n        \n    this.selectFile(configFile);\n        \n  }\n  \n\n  public toggleHidden(){\n    this.showHidden = !this.showHidden;\n    this.refreshRoot()\n  }\n\n  public isVisibile(fsitem: FsNodeFile|FsNodeFolder){\n    let isHidden = fsitem.name.startsWith('.');\n    return this.showHidden || ( !this.showHidden && !isHidden ) \n  }\n\n  /** EDITING METHODS  **/\n  public startEditing(folder: FsNodeFolder, item: FsNodeFile | FsNodeFolder) {\n    this.editingItem = item;\n    this.editingValue = item.name;\n    this.editingItemFolder = folder;\n    this.editingItemError = false;\n\n    setTimeout(() => {\n      if (this.nameEditingElement) {\n        this.nameEditingElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public saveEditing() {\n    if (!this.editingItemError) {\n      if (this.editingItem) {\n        this.editingValue = this.editingValue.trim();\n        if (this.editingValue.length > 0) {\n          this.editingItem.name = this.editingValue;\n          this.onUpdateRoot?.emit(this.fsroot);\n        }\n      }\n    }\n    this.cancelEditing();\n  }\n\n  public cancelEditing() {\n    this.editingItem = null;\n    this.editingValue = \"\";\n    this.editingItemFolder = null;\n  }\n\n  public editItemChange() {\n    this.editingItemError = false;\n\n    if (this.editingItemFolder) {\n      const existingFile = this.editingItemFolder.files.find(f => f.name === this.editingValue);\n      const existingFolder = this.editingItemFolder.folders.find(f => f.name === this.editingValue);\n      if (existingFile || existingFolder) {\n        this.editingItemError = true;\n      }\n    }\n  }\n  /***************/\n\n  /** DELETE METHODS **/\n  public deleteFileClick(event: Event, file: FsNodeFile) {\n    if(!this.fsroot){return}\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questo file?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFile(this.fsroot, file);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFile(currentFolder: FsNodeFolder, file: FsNodeFile) {\n    this.driver?.delete(file.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.files.indexOf(file) >= 0) {\n      currentFolder.files.splice(currentFolder.files.indexOf(file), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const folder: TalFolder = currentFolder.folders[i];\n        this.deleteFile(folder, file);\n      }\n    }\n    */\n  }\n\n  public deleteFolderClick(event: Event, folder: FsNodeFolder) {\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questa cartella? Tutti i file e le cartelle contenute verranno eliminate.',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFolder(this.fsroot, folder);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFolder(currentFolder: FsNodeFolder, folder: FsNodeFolder) {\n    this.driver?.delete(folder.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.folders.indexOf(folder) >= 0) {\n      currentFolder.folders.splice(currentFolder.folders.indexOf(folder), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const subFolder: TalFolder = currentFolder.folders[i];\n        this.deleteFolder(subFolder, folder);\n      }\n    }\n    */\n  }\n  /***************/\n\n  /** CREATE METHODS **/\n  public syncFilesystem(folder: FsNodeFolder) {\n    setTimeout(() => { \n      //this.refreshRoot();\n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      });\n    }, 0);\n  }\n\n\n  public addNewItem(folder: FsNodeFolder, type: \"file\" | \"folder\") {\n    this.newItemValue = \"\";\n    this.newItemFolder = folder;\n    this.newItemType = type;\n    this.newItemError = false;\n\n    setTimeout(() => {\n      if (this.newItemNameElement) {\n        this.newItemNameElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public cancelNewItem() {\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public saveNewItem() {\n    if (!this.newItemError) {\n      this.newItemValue = this.newItemValue.trim();\n      if (this.newItemValue.length > 0) {\n        if (this.newItemFolder) {\n          if (this.newItemType === \"file\") {\n            let path = this.newItemFolder.path + \"/\" + this.newItemValue\n            this.driver?.writeFile(path, \"\").then(()=>{\n              this.refreshRoot()\n            })\n            /*\n            this.newItemFolder.files.push({\n              name: this.newItemValue,\n              content: \"\"\n            } as TalFile );\n            */\n          } else {\n            this.driver?.createDirectory(\"./\"+this.newItemValue).then(()=>{\n              this.refreshRoot()\n            })\n            \n            this.newItemFolder.folders.push({\n              name: this.newItemValue,\n              path: \"./\"+this.newItemValue,\n              files: [],\n              folders: []\n            });\n\n            //this.bindCollapseEvent();\n          }\n          //this.refreshRoot()\n          //this.change?.emit(this.root);\n        }\n      }\n    }\n\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public newItemChange() {\n    this.newItemError = false;\n\n    if (this.newItemFolder) {\n      const existingFile = this.newItemFolder.files.find(f => f.name === this.newItemValue);\n      const existingFolder = this.newItemFolder.folders.find(f => f.name === this.newItemValue);\n      if (existingFile || existingFolder) {\n        this.newItemError = true;\n      }\n    }\n  }\n  /***************/\n  async upload(event:Event) {\n    if (!( event.target instanceof HTMLInputElement )){ return false; }\n    let target = event.target as HTMLInputElement\n    if(!target.files || target.files.length == 0){ return false; }\n\n    if(target.files.length == 1 && target.files[0].name.endsWith('.tal.tar') ){\n      let content = await target.files[0].arrayBuffer();\n      await this.importProject(content)\n    }else{\n      for(let i = 0; i<target.files.length; i++){\n        let file = target.files[i]\n        let content = await file.arrayBuffer();\n        console.log(\"upload:content:\", new Uint8Array(content))\n        let path = (!this.selectedFolder?\"/\":this.selectedFolder.path) + file.name\n        console.log('upload:', path, content)\n        await this.driver?.writeFile(path, content)\n      }\n    }\n    this.refreshRoot()\n    return true;\n  }\n\n  async importProject(tarball:ArrayBuffer) {\n    Tar.unpack(tarball, async (files, folders)=>{\n      console.log(\"extractTar:unpack:files\",files)\n      console.log(\"extractTar:unpack:folders\",folders)\n  \n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      this.refreshRoot()\n    })\n    console.log(\"import:data:\",tarball)\n        \n    return true\n  }\n\n  public export() {\n    let items = this.fs.treeToList(this.fsroot)\n    if(items.length == 0 ) {\n      console.log(\"export: No files found to be exported\")\n    }\n\n    console.log(\"export:items:\",items)\n    Tar.pack(items, (tarball:ArrayBuffer)=>{\n      let tarname = \"tal-project-\"+ Date.now()+\".tal.tar\"\n      console.log('export:tarball:',tarname,tarball)\n      this.triggerDownload(tarname, tarball, \"application/x-tar\")\n    })\n  }\n\n  public triggerDownload(filename:string, content:ArrayBuffer|string, mime=\"application/octet-stream\"){\n    let a = document.createElement(\"a\");\n    \n    const blob = new Blob([content], {type: mime});\n    let url = window.URL.createObjectURL(blob);\n    \n    a.style.display = \"none\";\n    a.download = filename;\n    a.href = url;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}","<div class=\"tal-editor-files-tree\">\n  <div class=\"tal-editor-files-header\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton icon=\"pi pi-file\" class=\"tal-square-button\" title=\"Nuovo file\"\n        (click)=\"closeAllContextMenus($event); addNewItem(fsroot, 'file')\" pTooltip=\"Nuovo file\"></button>\n      <button pButton icon=\"pi pi-folder\" class=\"tal-square-button\" title=\"Nuova cartella\"\n        (click)=\"closeAllContextMenus($event); addNewItem(fsroot, 'folder')\" pTooltip=\"Nuova cartella\"></button>\n    </div>\n    <div class=\"tal-editor-files-right-bar\">\n      <button pButton icon=\"pi pi-sync\" class=\"tal-square-button\" title=\"Refresh\" (click)=\"closeAllContextMenus($event); syncFilesystem(fsroot)\"\n        pTooltip=\"Aggiorna\"></button>    \n    </div>\n  </div>\n\n\n  <div class=\"tal-editor-files-body\">\n    <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: fsroot }\"></ng-container>\n  </div>\n\n\n  <div class=\"tal-editor-files-footer\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton class=\"p-button-secondary tal-square-button\" icon=\"pi pi-save\" title=\"Salva/Esporta\"\n        (click)=\"closeAllContextMenus($event); export()\" pTooltip=\"Esporta\"></button>\n      \n      <button pButton class=\"p-button-secondary tal-square-button\" icon=\"pi pi-upload\" title=\"Upload/Importa\"\n        (click)=\"fileUpload.click()\" pTooltip=\"Upload/Import\"></button>\n      <input #fileUpload type=\"file\" style=\"display: none;\" (change)=\"upload($event)\"/>\n    </div>\n\n    <div class=\"tal-editor-files-right-bar\">\n\n      <button pButton icon=\"pi pi-eye\" class=\"tal-square-button\" *ngIf=\"showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Mostra file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-eye-slash\" class=\"tal-square-button\" *ngIf=\"!showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Nascondi file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-cog\" class=\"tal-square-button\" title=\"Settings\"\n        (click)=\"closeAllContextMenus($event); openSettings()\" pTooltip=\"Settings\"></button>\n      \n    </div>\n\n    \n  </div>\n\n\n\n</div>\n\n<ng-template #TalFolder let-folder>\n  <div class=\"tal-folder\">\n    <ng-container *ngFor=\"let subfolder of folder.folders\">\n      <div *ngIf=\"isVisibile(subfolder)\" class=\"tal-folder-subtree\">\n        <div class=\"tal-folder-row\" (contextmenu)=\"closeAllContextMenus($event); folderOverlayPanel.show($event)\" [class.opened]=\"subfolder===selectedFolder\">\n          <div class=\"tal-folder-title collapse-toggle\" (click)=\"closeAllContextMenus($event); selectFolder(subfolder)\"\n            (dblclick)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n            <i class=\"pi pi-chevron-down\"></i>\n            <ng-container *ngIf=\"editingItem!=subfolder;else ItemEditingTemplate\">\n              <i class=\"pi pi-folder\"></i>\n              <p>{{subfolder.name}}</p>\n            </ng-container>\n          </div>\n          <div class=\"tal-row-settings\" *ngIf=\"editingItem!=subfolder\">\n            <div class=\"tal-row-button\" (click)=\"folderOverlayPanel.show($event)\">\n              <i class=\"pi pi-ellipsis-h\"></i>\n            </div>\n          </div>\n\n          <p-overlayPanel #folderOverlayPanel>\n            <ng-template pTemplate>\n              <div class=\"tal-contextmenu-container\">\n                <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'file')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuovo file</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'folder')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuova cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n                  <i class=\"pi pi-pencil\"></i>\n                  <p>Rinomina cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); deleteFolderClick($event, subfolder)\">\n                  <i class=\"pi pi-trash\"></i>\n                  <p>Elimina cartella</p>\n                </div>\n              </div>\n            </ng-template>\n          </p-overlayPanel>\n\n        </div>\n        <div class=\"tal-subfolder\">\n          <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: subfolder }\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"newItemFolder === folder\">\n      <ng-container *ngTemplateOutlet=\"NewItemTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngFor=\"let file of folder.files\">\n      <div *ngIf=\"isVisibile(file)\" class=\"tal-file\"\n        (contextmenu)=\"closeAllContextMenus($event); fileOverlayPanel.show($event)\" [class.opened]=\"file===selectedFile\">\n        <div class=\"tal-file-title\" (click)=\"closeAllContextMenus($event); selectFile(file)\"\n          (dblclick)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n          <ng-container *ngIf=\"editingItem!=file;else ItemEditingTemplate\">\n            <p>{{file.name}}</p>\n          </ng-container>\n        </div>\n        <div class=\"tal-row-settings\" *ngIf=\"editingItem!=file\">\n          <div class=\"tal-row-button\" (click)=\"fileOverlayPanel.show($event)\">\n            <i class=\"pi pi-ellipsis-h\"></i>\n          </div>\n        </div>\n\n        <p-overlayPanel #fileOverlayPanel>\n          <ng-template pTemplate>\n            <div class=\"tal-contextmenu-container\">\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n                <i class=\"pi pi-pencil\"></i>\n                <p>Rinomina file</p>\n              </div>\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); deleteFileClick($event, file)\">\n                <i class=\"pi pi-trash\"></i>\n                <p>Elimina file</p>\n              </div>\n            </div>\n          </ng-template>\n        </p-overlayPanel>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #ItemEditingTemplate>\n  <input #nameEditing class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"editingValue\" (blur)=\"saveEditing()\"\n    (keyup.enter)=\"saveEditing()\" (keyup.esc)=\"cancelEditing()\" (input)=\"editItemChange()\"\n    [class.error]=\"editingItemError\">\n</ng-template>\n\n<ng-template #NewItemTemplate>\n  <div class=\"tal-new-item\">\n    <input #newItemName class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"newItemValue\" (blur)=\"saveNewItem()\"\n      (keyup.enter)=\"saveNewItem()\" (keyup.esc)=\"cancelNewItem()\" (input)=\"newItemChange()\"\n      [class.error]=\"newItemError\">\n  </div>\n</ng-template>\n\n<p-confirmDialog acceptLabel=\"Elimina\" acceptIcon=\"pi pi-trash\" rejectLabel=\"Annulla\">\n</p-confirmDialog>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EditorComponent } from 'ngx-monaco-editor-v2';\nimport { noop } from 'rxjs';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\n\n@Component({\n  selector: 'tal-monaco-editor-widget',\n  templateUrl: './monaco-editor-widget.component.html',\n  styleUrls: ['./monaco-editor-widget.component.scss']\n})\nexport class MonacoEditorWidgetComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @ViewChild(\"monacoEditor\") public monacoEditor!: EditorComponent;\n  public editorOptions: any;\n  \n  \n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @Input(\"language\") public language: string = \"\";\n  //Code\n  \n  \n  \n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n  \n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  constructor(\n    private readonly themeService: ThemeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.themeService.themeChanged.subscribe((theme) => {\n      this.updateEditorOptions();\n    });\n    \n    \n    this.updateEditorOptions();\n  }\n\n\n  ngAfterViewInit() {\n    //this.monacoEditor.registerOnChange((event:any)=>{ this.change(event) })\n    //this.monacoEditor.registerOnTouched((event:any)=>{ this.input(event) })\n\n    // this returns null\n  }\n  \n  ngOnChanges(): void {\n    this.updateEditorOptions();\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    if(!this._selectedFile) {\n      this.value = \"\"; \n      return; \n    }\n    let content = this._selectedFile.content; \n    if(typeof content === 'string' )\n    { \n      this.value = content\n    }\n\n  }\n\n  // CodeEditorControls\n  private onTouchedCallback: (_?: any) => void = noop;\n  private onChangeCallback: (_?: any) => void = noop;\n\n  public getFileContent():string{\n    if(!this._selectedFile){return \"\"}\n    let content = this._selectedFile.content\n    if (content instanceof ArrayBuffer){\n      content = this.binDecoder.decode(content)\n      this._selectedFile.content = content\n    }\n    return content\n  }\n\n  public setFileContent(text:string){\n    if(!this._selectedFile){return;}\n    this._selectedFile.content = text\n  }\n\n  \n\n\n  // get accessor\n  public get value(): string {\n    console.log(\"MonacoEditor:value:get\")\n    return this.getFileContent(); \n  }\n\n  // Set accessor including call the onchange callback\n  public set value(text: string) {\n    console.log(\"MonacoEditor:value:set\")\n    if(!this._selectedFile){return;}\n    let content=this.getFileContent()\n    console.log(\"MonacoEditor:value:old:new\",content,text)\n    if (text !== content) {\n      console.log(\"MonacoEditor:value:set:changed\")\n      this.setFileContent(text);\n      this.didChange()\n      \n    }\n  }\n  // From ControlValueAccessor interface\n  public writeValue(text: any) {\n    console.log(\"MonacoEditor:value:writeValue\")\n    if (text !== this.value) {\n      this.value = text;\n    }\n  }\n\n  \n  public didChange(): void {\n    console.log(\"monacoEditor:didChange\")\n    this.onChangeCallback();\n    this.onTouchedCallback();\n    if(!this.selectedFile){return;}\n    this.onChange.emit(this.selectedFile);\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  public updateEditorOptions(): void {\n    console.log(this.language);\n    this.editorOptions = {\n      language: this.language,\n      theme: this.themeService.themeName(),\n      automaticLayout: true\n    }\n  }\n    \n}\n","<div class=\"tal-monaco-editor\">\n    <ngx-monaco-editor class=\"tal-monaco-editor-ngx\"\n        #monacoEditor \n        [lang]=\"language\" \n        [options]=\"editorOptions\" \n        [(ngModel)]=\"value\">\n    </ngx-monaco-editor>\n</div>\n    ","import { Component, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport { PyodideState } from 'src/app/services/python-compiler-service/python-compiler.service';\n\nexport class OutputMessage{\n  constructor(\n    public content: string,\n    public type: OutputType,\n    public index: number = -1,\n    public timestamp: number = Date.now()\n  ){}\n}\n\nexport enum OutputType{\n  STDIN='stdin',\n  STDINAPI='stdinapi',\n  STDOUT='stdout',\n  STDERR='stderr',\n  SYSTEM='system',\n}\n\ntype TimeoutID=number;\n\n@Component({\n  selector: 'tal-output-widget',\n  templateUrl: './output-widget.component.html',\n  styleUrls: ['./output-widget.component.scss'],\n})\nexport class OutputWidgetComponent {\n  @Output('onInput') public onInput = new EventEmitter<InputEvent>();\n  @Output('onStdin') public onStdin = new EventEmitter<string>(); \n\n  @ViewChild(\"output\") public output!: ElementRef;\n  @ViewChild(\"sdtinInput\") public sdtinInput!: ElementRef;\n  @ViewChild(\"sdtinButton\") public sdtinButton!: ElementRef;\n  @ViewChild(\"pyodideIcon\") public pyodideIcon!: ElementRef;\n\n  public outputLines = new Array<OutputMessage>();\n  public pyodideState = PyodideState.Unknown\n  public pyodideStateIcon = \"pi-circle\"\n  public pyodideStateColor = \"\" //default: lightgray\n  public pyodideStateTooltip = \"State: Unknown\"\n  public stdinHighlight?:TimeoutID;\n  \n  constructor( public zone: NgZone){}\n  \n  ngOnInit() {}\n\n  ngOnDestroy() {}\n  \n  clearOutput() {\n    this.zone.run(() => this.outputLines = [])\n  }\n  \n  public print(content: string, outputType = OutputType.STDOUT) {\n    let msg = new OutputMessage(content, outputType, this.outputLines.length)\n    this.zone.run(() => this.outputLines.push(msg));\n    this.scrollToBottom()\n  }\n\n  public iconForType(message: OutputMessage){\n    let icon=''\n    let idx = message.index\n    if( idx > 0 && this.outputLines[idx-1].type == message.type){return icon;}\n    switch(message.type){\n      default:\n      case OutputType.STDIN:     icon='pi-angle-left'; break;\n      case OutputType.STDINAPI:  icon='pi-cloud-download'; break;\n      case OutputType.STDOUT:    icon='pi-angle-right'; break;\n      case OutputType.STDERR:    icon='pi-exclamation-triangle'; break;\n      case OutputType.SYSTEM:    icon='pi-info-circle'; break;\n    }\n    return icon;\n  }\n\n  public didStateChange(state:PyodideState,content?:string){\n    console.log(\"didStateChange:\")\n    this.pyodideState=state\n    this.pyodideStateTooltip = 'State: '+ this.pyodideState\n    \n    switch(state){\n      default:\n      case PyodideState.Unknown: \n        this.pyodideStateIcon=\"pi-circle\"\n        this.pyodideStateColor=\"\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Loading: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"orange\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Ready: \n        this.pyodideStateIcon=\"pi-circle\"\n        this.pyodideStateColor=\"green\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Run: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"green\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Stdin: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"orange\"\n        this.enableStdin(); \n        break;\n      case PyodideState.Error: \n        this.pyodideStateIcon=\"pi-circle-fill\"\n        this.pyodideStateColor=\"darkred\"\n\n        this.print(\"END: Error\", OutputType.STDERR)\n        this.print(content ?? \"Uknown error\", OutputType.STDERR)\n        this.enableStdin(false)\n        break;\n      case PyodideState.Success: \n        this.pyodideStateIcon=\"pi-circle-fill\"\n        this.pyodideStateColor=\"green\"\n        this.print(\"END: Success\", OutputType.SYSTEM)\n        if(content){\n          this.print(content, OutputType.SYSTEM)\n        }\n        this.enableStdin(false)\n      break;\n    }\n\n  }\n\n  public enableStdin(enable=true){\n    let btn = this.sdtinButton.nativeElement as HTMLButtonElement\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    btn.disabled = !enable\n    ipt.disabled = !enable\n    this.enableHighlight(enable)\n  }\n  \n  public enableHighlight(enable=true, color?:string){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n\n    let toggleColor = (clear?:boolean)=>{\n      if (clear) { ipt.style.borderColor == \"\" }\n      else {\n        ipt.style.borderColor = ipt.style.borderColor == \"\" ? color ?? \"orange\" : \"\"\n      }\n    }\n\n    if(enable && this.stdinHighlight){ return; }\n    if(!enable && !this.stdinHighlight){ return; }\n    if(enable){\n      this.stdinHighlight = window.setInterval(toggleColor,1000) //window.setInterval -> number; setInterval -> strange object\n    }else{\n      clearInterval(this.stdinHighlight);\n      this.stdinHighlight=undefined\n      setTimeout(()=>{toggleColor(true)})\n    }\n  }\n  \n\n  public focusStdin(){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    ipt.style.backgroundColor = \"\"\n    this.enableHighlight(false)\n  }\n\n  public blurStdin(){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    ipt.style.backgroundColor = \"\"\n    let shouldHighlight = this.pyodideState==PyodideState.Stdin\n    this.enableHighlight(shouldHighlight)\n  }\n\n  public sendStdin() {\n    let msg = this.sdtinInput.nativeElement.value ?? \"\"\n    msg = msg.trim()\n    console.log(\"sendStdin:\", this.sdtinInput)\n    console.log(\"sendStdin:msg\", msg)\n    if (msg == \"\") { return }\n\n    this.sdtinInput.nativeElement.value = \"\"\n    this.onStdin.emit(msg+\"\\n\");\n  }\n\n  public sendOnEnter(event: KeyboardEvent) {\n    if (event.key == 'Enter') { this.sendStdin(); }\n  }\n\n\n  public scrollToBottom(){\n    // Scroll #console-bottom-scroll to bottom\n    setTimeout(() => {\n      const scrollEl = document.getElementById(\"tal-output-widget-scroll-id\");\n      if (scrollEl) {\n        scrollEl.scrollTop = scrollEl.scrollHeight;\n        console.log(scrollEl.scrollTop, scrollEl.scrollHeight)\n      }\n    });\n  }\n}\n\n\n","\n<div class=\"tal-output-widget\">\n    <div class=\"tal-output-widget-row tal-output-widget-title\">\n        <div class=\"tal-output-widget-row-label\">Output</div>\n        <div class=\"tal-output-widget-row-icon\">\n            <i #pyodideIcon class=\"pi {{pyodideStateIcon}}\" [pTooltip]=\"pyodideStateTooltip\" [style]=\"'font-size:100%; color:' + pyodideStateColor\"></i>\n        </div>\n    </div>\n\n  <div class=\"tal-output-widget-row tal-output-widget-row-scroll\">\n      <p-scrollPanel class=\"tal-output-widget-pscroll\" id=\"tal-output-widget-scroll-id\">\n          <div class=\"tal-output-widget-inner-row tal-output-widget-inner-row-{{line.type}}\" *ngFor=\"let line of outputLines\">\n              <div class=\"tal-output-widget-icon\">\n                  <i class=\"pi {{iconForType(line)}}\"></i>\n              </div>\n              <div class=\"tal-output-widget-text\">{{line.content}}</div>\n          </div>\n      </p-scrollPanel>\n  </div>\n\n  <div class=\"tal-output-widget-row tal-output-widget-row-stdin\">\n      <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-trash\" (click)=\"clearOutput()\" title=\"Clear output\"\n        pTooltip=\"Pulisci output\"></button>\n      <input pInput #sdtinInput \n             class=\"tal-output-widget-stdin-input\" \n             (focus)=\"focusStdin()\"\n             (blur)=\"blurStdin()\"\n             (keydown)=\"sendOnEnter($event)\"\n             placeholder=\"Input del programma\" />\n      <button pButton #sdtinButton icon=\"pi pi-send\" class=\"tal-output-widget-stdin-button  tal-square-button\" (click)=\"sendStdin()\" title=\"Send\" pTooltip=\"Invia\"></button>\n  </div>\n\n</div>\n\n","import { Component, EventEmitter, Output, NgZone, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/services/api-service/api.service';\nimport { FsNodeFolder, FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { PyodideDriver } from 'src/app/services/python-compiler-service/pydiode-driver';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\nimport { OverlayOptions } from 'primeng/api';\nimport { ServiceDescriptor, ProblemDescriptor, ArgsMap, FilesMap, FileDescriptor, ArgDescriptor } from 'src/app/services/problem-manager-service/problem-manager.types';\nimport { Dropdown } from 'primeng/dropdown';\n\n\nexport class ServiceMenuEntry {\n  constructor(\n    public name = \"\",\n    public descriptor: ServiceDescriptor,\n  ){}\n}\n\n\nexport class ProblemMenuEntry {\n  constructor(\n    public name = \"\",\n    public descriptor: ProblemDescriptor,\n  ){}\n}\n\n@Component({\n  selector: 'tal-problem-widget',\n  templateUrl: './problem-widget.component.html',\n  styleUrls: ['./problem-widget.component.scss'],\n})\nexport class ProblemWidgetComponent {\n  @Output('onProblemChanged') public onProblemSelected = new EventEmitter<ProblemDescriptor>();\n  @Output('onServiceChanged') public onServiceSelected = new EventEmitter<ServiceDescriptor>();\n  @Output('onAttachments') public onAttachments = new EventEmitter<ArrayBuffer>();\n  \n  @ViewChild(\"problemDropdown\") public problemDropdown!: ElementRef\n  @ViewChild(\"serviceDropdown\") public serviceDropdown!: ElementRef\n  public dropdownOptions: OverlayOptions;\n\n  problemsMenu = new Array<ProblemDescriptor>();\n  servicesMenu = new Array<ServiceDescriptor>();\n\n  selectedProblem?: ProblemDescriptor;\n  selectedService?: ServiceDescriptor;\n  selectedArgs?: ArgsMap;\n  selectedFiles?: FilesMap;\n  selectedFile?: FileDescriptor;\n\n  filePathList = new Array<string>();\n\n  driver?:PyodideDriver\n  \n  regexFormat = true;\n  showRegex = true;\n  loading = false\n\n  problemSub: Subscription\n\n  constructor( public zone: NgZone,\n               public api: ApiService,\n               public pm: ProblemManagerService,\n               public python: PythonCompilerService,)\n  {\n    this.driver = python.driver;\n    this.problemSub = this.pm.onProblemsChanged.subscribe((clear:boolean)=>{ this.problemsDidChange(clear) })\n\n    // https://primefaces.org/primeng/overlay\n    //this.dropdownOptions = {appendTo:'body', mode: 'modal'}\n    this.dropdownOptions = {appendTo:'body'}\n  }\n  \n  ngOnInit() {\n    this.reloadProblemList();\n  }\n\n  ngOnDestroy() {\n    this.problemSub?.unsubscribe()\n  }\n\n  isLoading(){\n    return this.loading;\n  }\n\n  refreshFilePathList(){\n    this.filePathList = [...this.filePathList]\n  }\n\n//args\n  clenupRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\((.*)\\)/,'$1')\n    text = text.replace(/\\|/g,' OR ')\n    return text;\n  }\n\n  cleanupName(name:string){\n    var pattern = new RegExp('[-_. ]+','g');\n    name = name.replace(pattern, \" \")\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    return name\n  }\n\n  readableRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\[([^\\]]*)\\]/, (match:string, content:string)=>{\n      if ( content.startsWith('^') ){\n        return ' invalid('+content.slice(1)+') '\n      }\n      return ' valid('+content.slice(1)+') '\n    })\n    text = text.replace(/\\(([^|]+|)*([^|]+)*\\)/g,(match:string, options:string, last:string)=>{\n      console.log('OROR:',match, options, last)\n      return text.replace(/\\((.*)\\)/,'$1').replace(/\\|/g,' OR ')\n    })\n    return text\n  }\n\n  async argDidFocus(arg:ArgDescriptor,event:Event){\n    console.log('argDidFocus:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n    console.log('argDidFocus:show!')\n    panel.style.display = \"flex\"\n    if(regex.style.color == \"red\"){\n      regex.style.color = \"orange\"\n    }else{\n      regex.style.color = \"\"\n    }\n    \n  }\n\n  async argDidChange(arg:ArgDescriptor,event:Event){\n    console.log('argDidChange:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n\n    console.log('argDidFocus:validate')\n    let issues = this.pm.validateArg(arg)\n    if(issues !== null){\n      regex.style.color = \"red\"\n      panel.style.display = \"flex\"\n    }else if(arg.value != arg.default){\n      regex.style.color = \"green\"\n      panel.style.display = \"flex\"\n    }else{\n      regex.style.color = \"\"\n      panel.style.display = \"none\"\n    }\n  }\n\n  async argDidReset(arg:ArgDescriptor,event:Event){\n    console.log('argDidReset:',arg.key,event)\n    arg.value = arg.default ?? \"\"\n    this.argDidChange(arg,event)\n  }\n\n\n//files\n\n  async fileDidChange(file:FileDescriptor,event:{ originalEvent: Event, value?: string }){\n    console.log('fileDidChange:',file.key,event)\n    let path = event.value ?? \"\"\n\n    let idDropdown = 'file-dropdown-' + file.key\n    let dropdown = document.getElementById(idDropdown)\n    if(!(dropdown instanceof HTMLElement)) {return}\n    console.log('fileDidChange:dropdown:found',dropdown)\n    \n    if (path == \"\"){\n      dropdown.style.color = \"\"\n      //file.value = \"\"\n      return\n    }\n\n    let pathExist = await this.driver?.exists(path)\n    console.log('fileDidChange:pathExist:',pathExist)\n    if(!pathExist){\n      dropdown.style.color = \"red\"\n      //file.value = \"\"\n    }else{\n      dropdown.style.color = \"green\"\n      //file.value = path\n    }\n  }\n  \n  async fileDidReset(file:FileDescriptor,event:Event){\n    console.log('fileDidReset:',file.key,event)\n    let idDropdown = 'file-dropdown-' + file.key\n    let dropdown = document.getElementById(idDropdown)\n    console.log('fileDidReset:', dropdown)\n    if(!(dropdown instanceof Dropdown)) {return}\n    dropdown.clear(event)\n    file.value = \"\"\n    \n    this.refreshFilePathList()\n  }\n\n//UI\n  async toggleShowRegex(arg:ArgDescriptor,event:Event){\n    let idPanel = 'args-regex-panel-' + arg.key\n    let panel = document.getElementById(idPanel)\n    if(!(panel instanceof HTMLElement)) {return}\n    panel.style.display = panel.style.display == 'none' ? 'flex' : 'none';\n  }\n\n  async toggleRegexFormat(arg:ArgDescriptor,event:Event){\n    let idRegex = 'args-regex-'+arg.key;\n    let regex = document.getElementById(idRegex)\n    if(!(regex instanceof HTMLElement)) {return}\n    \n    if(regex.classList.contains('format-regex-simple')){\n      regex.classList.remove('format-regex-simple')\n      regex.innerText = arg.regex + \"\"\n    }else{\n      regex.classList.add('format-regex-simple')\n      regex.innerText = this.clenupRegex(arg.regex)\n    }\n  }\n\n  async reloadProblemList(){\n    this.selectedProblem = undefined;\n    this.selectedService = undefined;\n    this.selectedArgs = undefined;\n    this.selectedFiles = undefined;\n    \n\n    this.problemsMenu = []\n    this.servicesMenu = []\n    this.loading = true\n\n\n    console.log\n    this.pm.updateProblems()\n  }\n\n  async problemsDidChange(clear:boolean) {\n\n    this.problemsMenu = []\n    this.servicesMenu = []\n    this.loading = true\n\n\n    if(clear) return\n    \n    let problemsMenu = new Array<ProblemDescriptor>(); // [...this.pm.problemList] // ez ?\n    this.pm.problemList.forEach((problemDesc)=>{      \n      problemsMenu.push(problemDesc)\n    })\n    problemsMenu = problemsMenu.sort((a,b)=>a.name.toLowerCase()>b.name.toLowerCase()?1:a.name.toLowerCase()<b.name.toLowerCase()?-1:0)\n    console.log('updateProblemsUI:problemsMenu:', problemsMenu)\n    \n    this.problemsMenu = problemsMenu\n    this.loading = false\n\n  }\n\n\n\n//API \n  async onApiError(message: string) {\n    console.log(\"API Error: \", message)\n  }\n\n  async didSelectProblem() {\n    this.selectedService = undefined;\n    this.selectedArgs = undefined;\n    this.selectedFiles = undefined;\n    \n    console.log('didSelectProblem:', this.selectedProblem)\n    if (!this.selectedProblem){return}\n    this.pm.selectProblem(this.selectedProblem)\n    \n\n    let servicesMenu = new Array<ServiceDescriptor>();\n    this.selectedProblem.services.forEach((serviceDesc)=>{\n      servicesMenu.push(serviceDesc)\n    })\n    servicesMenu = servicesMenu.sort((a,b)=>a.name.toLowerCase()>b.name.toLowerCase()?1:a.name.toLowerCase()<b.name.toLowerCase()?-1:0)\n    this.servicesMenu = servicesMenu\n    console.log('didSelectProblem:servicesMenu:', servicesMenu)\n    this.servicesMenu = servicesMenu\n    \n    this.onProblemSelected.emit(this.selectedProblem)\n  }\n\n  async didSelectService() {\n    console.log('didSelectService:', this.selectedService)\n    if (!this.selectedService){return}\n    this.pm.selectService(this.selectedService)\n    this.selectedArgs = this.selectedService.args\n    this.selectedFiles = this.selectedService.files\n    console.log('didSelectService:selectedArgs:', this.selectedArgs)\n    this.onServiceSelected.emit(this.selectedService)   \n\n    this.refreshFilePathList()\n  }\n\n  async apiDownloadAttachment() {\n    console.log('apiDownloadAttachment:', this.selectedProblem)\n    if (!this.selectedProblem) { return }\n\n    let onAttachment = () => { console.log(\"Attachment packet received\") };\n    let onAttachmentInfo = (info: any) => { console.log('apiDownloadAttachment:info:', info) };\n\n    let onData = (data: ArrayBuffer) => {\n      console.log(\"apiDownloadAttachment:onData:\", data);\n      this.onAttachments.emit(data);\n    };\n\n    let req = this.api.GetAttachment(this.selectedProblem.name, onAttachment, onAttachmentInfo, onData);\n    req.onError = (error) => { this.onApiError(error) };\n\n  }\n\n}\n\n\n","<div class=\"tal-problem-widget\">\n  <!-- ROW:title -->\n  <!--\n  <div class=\"tal-problem-widget-args-row\">\n    <div class=\"tal-problem-widget-label\">Problem</div>\n  </div>\n  -->\n\n  <!-- API: PROBLEMS and SERVICES -->\n  <div class=\"tal-problem-widget-row tal-problem-widget-row-problem\">\n    <p-dropdown #problemDropdown\n                placeholder=\"Seleziona un problema\" \n                class=\"tal-problem-widget-problem-selector\" \n                scrollHeight=\"50rem\"\n                [overlayOptions]=\"dropdownOptions\"\n                panelStyleClass=\"tal-problem-widget-problem-selector-panel\"\n                [options]=\"problemsMenu\"\n                [(ngModel)]=\"selectedProblem\" \n                optionLabel=\"name\"\n                (onChange)=\"didSelectProblem()\">\n    \n                <ng-template let-option pTemplate=\"selectedItem\">\n                  <div class=\"tal-problem-widget-problem-selected\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n                <ng-template let-option pTemplate=\"item\">\n                  <div class=\"tal-problem-widget-problem-item\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n    </p-dropdown>\n\n    <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-refresh\" title=\"Refresh\" pTooltip=\"Refresh\"\n      (click)=\"reloadProblemList()\" *ngIf=\"!isLoading()\"></button>\n\n    <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-spin pi-spinner\" title=\"Refresh\" pTooltip=\"Refresh\" disabled\n      *ngIf=\"isLoading()\"></button>\n  </div>\n\n  <div class=\"tal-problem-widget-row tal-problem-widget-row-problem\">\n    <p-dropdown #serviceDropdown\n                placeholder=\"Seleziona un servizio\" \n                class=\"tal-problem-widget-problem-selector\" \n                scrollHeight=\"50rem\"\n                [overlayOptions]=\"dropdownOptions\"\n                panelStyleClass=\"tal-problem-widget-problem-selector-panel\"\n                [options]=\"servicesMenu\"\n                [(ngModel)]=\"selectedService\" \n                optionLabel=\"name\"\n                (onChange)=\"didSelectService()\">\n    \n                <ng-template let-option pTemplate=\"selectedItem\">\n                  <div class=\"tal-problem-widget-problem-selected\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n                <ng-template let-option pTemplate=\"item\">\n                  <div class=\"tal-problem-widget-problem-item\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n    </p-dropdown>\n\n    <button pButton class=\"p-button-help tal-square-button\" icon=\"pi pi-download\" (click)=\"apiDownloadAttachment()\"\n      title=\"Download Attachments\" pTooltip=\"Scarica allegati\"></button>\n\n  </div>\n\n  <div class=\"tal-problem-widget-args-row\">\n    <p-tabView>\n      <p-tabPanel header=\"Arguments\">\n\n        <!-- ROW:title -->\n        <ng-template pTemplate=\"header\" class=\"tal-problem-widget-args-row\">\n          <div class=\"tal-problem-widget-label\">Arguments</div>\n        </ng-template>\n\n\n        <!-- API: ARGS -->\n        <div class=\"tal-problem-widget-row tal-problem-widget-args\">\n          <!-- ROW: empty -->\n          <div class=\"tal-problem-widget-args-row stretch-flex\" *ngIf=\"!selectedArgs || selectedArgs.size==0\">\n            <div class=\"tal-problem-widget-args-row-no-params\">\n              <div>No arguments found.</div>\n            </div>\n          </div>\n\n          <!-- ROW: arg -->\n          <div class=\"tal-problem-widget-args-row\" *ngFor=\"let arg of selectedArgs | keyvalue; \">\n            <div class=\"tal-problem-widget-args-subrow\">\n              <!-- CELL: info -->\n              <div class=\"tal-problem-widget-args-row-info\">\n                <i #argsIcons class=\"pi pi-info-circle\" [id]=\"'args-icon-'+arg.value.key\"\n                  (click)=\"toggleShowRegex(arg.value,$event)\" style=\"cursor: pointer;\"\n                  [title]=\"arg.value.regex+''\"></i>\n              </div>\n              <!-- CELL: name -->\n              <div class=\"tal-problem-widget-args-row-name\" [title]=\"arg.value.name\">{{arg.value.name}}</div>\n\n              <!-- CELL: field -->\n              <div class=\"tal-problem-widget-args-row-field\">\n                <input pInputText type=\"text\" class=\"top-bar-url-input p-inputtext-sm\" [(ngModel)]=\"arg.value.value\"\n                  [placeholder]=\"arg.value.default\" [title]=\"arg.value.name +': '+arg.value.regex\" (change)=\"argDidChange(arg.value,$event)\"\n                  (blur)=\"argDidChange(arg.value,$event)\" (focus)=\"argDidFocus(arg.value,$event)\">\n              </div>\n\n              <!-- CELL: reset -->\n              <div class=\"tal-problem-widget-args-row-actions\">\n                <button pButton class=\"tal-square-button\" icon=\"pi pi-trash\" (click)=\"argDidReset(arg.value,$event)\"\n                  title=\"Reset to default\" pTooltip=\"Reset to default\"></button>\n              </div>\n            </div>\n\n            <!-- regex -->\n            <div class=\"tal-problem-widget-args-subrow\" [id]=\"'args-regex-panel-'+arg.value.key\"\n              style=\"display:none; cursor: pointer;\" (dblclick)=\"toggleRegexFormat(arg.value,$event)\">\n              <div class=\"tal-problem-widget-args-subrow-regexpr format-regex-simple\"\n                [id]=\"'args-regex-'+arg.value.key\">{{this.clenupRegex(arg.value.regex)}}</div>\n            </div>\n          </div>\n\n        </div>\n      </p-tabPanel>\n\n      <p-tabPanel header=\"Files\">\n        <!-- ROW:title -->\n        <ng-template pTemplate=\"header\" class=\"tal-problem-widget-args-row\">\n          <div class=\"tal-problem-widget-label\">Files</div>\n        </ng-template>\n\n        <!-- API: ARGS -->\n        <div class=\"tal-problem-widget-row tal-problem-widget-args\">\n          <!-- ROW: empty -->\n          <div class=\"tal-problem-widget-args-row stretch-flex\" *ngIf=\"!selectedFiles || selectedFiles.size==0\">\n            <div class=\"tal-problem-widget-args-row-no-params\">\n              <div>No files found.</div>\n            </div>\n          </div>\n\n\n          <!-- ROW: arg -->\n          <div class=\"tal-problem-widget-args-row\" *ngFor=\"let file of selectedFiles | keyvalue; \">\n              <div class=\"tal-problem-widget-args-subrow\">\n                <!-- CELL: info -->\n                <div class=\"tal-problem-widget-args-row-info\">\n                    <i #argsIcons class=\"pi pi-file\"></i>\n                </div>\n                <!-- CELL: name -->\n                <div class=\"tal-problem-widget-args-row-name\">{{file.value.name}}</div>\n\n                <!-- CELL: field -->\n                <div class=\"tal-problem-widget-args-row-field\">\n                    <p-dropdown placeholder=\"Select a file\" \n                                [id]=\"'file-dropdown-'+file.value.key\"\n                                (onChange)=\"fileDidChange(file.value,$event)\"\n                                [overlayOptions]=\"dropdownOptions\"\n                                styleClass=\"tal-problem-widget-files-dropdown\"\n                                panelStyleClass=\"tal-problem-widget-files-dropdown-panel\"\n                                [options]=\"filePathList\"\n                                [(ngModel)]=\"file.value.value\"\n                                [showClear]=\"true\">\n      \n                        <ng-template pTemplate=\"selectedItem\" let-option>\n                            <div class=\"tal-problem-widget-files-selected\">\n                              <div>{{option}}</div>\n                            </div>\n                        </ng-template>\n        \n        \n                        <ng-template pTemplate=\"item\" let-option>\n                            <div class=\"tal-problem-widget-files-item\">\n                              <div>{{option}}</div>\n                            </div>\n                        </ng-template>\n\n\n                    </p-dropdown>\n                </div>\n\n                <!-- CELL: reset -->\n                <!--\n                <div class=\"tal-problem-widget-args-row-actions\">\n                    <button pButton class=\"tal-square-button\" icon=\"pi pi-trash\" \n                            (click)=\"fileDidReset(file.value,$event)\"\n                            title=\"Reset to default\" \n                            pTooltip=\"Reset to default\"></button>\n                </div>\n                -->\n              </div>\n          </div>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>","import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { AutoComplete } from 'primeng/autocomplete';\nimport { ApiService, ApiState } from 'src/app/services/api-service/api.service';\nimport { NotificationManagerService, NotificationMessage, NotificationType } from 'src/app/services/notification-mananger-service/notification-manager.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { AppTheme, ThemeService } from 'src/app/services/theme-service/theme.service';\n\n\n@Component({\n  selector: 'tal-topbar-widget',\n  templateUrl: './topbar-widget.component.html',\n  styleUrls: ['./topbar-widget.component.scss']\n})\nexport class TopbarWidgetComponent implements OnInit {\n\n  @ViewChild(\"urlInput\") public urlInput?: AutoComplete;\n  @ViewChild(\"statusDot\") public statusDot?: ElementRef;\n  @ViewChild(\"messageBox\") public messageBox?: ElementRef;\n  \n  \n  \n  \n\n  url;\n  lastUrl;\n  urlCache:string[] = []\n  escapeRegEx = /[.*+?^${}()|[\\]\\\\]/g\n  urlInputClass = \"\"\n  subApiState\n  subProblemError\n  subOnNotify\n  currentNotification?:NotificationMessage\n\n  constructor( public readonly themeService: ThemeService, \n               public api: ApiService,\n               public zone: NgZone,\n               public pm: ProblemManagerService,\n               public nm: NotificationManagerService\n             ) {\n    this.url = api.url;\n    this.lastUrl=this.url+\"\";\n    this.urlCache = [...this.api.urlCache]\n    this.subApiState = this.api.onApiStateChange.subscribe((state:ApiState)=>{this.updateState(state)})\n    this.subProblemError = this.pm.onError.subscribe((_)=>{this.stateBad()})\n    this.subOnNotify = this.nm.onNotification.subscribe((msg:NotificationMessage): void=>{this.showNotification(msg)})\n  }\n\n  ngOnInit(): void {}\n\n  public get changeThemIcon(): string {\n    return this.themeService.currentTheme == AppTheme.dark ? 'pi-sun' : 'pi-moon';\n  }\n\n  public toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n\n  public iconForNotification(){\n    let icon = \"pi-info\"\n    switch(this.currentNotification?.type){\n      default:\n      case NotificationType.System:\n      case NotificationType.Debug:\n      case NotificationType.Info:\n        icon = \"pi-info\"\n        break;\n      case NotificationType.Warning:\n      case NotificationType.Error:\n        icon = \"pi-error\"\n    }\n    return icon\n  }\n\n  showNotification(msg:NotificationMessage, timeout=3){\n    let box = this.messageBox?.nativeElement as HTMLElement\n    box.style.display = \"flex\"\n    this.currentNotification=msg\n    setTimeout(()=>{this.hideNotification()}, timeout * 1000)\n  }\n\n  hideNotification(){\n    let box = this.messageBox?.nativeElement as HTMLElement\n    box.style.display = \"none\"\n    this.currentNotification=undefined\n  }\n  \n\n  filterSuggestions(event:any) {\n    let query = event.query.replace(this.escapeRegEx, '\\\\$&')\n    let filter = new RegExp(\".*\"+query+\".*\")\n    let urlCache:string[] = []\n    this.api.urlCache.forEach( (url:string) => {\n      if(url.match(filter)){\n        urlCache.push(url)\n      }\n    });\n    this.urlCache=urlCache\n  }\n\n  public updateState(state:ApiState){\n    let dot = this.statusDot!.nativeElement as HTMLElement\n    switch(state){\n      case ApiState.Idle: dot.style.color=\"\"; break;\n      case ApiState.Good: dot.style.color=\"green\"; break;\n      case ApiState.Maybe: dot.style.color=\"orange\"; break;\n      case ApiState.Bad: dot.style.color=\"darkred\"; break;\n    }\n  }\n\n  public stateIdle(){ this.updateState(ApiState.Idle); }\n  public stateGood(){ this.updateState(ApiState.Good); }\n  public stateMaybe(){ this.updateState(ApiState.Maybe); }\n  public stateBad(){ this.updateState(ApiState.Bad); }\n\n  public changeURL(event:Event) {\n    if(this.lastUrl == this.url){return}\n    this.stateIdle()\n    let dot = this.statusDot!.nativeElement as HTMLElement\n    console.log(\"changeURL:dot:\", dot)\n    console.log(\"changeURL:event:\", event)\n    let url = this.url;\n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.setUrl(url) ){\n      this.stateBad()\n      console.log(\"changeURL:setURL:failed\")\n    }else{\n      this.url = this.api.url;\n      console.log(\"changeURL:setURL:success\")\n      this.urlCache = this.api.urlCache\n      this.stateMaybe()\n      this.pm.updateProblems()\n    }\n    \n    console.log(\"changeURL:urlCache:after:\", this.urlCache )\n    console.log(\"changeURL:url:\", this.url )\n    this.lastUrl = this.url + \"\"\n  }\n\n  public removeURL(url:string, event:Event) {\n    if(event){ event.preventDefault();event.stopPropagation();event.stopImmediatePropagation(); }\n    \n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.removeFromCache(url) ){\n      console.log(\"changeURL:removeURL:done\")\n    }\n    this.urlCache = this.api.urlCache\n    \n\n\n    console.log(\"changeURL:urlCache:after:\",this.urlCache)\n    console.log(\"changeURL:url:\",url)\n  }\n  \n}\n","<div class=\"tal-topbar\">\n    <div class=\"tal-brand\">\n        <h1>TALight Desktop</h1>\n    </div>\n\n    \n    <div class=\"tal-message-box\">\n        <div #messageBox *ngIf=\"!!currentNotification\" class=\"tal-message-box-main tal-message-box-{{currentNotification.type}}\" >\n            <div class=\"tal-message-col\">\n                <i class=\"pi {{iconForNotification()}} tal-message-row tal-message-row-icon\"></i>\n            </div>\n            <div class=\"tal-message-col\">\n                <div class=\"tal-message-row tal-message-row-title\">{{currentNotification.title}}</div>\n                <div class=\"tal-message-row tal-message-row-message\">{{currentNotification.message}}</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"tal-bar-url\">\n\n        <i #statusDot class=\"pi pi-circle-fill\" pTooltip=\"Status\"></i>\n\n        <p-autoComplete #urlInput class=\"top-bar-url-input p-inputtext-sm\"\n            (placeholder)=\"urlCache\"  [(ngModel)]=\"url\"\n            (change)=\"changeURL($event)\" (onSelect)=\"changeURL($event)\" (onBlur)=\"changeURL($event)\" [suggestions]=\"urlCache\"\n            (completeMethod)=\"filterSuggestions($event)\" [dropdown]=\"true\">\n\n            <ng-template let-url pTemplate=\"item\">\n                <div class=\"url-item\">\n                    <div class=\"url-item-label\">{{url}}</div>\n                    <button pButton icon=\"pi pi-trash\" class=\"tal-square-button\" pTooltip=\"Remove URL\" (click)=\"removeURL(url, $event)\"></button>\n                </div>\n            </ng-template>\n\n        </p-autoComplete>        \n\n        <button pButton icon=\"pi {{changeThemIcon}}\" class=\"tal-square-button\" (click)=\"toggleTheme()\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopbarWidgetComponent } from './topbar-widget/topbar-widget.component';\n\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    TopbarWidgetComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AutoCompleteModule,\n    InputTextModule,\n    TooltipModule,\n    ButtonModule,\n  ],exports:[\n    TopbarWidgetComponent\n  ]\n})\nexport class TopbarModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["TALightSocket","Packets","xxhash128","JSONbig","require","Commands","Command","constructor","url","decodeBinary","tal","decode","onError","error","didError","onClose","didClose","onRecive","payload","didRecive","onReciveBinary","didReciveBinary","onReciveUndecodedBinary","didReciveUndecodedBinary","run","msg","Request","Handshake","send","sendBinary","data","log","args","prefix","name","console","debug","alert","join","message","getMessage","Reply","didReciveHandshake","onReciveHandshake","ProblemList","handshake","MetaList","getMessage_MetaList","didReciveProblemList","onRecieveProblemList","Attchment","problem_name","Attachment","didRecieveAttachment","AttachmentInfo","didRecieveAttachmentInfo","onReciveAttachment","onReciveAttachmentInfo","Connect","service","tty","token","files","Map","fileArgNames","keys","ConnectBegin","didRecieveConnectBegin","size","status","Ok","length","byteSize","str","Blob","nameArgFile","content","entries","hashHex","hash","BigInt","header","BinaryHeader","toString","header_parsed","stringify","ws","next","ConnectStart","didRecieveConnectStart","ConnectStop","didRecieveConnectStop","didRecieveBinaryHeader","onReciveConnectBegin","onReciveConnectStart","onReciveConnectStop","isOpen","sendConnectStop","onReciveBinaryHeader","CloseConnection","didReciveConnectStop","createFs","IndexeddbFsDriver","databaseVersion","objectStoreName","databaseName","rootDirectoryName","rootDir","fs","options","ready","readFile","fullpath","binary","exists","createDirectory","res","writeFile","readDirectory","scanDirectory_recursive","mount","path","Promise","resolve","unmount","scanDirectory","recursive","rootNode","split","reverse","folders","dirContent","key","element","childNode","fullPath","push","directories","delete","remove","FsServiceTest","useDriver","driverName","driver","getDriver","createTestFiles","FsNodeList","Array","FsService","registerDriver","drivers","set","has","get","getDriverNames","undefined","from","treeToList","root","items","queue","dir","shift","concat","factory","providedIn","Tar","unpack","tarball","cb","extract","tarstream","on","stream","filetype","type","filename","slice","file","read","dirname","forder","resume","sort","a","b","tarData","Uint8Array","write","errr","end","pack","chunks","chunk","byteLength","offset","forEach","item","processItems","ArrayBuffer","entry","finalize","TextEncoder","TextDecoder","xxhash","load","response","fetch","buffer","arrayBuffer","WebAssembly","instantiate","then","result","instance","sharedInstance","exports","catch","xxh128","XXH128","ProjectType","ProjectList","ProjectEnvironment","config","ProjectConfig","activate","deactivate","DIR_PROJECT","CONFIG_NAME","defaultConfig","CONFIG_PATH","configContent","JSON","parse","save","PyodideMessageType","PyodideDriver","worker","Worker","URL","import","meta","onmessage","event","didRecieve","addEventListener","requestHandler","requestIndex","uid","removeRequest","msgSent","request","msgRecived","resolvePromise","Ready","didReceiveReady","InstallPackages","didReceiveInstallPackages","ExecuteCode","didReceiveExecuteCode","ExecuteFile","didReceiveExecuteFile","StopExecution","didReceiveStopExecution","SubscribeNotify","didReceiveSubscribeNotify","SubscribeState","didReceiveSubscribeState","SubscribeStdout","didReceiveSubscribeStdout","SubscribeStderr","didReceiveSubscribeStderr","SendStdin","didReceiveSendStdin","CreateDirectory","didReceiveCreateDirectory","ReadDirectory","didReceiveReadDirectory","ScanDirectory","didReceiveScanDirectory","WriteFile","didReceiveWriteFile","ReadFile","didReceiveReadFile","Delete","didReceiveDelete","Exists","didReceiveExists","contents","onNotify","title","kind","onState","state","onStdout","onStderr","pathSent","pathRecived","replacer","value","node","internal_jsonReplacer","sendMessage","timestamp","Date","now","promiseResolver","resultPromise","reject","postMessage","requestUID","Mount","Unmount","installPackages","packages","executeCode","code","executeFile","stopExecution","signal","subscribeNotify","enable","subscribeState","subscribeStdout","subscribeStderr","sendStdin","parent","binDecoder","toArrayBuffer","binEncoder","encode","timestap","getTime","seed","Math","floor","random","PythonCompilerService","createPythonProject","writeConfig","readPythonConfig","DIR_ATTACHMENTS","CREATE_EXAMPLES","DIR_EXAMPLES","i","mainContent","inputExample","freesumExample","sumExample","unshift","RUN","examples","runProject","PIP_PACKAGES","PyodideState","NgZone","Buffer","DemoViewComponent","zone","api","ngOnInit","onApiError","refreshOutput","output","apiProblemList","onSuccess","problemList","req","apiGetAttachment","onAttachment","onAttachmentInfo","onData","GetAttachment","apiConnect","onConnectionBegin","onConnectionStart","onConnectionClose","cmdConnect","apiConnectOld","setTimeout","hashTest","hex","dec","parseInt","selectors","decls","vars","consts","template","i0","ctx","NotificationManagerService","OutputType","CodeEditorComponent","python","nm","pm","Unknown","EmptyFolder","currentProject","project","createProject","didNotify","didStateChange","didStdout","didStderr","ngAfterViewInit","outputWidget","enableStdin","onUpdateRoot","fsroot","fslist","fslistfile","filter","filePathList","problemWidget","print","pyodideState","pyodideStateContent","STDERR","fromAPI","msgs","pop","STDINAPI","STDIN","Stdin","onProblemChanged","selectedProblem","selectedService","onServiceChanged","onAttachments","idx","folder","fileExplorer","refreshRoot","selectFile","selectedFile","execBar","fileEditor","editorDidChange","saveFile","editorDidInput","stopAll","closeConnection","useAPI","clearOutput","mainFile","find","SYSTEM","runConnectAPI","problem","exportArgs","TAL_TOKEN","filePaths","exportFilesPaths","fileArgPath","fileArgName","found","didConnectStart","didConnectBegin","didConnectClose","didConnectData","onBinaryHeader","didConnectError","output_files","current_output_file","viewQuery","ElementRef","EventEmitter","marked","EditorType","MatchMethod","MatchType","EditorOptions","EditorOptionsMonaco","language","EditorOptionsBrowser","embedded","mime","FileAssociation","pattern","editorType","None","editorOption","priority","matchMethod","Auto","matchType","match","parts","ext","splice","matchAll","associations","matches","association","FileAssociationChoiceList","add","includes","bestMatch","FileEditorWidgetComponent","themeService","Code","Markdown","Archive","Browser","_selectedFile","selectEditor","openEditor","fileAssocList","markdownBox","markdownPreview","nativeElement","innerHTML","monacoOptions","monacoEditor","updateEditorOptions","browserOptions","iframe","browserEditor","body","btoa","daraurl","src","shouldHide","monacoEditorDidChange","onChange","emit","QueryList","OverlayPanel","ctx_r10","ctx_r12","ctx_r28","ctx_r31","ctx_r33","ctx_r36","ctx_r38","ctx_r40","ctx_r42","ctx_r56","ctx_r60","ctx_r62","ctx_r64","ctx_r66","FileExplorerWidgetComponent","confirmationService","bindCollapseEvent","onDone","rows","document","getElementsByClassName","classList","contains","row","handleClickEvent","preventDefault","stopPropagation","target","newParent","safeCount","parentElement","toggle","closeAllContextMenus","panels","p","hide","onSelectFile","selectFolder","selectedFolder","openSettings","showHidden","projectFolder","configFile","configPath","toggleHidden","isVisibile","fsitem","isHidden","startsWith","startEditing","editingItem","editingValue","editingItemFolder","editingItemError","nameEditingElement","focus","saveEditing","trim","cancelEditing","editItemChange","existingFile","f","existingFolder","deleteFileClick","confirm","icon","accept","deleteFile","currentFolder","deleteFolderClick","deleteFolder","syncFilesystem","addNewItem","newItemValue","newItemFolder","newItemType","newItemError","newItemNameElement","cancelNewItem","saveNewItem","newItemChange","upload","HTMLInputElement","endsWith","importProject","export","tarname","triggerDownload","createElement","blob","window","createObjectURL","style","display","download","href","appendChild","click","removeChild","revokeObjectURL","Dropdown","ServiceMenuEntry","descriptor","ProblemMenuEntry","ProblemWidgetComponent","problemSub","onProblemsChanged","subscribe","clear","problemsDidChange","dropdownOptions","appendTo","reloadProblemList","ngOnDestroy","unsubscribe","isLoading","loading","refreshFilePathList","clenupRegex","re","text","replace","cleanupName","RegExp","charAt","toUpperCase","readableRegex","last","argDidFocus","arg","idPanel","idRegex","panel","getElementById","regex","HTMLElement","color","argDidChange","issues","validateArg","default","argDidReset","fileDidChange","idDropdown","dropdown","pathExist","fileDidReset","toggleShowRegex","toggleRegexFormat","innerText","selectedArgs","selectedFiles","problemsMenu","servicesMenu","updateProblems","problemDesc","toLowerCase","didSelectProblem","selectProblem","services","serviceDesc","onProblemSelected","didSelectService","selectService","onServiceSelected","apiDownloadAttachment","info"],"sourceRoot":"webpack:///","x_google_ignoreList":[49]}