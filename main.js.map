{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/routes.ts","./src/app/services/api-service/api.commands.ts","./src/app/services/api-service/api.packets.ts","./src/app/services/api-service/api.service.ts","./src/app/services/api-service/api.socket.ts","./src/app/services/connection-manager-service/connection-manager.service.ts","./src/app/services/fs-service/fs.service.test.ts","./src/app/services/fs-service/fs.service.ts","./src/app/services/problem-manager-service/problem-manager.service.ts","./src/app/services/python-compiler-service/pydiode-driver.ts","./src/app/services/python-compiler-service/python-compiler.service.ts","./src/app/services/theme-service/theme.service.ts","./src/app/views/connect-view/connect-view.component.ts","./src/app/views/connect-view/connect-view.component.html","./src/app/views/demo-view/demo-view.ts","./src/app/views/demo-view/demo-view.component.html","./src/app/views/home-view/home-view.component.ts","./src/app/views/home-view/home-view.component.html","./src/app/views/select-problem-view/select-problem-view.component.ts","./src/app/views/select-problem-view/select-problem-view.component.html","./src/app/widgets/code-editor/code-editor.module.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.html","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.ts","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.html","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.ts","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.html","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.ts","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.html","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.ts","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.html","./src/app/widgets/code-editor/output-widget/output-widget.component.ts","./src/app/widgets/code-editor/output-widget/output-widget.component.html","./src/app/widgets/code-editor/problem-widget/problem-widget.component.ts","./src/app/widgets/code-editor/problem-widget/problem-widget.component.html","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.ts","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.html","./src/app/widgets/topbar/topbar.module.ts","./src/environments/environment.ts","./src/main.ts","ignored|/home/runner/work/TALightDesktop/TALightDesktop/node_modules/tar-web|fs"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n\n}\n","<div class=\"tal-page-container\">\n  <div class=\"tal-page-topbar\">\n    <tal-topbar-widget></tal-topbar-widget>\n  </div>\n  <div class=\"tal-page-content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { routes } from './routes';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { SplitterModule } from 'primeng/splitter';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { CodeEditorModule } from './widgets/code-editor/code-editor.module';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopbarModule } from './widgets/topbar/topbar.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeViewComponent,\n    ConnectViewComponent,\n    SelectProblemViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MonacoEditorModule.forRoot(),\n    RouterModule.forRoot(routes),\n    FormsModule,\n    InputTextModule,\n    InputSwitchModule,\n    DropdownModule,\n    FileUploadModule,\n    FormsModule,\n    InputTextModule,\n    TooltipModule,\n    ScrollPanelModule,\n    SelectButtonModule,\n    SplitterModule,\n    RadioButtonModule,\n    CodeEditorModule,\n    TopbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConnectionManagerService } from '../services/connection-manager-service/connection-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly connectionManagerService: ConnectionManagerService,\n    private readonly router: Router,\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isConnected: boolean = this.connectionManagerService.isConnected;\n\n    if (!isConnected) {\n      //this.router.navigate(['/connect']);\n    }\n    return true;\n    return isConnected;\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { DemoViewComponent } from './views/demo-view/demo-view';\n\nexport const routes: Routes = [\n    /*\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n    */\n\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n\n    /*\n    {\n        path: 'connect',\n        component: ConnectViewComponent\n    },\n\n    {\n        path: 'select-problem',\n        component: SelectProblemViewComponent\n    },\n    */\n    {\n        path: 'demo',\n        component: DemoViewComponent\n    },\n];","import { TALightSocket } from \"./api.socket\";\nimport { Packets } from \"./api.packets\";\n\nexport namespace Commands{\n\n    export class Command{\n      public tal: TALightSocket;\n      public url?:string;\n      public debug=false; \n      public onReciveHandshake?:(message:Packets.Reply.Handshake)=>void;\n      public onReciveBinary?:(message:string)=>void;\n      public onReciveUndecodedBinary?:(message:ArrayBuffer)=>void;\n      public onRecive?:(message:Packets.PacketsPayload)=>void; \n      public onClose?:()=>void;\n      public onError?:(error:any)=>void;\n  \n      constructor(url:string, decodeBinary?:boolean){\n        this.url = url;\n        this.tal = new TALightSocket(this.url);\n        if(decodeBinary === false) {this.tal.decode = decodeBinary;}\n\n        this.tal.onError = (error)=>{ this.didError(error); };\n        this.tal.onClose = ()=>{ this.didClose(); };\n        this.tal.onRecive = (payload)=> { this.didRecive(payload) }\n        this.tal.onReciveBinary = (payload)=> { this.didReciveBinary(payload) }\n        this.tal.onReciveUndecodedBinary = (payload)=> { this.didReciveUndecodedBinary(payload) }\n      }\n      \n      public run(){\n        let msg = new Packets.Request.Handshake();\n        this.tal.send(msg);\n      }\n\n      public sendBinary(data:string){\n        this.log(\"didSendBinary: \"+data);\n        this.tal.sendBinary(data);\n      }\n\n      public log(...args:string[]){\n        let prefix = this.constructor.name+\": \"\n        console.log(prefix, ...args);\n\n        if (this.debug) alert(prefix + (args).join(\" \") );\n      }\n      \n      public didClose(){\n        this.log(\"didClose\");\n        if (this.onClose){ this.onClose();}\n      }\n  \n      public didError(error:any){\n        this.log(\"didError \",error);\n        if (this.onError){ this.onError(error);}\n      }\n\n      public didReciveBinary(payload:string){\n        this.log(\"didReciveBinary:\\n\"+payload);\n        if(this.onReciveBinary){this.onReciveBinary(payload)}\n      }\n\n      public didReciveUndecodedBinary(payload:ArrayBuffer){\n        this.log(\"didReciveUndecodedBinary:\\n\");\n        if(this.onReciveUndecodedBinary){this.onReciveUndecodedBinary(payload)}\n      }\n\n      public didRecive(payload:Packets.PacketsPayload){\n        this.log(\"didRecive\");\n        if(this.onRecive){ this.onRecive(payload) }\n        \n        let message = payload.getMessage(Packets.Reply.Handshake)\n        if (message){ this.didReciveHandshake(message); }\n      }\n\n      \n      public didReciveHandshake(message:Packets.Reply.Handshake){\n        this.log(\"didRecieveHandshake\");\n        if (this.onReciveHandshake) { this.onReciveHandshake(message); }\n      }\n    }\n\n    export class ProblemList extends Command{\n      public onRecieveProblemList?:(message:Packets.Reply.MetaList)=>void\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.MetaList();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.MetaList);\n        if (message){ this.didReciveProblemList(message); }\n      }\n        \n      public didReciveProblemList(message:Packets.Reply.MetaList){\n        this.log(\"onRecieveProblemList\");\n        if (this.onRecieveProblemList) { this.onRecieveProblemList(message); }\n      }\n    }\n\n    export class Attchment extends Command{\n      public onReciveAttachment?:(message:Packets.Reply.Attachment )=>void;\n      public onReciveAttachmentInfo?:(message:Packets.Reply.AttachmentInfo)=>void;\n\n      private msg:Packets.Request.Attachment;\n  \n      constructor(url:string, problem_name:string){\n        super(url, false);\n  \n        this.msg = new Packets.Request.Attachment(problem_name);\n      }\n  \n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n  \n        this.tal!.send(this.msg)\n      }\n\n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n\n        message = payload.getMessage(Packets.Reply.Attachment)\n        if (message){ this.didRecieveAttachment(message); }\n \n        message = payload.getMessage(Packets.Reply.AttachmentInfo)\n        if (message){ this.didRecieveAttachmentInfo(message);}\n        \n      }\n\n      public didRecieveAttachment(message: Packets.Reply.Attachment){\n        this.log(\"Attachment\");\n        if (this.onReciveAttachment ) { this.onReciveAttachment(message); }\n      }\n      \n      public didRecieveAttachmentInfo(message: Packets.Reply.AttachmentInfo){\n        this.log(\"AttachmentInfo\");\n        if (this.onReciveAttachmentInfo ) { this.onReciveAttachmentInfo(message); }\n      }\n      \n    }  \n    \n    export class Connect extends Command{ \n      public onReciveConnectBegin?:(message:Packets.Reply.ConnectBegin )=>void;\n      public onReciveConnectStart?:(message:Packets.Reply.ConnectStart)=>void;\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n      \n      private msg:Packets.Request.ConnectBegin;\n  \n      constructor(url:string, problem_name:string, service:string, args?:{}, tty?:boolean, token?:string, files?:string[]){\n        super(url);\n        this.msg = new Packets.Request.ConnectBegin(problem_name, service, args, tty, token, files);\n      }\n\n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal.send(this.msg);\n      }\n      \n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n        message = payload.getMessage(Packets.Reply.ConnectBegin);\n        if (message){ this.didRecieveConnectBegin(message); }\n\n        message = payload.getMessage(Packets.Reply.ConnectStart)\n        if (message){ this.didRecieveConnectStart(message); }\n\n        message = payload.getMessage(Packets.Reply.ConnectStop)\n        if (message){ this.didRecieveConnectStop(message); }\n      }\n\n      public didRecieveConnectBegin(message: Packets.Reply.ConnectBegin){\n        this.log(\"didRecieveJoin\");\n        if (this.onReciveConnectBegin ) { this.onReciveConnectBegin(message); }\n      }\n\n      public didRecieveConnectStart(message: Packets.Reply.ConnectStart){\n        this.log(\"didRecieveUpdate\");\n        if (this.onReciveConnectStart ) { this.onReciveConnectStart(message); }\n      }\n      \n      public didRecieveConnectStop(message: Packets.Reply.ConnectStop){\n        this.log(\"didRecieveStart\");\n        if (this.onReciveConnectStop ) { if(this.tal.isOpen()) {this.sendConnectStop();} this.tal.closeConnection(); this.onReciveConnectStop(message); }\n      }\n\n      public sendConnectStop() {\n        this.tal.send(new Packets.Request.ConnectStop());\n        //this.tal.closeConnection();\n      }\n    }\n\n    export class CloseConnection extends Command{\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n\n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.ConnectStop();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.ConnectStop);\n        if (message){ this.didReciveConnectStop(message); }\n      }\n        \n      public didReciveConnectStop(message:Packets.Reply.ConnectStop){\n        this.log(\"didRecieveGameList\");\n        if (this.onReciveConnectStop) { this.onReciveConnectStop(message); }\n      }\n    }\n\n    /*\n  \n    export class GameList extends Command{\n      public onRecieveGameList?:(message:Packets.Reply.GameList)=>void\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.GameList();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameList)\n        if (message){ this.didReciveGameList(message); }\n      }\n        \n      public didReciveGameList(message:Packets.Reply.GameList){\n        this.log(\"didRecieveGameList\");\n        if (this.onRecieveGameList) { this.onRecieveGameList(message); }\n      }\n    }\n\n    export class GameDescription extends Command{\n      public onRecieveGameDescription?:(message:Packets.Reply.GameDescription)=>void\n      private msg:Packets.Request.GameDescription;\n  \n      constructor(url:string, game:string){\n        super(url);\n        this.msg = new Packets.Request.GameDescription(game);\n      }\n\n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.GameDescription();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameDescription)\n        if (message){ this.didReciveGameDescription(message); }\n      }\n        \n      public didReciveGameDescription(message:Packets.Reply.GameDescription){\n        this.log(\"didRecieveGameList\");\n        if (this.onRecieveGameDescription) { this.onRecieveGameDescription(message); }\n      }\n    }\n  \n    export class LobbyList extends Command{\n      public onReciveLobbyList?:(message:Packets.Reply.LobbyList)=>void;\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        \n        let msg = new Packets.Request.LobbyList();\n        this.tal!.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.LobbyList)\n        if (message){ this.didRecieveLobbyList(message);}\n      }\n        \n      public didRecieveLobbyList(message:Packets.Reply.LobbyList){\n        this.log(\"didRecieveLobbyList\");\n        if (this.onReciveLobbyList) { this.onReciveLobbyList(message); }\n      }\n    }\n  \n    export class NewLobby extends Command {\n      public onReciveNewLobby?:(message:Packets.Reply.GameNew)=>void;\n\n      private msg:Packets.Request.GameNew;\n  \n      constructor(url:string, lobby_name?:string, game_name?:string, num_palyer?:number, num_bots?:number, timeout?:number, args?:{}, password?:string){\n        super(url);\n        this.msg = new Packets.Request.GameNew(lobby_name, game_name, num_palyer, num_bots, timeout, args, password);\n      }\n      \n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameNew)\n        if (message){\n          this.didRecieveNewLobby(message);\n        }\n      }\n        \n      public didRecieveNewLobby(message:Packets.Reply.GameNew){\n        this.log(\"didRecieveNewLobby\");\n        if (this.onReciveNewLobby) { this.onReciveNewLobby(message); }\n      }\n            \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal!.send(this.msg);\n      }\n    }\n  \n    export class Connect extends Command{\n      public onReciveJoin?:(message:Packets.Reply.LobbyJoinedMatch )=>void;\n      public onReciveUpdate?:(message:Packets.Reply.LobbyUpdate)=>void;\n      public onReciveStart?:(message:Packets.Reply.MatchStarted)=>void;\n      public onReciveEnd?:(message:Packets.Reply.MatchEnded) => void;\n      \n      private msg:Packets.Request.LobbyJoinMatch;\n  \n      constructor(url:string, lobby_id:string, player_name:string, lobby_password?:string){\n        super(url);\n        this.msg = new Packets.Request.LobbyJoinMatch(lobby_id, player_name, lobby_password);\n      }\n\n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal.send(this.msg);\n      }\n      \n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n        message = payload.getMessage(Packets.Reply.LobbyJoinedMatch);\n        if (message){ this.didRecieveJoin(message); }\n\n        message = payload.getMessage(Packets.Reply.LobbyUpdate)\n        if (message){ this.didRecieveUpdate(message); }\n\n        message = payload.getMessage(Packets.Reply.MatchStarted)\n        if (message){ this.didRecieveStart(message); }\n        \n        message = payload.getMessage(Packets.Reply.MatchEnded)\n        if (message){ this.didRecieveEnd(message); }\n      }\n\n      public didRecieveJoin(message: Packets.Reply.LobbyJoinedMatch){\n        this.log(\"didRecieveJoin\");\n        if (this.onReciveJoin ) { this.onReciveJoin(message); }\n      }\n\n      public didRecieveUpdate(message: Packets.Reply.LobbyUpdate){\n        this.log(\"didRecieveUpdate\");\n        if (this.onReciveUpdate ) { this.onReciveUpdate(message); }\n      }\n      \n      public didRecieveStart(message: Packets.Reply.MatchStarted){\n        this.log(\"didRecieveStart\");\n        if (this.onReciveStart ) { this.onReciveStart(message); }\n      }\n      \n      public didRecieveEnd(message: Packets.Reply.MatchEnded){\n        this.log(\"didRecieveEnd\");\n        this.tal.closeConnection();\n        if (this.onReciveEnd ) { this.onReciveEnd(message); }\n      }\n    }\n\n    export class Spectate extends Command{\n      public onReciveJoin?:(message:Packets.Reply.SpectateJoined )=>void;\n      public onReciveUpdate?:(message:Packets.Reply.LobbyUpdate)=>void;\n      public onReciveStart?:(message:Packets.Reply.SpectateStarted)=>void;\n      public onReciveSync?:(message:Packets.Reply.SpectateSynced) => void;\n      public onReciveEnd?:(message:Packets.Reply.SpectateEnded) => void;\n\n      private msg:Packets.Request.SpectateJoin;\n  \n      constructor(url:string, lobby_id:string){\n        super(url);\n  \n        this.msg = new Packets.Request.SpectateJoin(lobby_id);\n      }\n  \n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n  \n        this.tal!.send(this.msg)\n      }\n\n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n\n        message = payload.getMessage(Packets.Reply.SpectateJoined)\n        if (message){ this.didRecieveJoin(message); }\n\n        message = payload.getMessage(Packets.Reply.LobbyUpdate)\n        if (message){ this.didRecieveUpdate(message);}\n        \n        message = payload.getMessage(Packets.Reply.SpectateStarted)\n        if (message){ this.didRecieveStart(message);}\n\n        message = payload.getMessage(Packets.Reply.SpectateSynced)\n        if (message){ this.didRecieveStart(message);}\n\n        message = payload.getMessage(Packets.Reply.SpectateEnded)\n        if (message){ this.didRecieveEnd(message);}\n\n      }\n\n      public didRecieveJoin(message: Packets.Reply.LobbyJoinedMatch){\n        this.log(\"LobbyJoinedMatch\");\n        if (this.onReciveJoin ) { this.onReciveJoin(message); }\n      }\n\n      public didRecieveUpdate(message: Packets.Reply.LobbyUpdate){\n        this.log(\"LobbyUpdate\");\n        if (this.onReciveUpdate ) { this.onReciveUpdate(message); }\n      }\n      \n      public didRecieveStart(message: Packets.Reply.MatchStarted){\n        this.log(\"MatchStarted\");\n        if (this.onReciveStart ) { this.onReciveStart(message); }\n      }\n      \n      public didRecieveEnd(message: Packets.Reply.MatchEnded){\n        this.log(\"MatchEnded\");\n        this.tal.closeConnection();\n        if (this.onReciveEnd ) { this.onReciveEnd(message); }\n      }\n    }\n    */\n  }","\nexport namespace Packets{\n\n    export class PacketsPayload{\n      public data;\n      public packets:any;\n      public packetTypes:string[] = []\n\n      constructor(data:string){\n        this.data = data;\n        this.packets = JSON.parse(this.data);\n        for (var pkttype in this.packets) {\n          this.packetTypes.push(pkttype)\n        }\n\n        if(this.packetTypes.length === 3 &&\n          this.packetTypes.indexOf(\"name\") === 0 &&\n          this.packetTypes.indexOf(\"size\") === 1 &&\n          this.packetTypes.indexOf(\"hash\") === 2\n          ) {\n            this.packetTypes = [\"AttachmentInfo\"];\n            this.packets = {\"AttachmentInfo\" : this.packets};\n        }\n      }\n\n      public getMessage<T extends Message>( packetClass: new (packet?: any)=>T ):T | null{\n        let packetType = packetClass.name;\n        for (var pkttype in this.packets) {\n          if (pkttype != packetType){ continue; }\n          let packet = this.packets[packetType] \n          let message = new packetClass(packet);\n          return message;\n        }        \n        return null;\n      }\n\n    }\n  \n    export class Message{\n      constructor(packet?: any){\n        if(packet){this.fromPacket(packet);}\n      }\n\n      public static dataToPayload(data: string): PacketsPayload{\n        let raw = JSON.parse(data);\n        return raw;\n      }\n      \n      public static findPacketName(msgClasses: Array<string>, packet: any): string{\n        var msgClass = \"\";\n        msgClasses.forEach((msgName) => {\n          if(msgName in JSON.parse(packet)){\n            msgClass = msgName;\n          }\n        });\n  \n        return msgClass;\n      }\n\n\n\n      public messageName():string{\n        return this.constructor.name;\n      }\n  \n      public toPacketWithName(messageName: string){\n        const packet = { [messageName]:this };\n        return packet;\n      }\n\n      public toPacket(): any{\n        const packetName = this.messageName();\n        const packet = { [packetName]:this };\n        return packet;\n      }\n      \n      public fromPacket(packet:any){\n        for (var msgField in this) {\n          if (! (msgField in packet)){ continue; }\n          let value = packet[msgField];\n          const varType = typeof value;\n          \n          if (varType in [\"function\",\"undefined\",\"symbol\"] ){ continue; }\n  \n          if (varType === \"object\") {\n            this[msgField] = Object.assign(value);\n          } else {\n            this[msgField] = value;\n          }\n        }\n        return true;\n      }\n    }\n  \n  export class Meta {\n    constructor(data?: any){\n      //console.log(\"Meta:constructor:\", data)\n      this.public_folder = data.public_folder\n      let servicesMap = new Map<string,Service>()\n      for(var attr in data.services){\n        let value = data.services[attr];\n        //console.log(\"Meta:constructor:services:\",attr,value)\n        let service = new Service(value);\n        servicesMap.set(attr,service)\n      }\n      this.services = servicesMap\n    }\n    public public_folder: string = \"\";\n    public services: Map<string, Service> = new Map<string, Service>();\n  }\n\n  export class Service {\n    constructor(data?: any){\n      //console.log(\"Service:constructor:\", data)\n      this.evaluator = data.evaluator\n      this.files = data.files\n      let argsMap = new Map<string,Arg>()\n      for(var attr in data.args){\n        let value = data.args[attr];\n        let arg = new Arg(value);\n        argsMap.set(attr,arg)\n      }\n      this.args = argsMap\n    }\n    public evaluator: string[] = [];\n    public args?:Map<string, Arg>;\n    public files?: string[];\n  }\n\n  export class Arg {\n    constructor(data: any){\n      this.regex = data.regex\n      this.default = data.default\n    }\n    public regex: RegExp;\n    public default: string;\n  }\n\n\n\n    \n  // Requests ---------------------------------\n  export namespace Request{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"rtal\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {}\n    export class  Attachment extends Message{\n      public problem: String;\n\n      constructor(problem_name:String) {\n        super();\n        this.problem = problem_name;\n      }\n    }\n    export class ConnectBegin extends Message {\n      public problem:string = \"\";\n      public service:string = \"\";\n      public args:{} = {};\n      public tty:boolean = false;\n      public token:string|null = null;\n      public files:string[] = [];\n\n      constructor(problem:string, service:string, args:{}={}, tty:boolean=false, token:string|null = null, files:string[] = []) {\n        super();\n        this.problem = problem;\n        this.service = service;\n        this.args = args;\n        this.tty = tty;\n        this.token = token;\n        this.files = files;\n      }\n    }\n    export class ConnectStop extends Message {}\n  }\n\n\n  export namespace Reply{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {\n      constructor(packet?: any){\n        super(packet)\n        let metaMap = new Map<string,Meta>()\n        for(var attr in packet.meta){\n          let value = packet.meta[attr];\n          let meta = new Meta(value);\n          metaMap.set(attr,meta)\n        }\n        this.meta = metaMap\n      }\n      public meta:Map<string, Meta> = new Map<string, Meta>();\n    }\n    export class  Attachment extends Message{\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class AttachmentInfo extends Message {\n      public name:string = \"\";\n      public size:string = \"\";\n      public hash:string = \"\";\n    }\n    export class ConnectBegin extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n    export class ConnectStart extends Message {\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class ConnectStop extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n\n    /*\n    Attachment { status: Result<(), String> },\n    ConnectBegin { status: Result<Vec<String>, String> },\n    ConnectStart { status: Result<(), String> },\n    ConnectStop { status: Result<Vec<String>, String> }\n    */\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Packets } from './api.packets';\nimport { Commands } from './api.commands';\n\nexport class Meta extends Packets.Meta{}\nexport interface AttachmentInfo extends Packets.Reply.AttachmentInfo{}\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private _url;\n  urlCache;\n\n  constructor(){\n    this._url = 'ws://localhost:8008/'\n    this.urlCache = [\n      'wss://ta.di.univr.it/sfide',\n      'ws://localhost:8008/',\n      'wss://ta.di.univr.it/rtal',\n    ]\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public addToCache(url:string){\n    this.removeFromCache(url)\n    this.urlCache.unshift(url)\n  }\n\n  public removeFromCache(url:string){\n    let idx = this.urlCache.indexOf(url)\n    if(idx != -1){\n      this.urlCache.splice(idx,1)\n      return true\n    }\n    return false\n  }\n\n  public setUrl(value: string): boolean {\n    let url;\n    console.log(\"setUrl\")\n    try{ url = new URL(value); }catch(_){ return false; }\n    if(!( url.protocol == 'ws:' || url.protocol == 'wss:' )){ return false; }\n    console.log(\"setUrl:valid!\")\n    this.resetAllConnections()\n    this._url = url.href\n    console.log(\"setUrl:href:\",url.href)\n    this.addToCache(this._url)\n    return true;\n  }\n\n  public resetAllConnections(){\n    //TODO: is it necessary to kill all old connection upon URL change ? \n  }\n\n  public problemList(onResult:(problemList:Map<string, Meta>)=>void){\n    \n    let cmdList = new Commands.ProblemList(this._url);\n    cmdList.onRecieveProblemList = (message)=>{\n      console.log(\"onRecieveProblemList:\",message)\n      if(onResult){onResult(message.meta)}\n    }\n    cmdList.run();\n    return cmdList;\n  }\n\n  public GetAttachment( \n    problemName:string, \n    onAttachment?: ()=>void,\n    onAttachmentInfo?: (message: Packets.Reply.AttachmentInfo)=>void, \n    onData?: (data: ArrayBuffer)=>void,\n    onError?: (error: string)=>void\n  ){\n    let cmdGet = new Commands.Attchment(this._url, problemName);\n\n    cmdGet.onReciveAttachment = (message) => { \n      if (message.status.Err){ \n        if (cmdGet.onError) { cmdGet.onError(\"Failed to receive attachment: \"+message.status.Ok) } \n        return;\n      }\n      if(onAttachment) { onAttachment() } \n    }\n    cmdGet.onReciveAttachmentInfo = (message) => { if(onAttachmentInfo) { onAttachmentInfo(message) } }\n    cmdGet.onReciveUndecodedBinary = (message) => { if(onData) { onData( message )} }\n    cmdGet.onError = (error) => { if(onError) {onError(error)} }\n\n    cmdGet.run();\n    return cmdGet;\n  }\n\n  public Connect (\n    problem_name:string, \n    service:string, \n    args?:{}, \n    tty?:boolean, \n    token?:string, \n    files?:string[],\n    onConnectBegin?:(message:string[] )=>void,\n    onConnectStart?:()=>void,\n    onConnectStop?:(message:string[])=>void,\n    onData?: (data:string)=>void,\n    onError?:(data:string)=>void\n  ){\n\n    let cmdConnect = new Commands.Connect(this._url, problem_name, service, args, tty, token, files);\n\n    cmdConnect.onReciveConnectBegin = (message) => { \n      if (message.status.Err){ \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to begin connection: \"+message.status.Err); } \n        return;\n      }\n      if(onConnectBegin && message.status.Ok) { onConnectBegin(message.status.Ok) }\n    }\n\n    cmdConnect.onReciveConnectStart = (message) => { \n      if (message.status.Err){ \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to start connect: \"+message.status.Err)  } \n        return;\n      }\n      if(onConnectStart) { onConnectStart() }\n    }\n\n    cmdConnect.onReciveConnectStop = (message) => { \n      if (message.status.Err){ \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to stop connection: \"+message.status.Err)  } \n        return;\n      }\n      if(onConnectStop && message.status.Ok) { onConnectStop(message.status.Ok) }\n    }\n    \n    cmdConnect.onReciveBinary = (message) => { if(onData) { onData(message)} }\n    cmdConnect.onError = (error) => { if(onError) {onError(error)} }\n    \n    cmdConnect.run();\n    return cmdConnect;\n  }\n\n  /*\n\n  public connectToPlay( \n      lobbyID:string, \n      displayName:string, \n      password?:string,\n      onEvent?: (state:LobbyEventType)=>void,\n      onMatchUpdate?: (matchInfo: MatchInfo)=>void, \n      onData?: (data:string)=>void,\n      onError?:(data:string)=>void\n    ){\n    \n    let cmdConnect = new Commands.Connect(this.url, lobbyID, displayName, password);\n    cmdConnect.onReciveJoin = (message) => { \n      console.log(message.info.Err)\n      if (message.info.Err){ \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to join lobby: \"+message.info.Err)  } \n        return;\n      }\n      if(onEvent) { onEvent(LobbyEventType.Join) } \n      if(onMatchUpdate && message.info.Ok) { onMatchUpdate(message.info.Ok) }\n    }\n    cmdConnect.onReciveStart = (message) => { if(onEvent) { onEvent(LobbyEventType.Start) } }\n    cmdConnect.onReciveEnd = (message) => { if(onEvent) { onEvent(LobbyEventType.End) } }\n    cmdConnect.onReciveUpdate = (message) => { if(onMatchUpdate ) { onMatchUpdate(message.info) } }\n    cmdConnect.onReciveBinary = (message) => { if(onData) { onData(message)} }\n    cmdConnect.onError = onError\n    \n    cmdConnect.run();\n    return cmdConnect;\n  }\n\n  public connectToSpectate( \n      lobbyID:string, \n      onEvent?: (state:LobbyEventType)=>void,\n      onMatchUpdate?: (matchInfo: MatchInfo)=>void, \n      onData?: (data:string)=>void,\n    ){\n    \n    let cmdSpectate = new Commands.Spectate(this.url, lobbyID);\n\n    cmdSpectate.onReciveJoin = (message) => { \n      if (message.info.Err){ \n        if (cmdSpectate.onError) { cmdSpectate.onError(\"Failed to join lobby: \"+message.info.Err)  } \n        return;\n      }\n      if(onEvent) { onEvent(LobbyEventType.Join) } \n      if(onMatchUpdate && message.info.Ok) { onMatchUpdate(message.info.Ok) }\n    }\n    cmdSpectate.onReciveStart = () => { if(onEvent) { onEvent(LobbyEventType.Start) } }\n    cmdSpectate.onReciveEnd = () => { if(onEvent) { onEvent(LobbyEventType.End) } }\n    cmdSpectate.onReciveSync = () => { if(onEvent) { onEvent(LobbyEventType.Sync) } }\n    cmdSpectate.onReciveUpdate = (message) => { if(onMatchUpdate) { onMatchUpdate(message.info) } }\n    cmdSpectate.onReciveBinary = (message) => { if(onData) { onData( message )} }\n    \n    cmdSpectate.run();\n    return cmdSpectate;\n  }\n\n  */\n \n}\n","import { WebSocketSubject } from 'rxjs/webSocket';\nimport { Packets } from './api.packets';\n\n\nexport class TALightSocket{\n  public url = 'ws://localhost:8008';\n  public ws?:WebSocketSubject<any>;\n  \n  public decode = true;\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n  \n  public onError?:(error:string)=>void;\n  public onClose?:()=>void;\n  public onRecive?:(payload: Packets.PacketsPayload) => void;\n  public onReciveBinary?:(payload: string) => void;\n  public onReciveUndecodedBinary?:(payload: ArrayBuffer) => void;\n      \n  constructor(url:string){\n    this.url = url;\n\n    if (!this.ws || this.ws.closed ){\n      this.ws = new WebSocketSubject({\n        url: this.url,\n        binaryType: \"arraybuffer\",\n        deserializer: msg => msg,\n        serializer: msg => {\n          if (msg instanceof ArrayBuffer)\n            return msg;\n          else\n            return JSON.stringify(msg);\n        }\n      });\n      this.ws.subscribe({\n        next: (payload:any)=>{ this.didRecieve(payload) },\n        error: (error:any)=>{ this.didError(error) },\n        complete: ()=>{ this.didClose() },\n      });\n\n      console.log(\"Created new socket\");\n    }\n  }\n\n  public isOpen():boolean{\n    return (!!this.ws) && !this.ws.closed;\n  }\n\n  public closeConnection(){\n    this.ws!.unsubscribe();\n    this.ws!.complete();\n    console.log(\"TALightSocket:closeConnection\");\n  }\n  \n  public send(request: Packets.Request.Message){\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:send: unable to send, socket is null\")\n      return false\n    } \n    \n    let packet = request.toPacket();\n    this.ws!.next(packet);\n\n    return true;\n  }\n\n  public sendBinary(data: string) {\n    let payload = this.binEncoder.encode(data);\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:sendBinary: unable to send, socket is null\")\n      return false\n    } \n    console.log(\"TALightSocket:sendBinary: sending payload \\n\"+payload);\n    this.ws!.next(payload.buffer);\n    return true;\n  }\n  \n  public didRecieve(payload:MessageEvent){ // Called whenever there is a message from the server.\n    let data = payload.data;\n    console.log(\"TALightSocket:didRecieve:type: \"+payload.constructor.name+\"<\"+payload.data.constructor.name+\">\" )\n\n    if(typeof data === \"object\" && data instanceof ArrayBuffer) {\n      if(this.decode) {\n        if (data.byteLength == 0) {return}\n        data = this.binDecoder.decode(data);\n        console.log(\"TALightSocket:didRecieve:binary:\\n\"+data)\n        if(this.onReciveBinary){ this.onReciveBinary( data );}\n      } \n      else {\n        if(this.onReciveUndecodedBinary){ this.onReciveUndecodedBinary( data );}\n      }\n    } else{\n      let packetsPayload = new Packets.PacketsPayload(data)\n      console.log(\"TALightSocket:didRecieve:packets: \"+packetsPayload.packetTypes)\n      if(this.onRecive){ this.onRecive( packetsPayload ); }\n      \n    }\n  }\n\n  public didError(error:any) { \n    //let errorMsg = JSON.stringify(err);\n    if (this.onError) { this.onError(error );}\n  }\n\n  public didClose() { \n    this.closeConnection();\n    if (this.onClose) { this.onClose();}\n  }\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api-service/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionManagerService {\n  private _url: string = \"\";\n  private _isConnected: boolean = false;\n\n  constructor( private readonly router: Router, private api:ApiService ) { }\n\n  public get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public set url(value: string) {\n    if(this.api.setUrl(value)){\n      this._url = value;\n    }\n  }\n\n  /*\n  public async connect(url: string): Promise<boolean> {\n    this._url = url;\n    \n    // TODO: connect to server\n    // Add the below lines to the connect method\n    // this.isConnected = true;\n    // this.router.navigate(['/home']);\n\n    // TO REMOVE: Temporary return true\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        this._isConnected = true;\n        this.router.navigate(['/home']);\n        resolve(true);\n      }, 2000);\n    });\n  }\n  */\n\n  public disconnect(): void {\n    this._isConnected = false;\n    this.router.navigate(['/home']);\n  }\n\n}\n","import { createFs } from 'indexeddb-fs';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver } from './fs.service';\n\n\nexport class IndexeddbFsDriver implements FsServiceDriver {\n  public fs;\n  public rootDir = \"root\"\n  public options = {\n    databaseVersion:    1,\n    objectStoreName:    'files',\n    databaseName:       'indexeddb',\n    rootDirectoryName:  this.rootDir\n  }\n\n  constructor() { \n    this.fs = createFs(this.options);\n  }\n\n  async ready(): Promise<boolean>{\n    return true;\n  }\n\n  async readFile(fullpath:string, binary: boolean=true): Promise<string|null>{\n    if (!(await this.fs.exists(fullpath)) ) {return null;}\n    return this.fs.readFile(fullpath);\n  }\n\n  async createDirectory(fullpath:string): Promise<boolean>{\n    let res = await this.fs.createDirectory(fullpath);\n    return await this.fs.exists(fullpath);\n  }\n\n  async writeFile(fullpath:string, content:string): Promise<number>{\n    let res = await this.fs.writeFile(fullpath, content);\n    if (!(await this.fs.exists(fullpath)) ) {return -1;}\n    return res.data.length;\n  }\n\n  async readDirectory(fullpath:string):Promise<FsNodeFolder|null>{\n    if ( await this.fs.exists(fullpath) ) {\n      return this.scanDirectory_recursive(fullpath);\n    }\n    return null;\n  }\n\n  \n  async scanDirectory(path?:string):Promise<FsNodeFolder>{\n    if (!path){path = this.rootDir;}\n    return this.scanDirectory_recursive(path, true)\n  }\n\n  async scanDirectory_recursive(path:string, recursive=false):Promise<FsNodeFolder>{\n    let rootNode:FsNodeFolder = {\n      name: path.split(\"/\").reverse()[0]+\"/\",\n      path: path,\n      folders: [],\n      files: []\n    };\n    console.log(\"scanDirectory:dir: \",path);\n    \n    let dirContent = await this.fs.readDirectory(path)\n     \n\n    for(let key in dirContent.files){\n      let element = dirContent.files[key]\n      let childNode:FsNodeFile = {\n        name: element.name,\n        path: element.fullPath,\n        content: \"\"\n        //depth: depth + 1,\n      }\n      rootNode.files.push(childNode);\n      console.log(\"scanDirectory:file: \",element.fullPath);\n    }\n\n    for(let key in dirContent.directories){\n      let element = dirContent.directories[key]\n      if (recursive){\n        rootNode.folders.push(await this.scanDirectory_recursive(element.fullPath, true));\n      }\n      else{\n        let childNode:FsNodeFolder = {\n          name: element.name,\n          path: element.fullPath,\n          //depth: depth + 1,\n          folders: [],\n          files: []\n        }\n        rootNode.folders.push(childNode);\n      }\n    }\n\n    return rootNode;\n  }\n\n  async delete(fullpath:string): Promise<boolean>{\n    if(!this.exists(fullpath)) return true;\n    await this.fs.remove(fullpath);\n    return !this.exists(fullpath);\n  }\n\n  async exists(fullpath:string): Promise<boolean>{\n    return this.fs.exists(fullpath);\n  }\n\n}\n\n\nexport class FsServiceTest{\n  \n  public fs;\n  public driver;\n  public driverName;\n  constructor( fs:FsService, useDriver?:string ){\n    this.fs = fs;\n     \n    this.driverName = useDriver ?? 'example';\n    this.driver = fs.getDriver(this.driverName);\n    //alert('driverName:'+this.driver)\n  }\n  \n  \n\n  async createTestFiles(){\n    \n    if (!this.driver){return;}\n    //alert('createTestFiles: before: '+this.driver.constructor.name);\n    await this.driver.createDirectory('/src');\n    await this.driver.createDirectory('/assets');\n    await this.driver.createDirectory('/assets/data');\n    await this.driver.createDirectory('/assets/img');\n    await this.driver.writeFile('/main.py',           'import src/testclass.py\\nprint(\"hello\");');\n    await this.driver.writeFile('/mainC.py',           'import src/testclass.py\\nprint(\"helloC\");');\n    await this.driver.writeFile('/src/__init__.py',   '');\n    await this.driver.writeFile('/src/testclassA.py',  'class testclassA: pass');\n    await this.driver.writeFile('/src/testclassB.py',  'class testclassB: pass');\n    await this.driver.writeFile('/src/testclassC.py',  'class testclassC: pass');\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { IndexeddbFsDriver } from './fs.service.test';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FsService {\n  public drivers = new Map<string,FsServiceDriver>();\n  \n  constructor(){\n     //TODO: Remove test driver FS from constructor\n    this.registerDriver('example', new IndexeddbFsDriver());   \n  }\n\n  registerDriver(name:string, driver: FsServiceDriver):boolean{\n    //if (name in this.drivers){return false;}\n    //alert('register: '+driver)\n    this.drivers.set(name, driver);\n    //alert('register: '+driver.constructor.name+' | all: '+this.getDriverNames())\n    return true;\n  }\n\n  getDriver(name:string): FsServiceDriver | undefined{\n    //alert(name + ' '  + this.getDriverNames() )\n    if ( this.drivers.has(name) ){return this.drivers.get(name);}\n    alert(name + ' NOT found in: '  + this.getDriverNames() + \" | getDriver: undefined !!!\" )\n    return undefined\n    \n  }\n\n  getDriverNames(){\n    return Array.from(this.drivers.keys());\n  }\n\n  treeToList(root:FsNodeFolder){\n    let items = new Array<FsNodeFile|FsNodeFolder>();\n    let queue = new Array<FsNodeFolder>();\n    \n    queue.push(root)\n    console.log('treeToList:root',root)\n    console.log('treeToList:queue:0:',queue.length)\n    while(queue.length > 0){\n      let dir = queue.shift()\n      console.log('treeToList:dir:',dir)\n      if(!dir){break;}\n      items = items.concat(dir.files, dir.folders)\n      queue = queue.concat(dir.folders)\n      console.log('treeToList:queue:',queue.length)\n    }\n    return items;\n  }\n}\n\n\nexport class Tar{\n  public static tarstream = require('tar-web')\n  public static b4a = require('b4a')\n\n  public static binEncoder = new TextEncoder(); // always utf-8\n  public static binDecoder = new TextDecoder(\"utf-8\");\n\n  static unpack(tarball: ArrayBuffer, cb: (files:FsNodeFile[],folders:FsNodeFolder[])=>void ){\n    var extract = this.tarstream.extract()\n\n    var files = new Array<FsNodeFile>();\n    var folders = new Array<FsNodeFolder>();\n    \n    \n    extract.on('entry', function(header:any, stream:any, next:()=>void) {\n      // header is the tar header\n      // stream is the content body (might be an empty stream)\n      // call next when you are done with this entry\n\n      console.log('Tar:unpack:entry:header',header)\n      console.log('Tar:unpack:entry:stream',stream)\n\n      let fullpath = header.name;\n      let filetype = header.type;\n        \n      if ( filetype == 'file' ){\n        stream.on('data', (data:any)=>{\n          console.log('Tar:unpack:entry:data',data)\n          let filename = fullpath.split(\"/\").slice(0,-1)[0];\n          let file:FsNodeFile = {path:fullpath, name:filename, content: data}\n          console.log('Tar:unpack:entry:file',file, stream.read)\n          files.push(file)\n        })\n      }else if ( filetype == 'directory' ){\n        let dirname = fullpath;\n        if( dirname.slice(-1) == '/' ) {dirname = dirname.slice(0,-1)}\n        let forder:FsNodeFolder = {path:fullpath, name:dirname, files:[], folders:[] }\n        console.log('Tar:unpack:entry:forder',forder)\n        folders.push(forder)\n      }\n      \n      // ready for next entry\n      stream.on('end', () => {\n        console.log('Tar:unpack:entry:end'); \n        next()\n      })\n\n      stream.resume() // just auto drain the stream\n    })\n\n    extract.on('finish', function() {\n      console.log('Tar:unpack:finish')\n      console.log('Tar:unpack:files',files)\n      console.log('Tar:unpack:folders',folders)\n      files.sort((a,b)=>a.path.length - b.path.length)\n      folders.sort((a,b)=>a.path.length - b.path.length)\n      // all entries read\n      if(cb){cb(files,folders)}\n    })\n\n    console.log('Tar:unpack:tarball',tarball)\n    console.log('Tar:unpack:extract',extract)\n\n    let tarData = new Uint8Array(tarball)\n    extract.write(tarData, (errr:any)=>{console.log(\"Tar:unpack:extract:write:\",errr)})\n    extract.end()\n    \n    \n  }\n\n  static pack(items: Array<FsNodeFile|FsNodeFolder>, cb:(tarbell:ArrayBuffer)=>void){\n    let pack = this.tarstream.pack() // pack is a stream\n    console.log(pack);\n\n    var length = 0\n    var chunks = new Array<any>();\n    pack.on('data', (chunk:ArrayBuffer)=>{\n      console.log('data:chunk:prototype:',chunk.constructor.name)\n      console.log('data:chunk:',chunk)\n      length += chunk.byteLength\n      chunks.push(chunk)\n    })\n\n    pack.on('end', ()=>{\n      // Create a new array with total length and merge all source arrays.\n      console.log(chunks)\n      let data = new Uint8Array(length);\n      let offset = 0;\n      chunks.forEach(item => {\n        data.set(item, offset);\n        offset += item.length;\n      });\n      console.log(data)\n      if(cb){cb(data)}\n    })\n\n    let processItems = function(items: Array<FsNodeFile|FsNodeFolder>){\n      let item = items.shift()\n      let file = item as FsNodeFile;\n      console.log(\"Tar:pack:item\", item)\n      \n      let content;\n      let header;\n      if( file.content ){\n        console.log(\"Tar:pack:file\", file)\n        if ( file.content instanceof ArrayBuffer ){\n          content = new Uint8Array(file.content)\n        }else{\n          content = file.content\n        }\n        header = {name: file.path}\n      } else {\n        header = {name: item!.path, type:\"directory\"}\n      }\n      \n      pack.entry(header, content, (error:any) => {\n        console.log(\"Tar:pack:onFinishEntry\", error)\n        if (error) { throw error }\n        if ( items.length == 0 ){\n          pack.finalize()\n        }else{\n          processItems(items)\n        }\n      })\n\n    }\n\n    console.log(\"Tar:pack:processItems\", items)\n    processItems(items)\n  }\n\n  \n  \n\n}\n\nexport interface FsNode {\n  name: string;\n  path: string;\n}\n\nexport interface FsNodeFolder extends FsNode {\n  folders: FsNodeFolder[];\n  files: FsNodeFile[];\n}\nexport interface FsNodeFile extends FsNode {\n  content:string|ArrayBuffer\n}\n\n\n\n\n\nexport interface FsServiceDriver {\n  rootDir:string;\n  \n  ready(): Promise<boolean>;\n\n  createDirectory(fullpath:string): Promise<boolean>;\n\n  writeFile(fullpath:string, content:string|ArrayBuffer): Promise<number>;\n\n  readFile(fullpath:string, binary?: boolean): Promise<string|ArrayBuffer|null>;\n\n  readDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  scanDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  delete(fullpath:string): Promise<boolean>;\n\n  exists(fullpath:string): Promise<boolean>;\n}\n","import { Injectable } from '@angular/core';\nimport { Packets } from '../api-service/api.packets';\nimport { Meta } from '../api-service/api.service';\n\n\nexport class RawMap extends Map<string, Meta>{};\nexport class ProblemList extends Array<ProblemDescriptor>{};\nexport class ProblemMap extends Map<string, ProblemDescriptor>{};\nexport class ServiceMap extends Map<string, ServiceDescriptor>{};\nexport class ParamsMap extends ServiceMap{};\nexport class ArgsMap extends Map<string, ArgDescriptor>{};\n\nexport class ProblemDescriptor {\n  public key;\n  public services=new ServiceMap();\n  \n  constructor(\n    public name:string, \n    meta:Meta,\n    ){\n      meta.services.forEach((service,serviceName)=>{\n        let serviceDesc = new ServiceDescriptor(serviceName,service,this)\n        this.services.set(serviceDesc.getKey(), serviceDesc)\n      })\n      this.key = this.getKey()\n    }\n\n    getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase()\n      key = key.replace(\"_+\",\"_\")\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      \n      return key\n    }\n}\n\nexport class ServiceDescriptor {\n  public key;\n  public args = new ArgsMap();\n  public evaluator;\n  public files;\n  constructor( public name:string, \n               service:Packets.Service,\n               public parent:ProblemDescriptor,\n    ){\n      this.evaluator = service.evaluator\n      this.files = service.files\n      service.args!.forEach((arg,argName)=>{\n        //console.log('ServiceDescriptor:constructor:arg', arg)\n        let argDesc = new ArgDescriptor(argName,arg,this)\n        this.args.set(argName,argDesc)\n      })\n      console.log('ServiceDescriptor:constructor:args', this.args)\n      this.key = this.getKey()\n    }\n\n    public getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase().trim()\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"_+\",\"_\")\n      return this.parent.getKey() + \"_\" + key\n    }\n\n    public exportArgs(){\n      let args:any = {}\n      this.args.forEach(arg=>{\n        args[arg.name]=arg.value\n      })\n      return args;\n    }\n\n    public exportFiles(){\n      //TODO: files\n      return []\n    }\n}\n\nexport class ArgDescriptor{\n  public key;\n  public default: string\n  public regex: RegExp\n  public value: string\n  \n  constructor(\n    public name:string, \n    arg: Packets.Arg,\n    public parent: ServiceDescriptor\n    ){\n    this.default = arg.default\n    this.regex = arg.regex\n    this.value = arg.default\n    this.key = this.getKey()\n  }\n\n  getKey(){\n    let key = this.name.trim()\n    key = key.toLowerCase().trim()\n    key = key.replace(\" \",\"-\")\n    key = key.replace(\"[^a-z0-9_-]\",\"\")\n    key = key.replace(\"-+\",\"-\")\n    key = key.replace(\"_+\",\"_\")\n    return this.parent.getKey() + \"_\" + key\n  }\n}\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemManagerService {\n  selectedProblem?: ProblemDescriptor\n  selectedService?: ServiceDescriptor\n\n  problemList=new ProblemList();\n  problems=new ProblemMap();\n  services=new ServiceMap();\n  savedParams=new ParamsMap();\n  \n  updateProblems(problemMap: RawMap){\n    this.problemList=[];\n    this.problems.clear();\n    problemMap.forEach(( problem, name )=>{\n      let problemDesc = new ProblemDescriptor(name, problem)\n      this.problemList.push(problemDesc)\n      this.problems.set(problemDesc.key,problemDesc);\n      problemDesc.services.forEach((serviceDesc)=>{\n        this.services.set(serviceDesc.key, serviceDesc)\n      })\n    })\n  }\n\n  \n  \n  selectProblem(selectedProblem: ProblemDescriptor){\n    this.selectedProblem = selectedProblem;\n  }\n  \n\n  selectService(selectedService: ServiceDescriptor){\n    let name = selectedService.key;\n    if ( this.savedParams.has(name) ){\n      //TODO: Deep copy param values from  to selectedProblem object, to account for changes in the problem structure.\n      this.selectedService = this.savedParams.get(name)\n    }else{\n      this.savedParams.set(name,selectedService);\n      this.selectedService = selectedService;\n    }\n    this.selectedProblem = this.selectedService?.parent;\n  }\n\n\n  validateArgs(service: ServiceDescriptor){\n    let issues = new Map<string,any>();\n    service.args.forEach((arg)=>{\n      let issue = this.validateArg(arg)\n      if(issue){issues.set(arg.key,issue)}\n    })\n    return issues;\n  }\n\n  validateArg(arg: ArgDescriptor){\n      //set\n      if (arg.regex === null){\n        console.log(\"validateArg:regex:null\")\n        return null\n      }\n\n      //valid re\n      let pattern;\n      try{\n        pattern = new RegExp(arg.regex)\n      }catch(error:any) { \n        console.log(\"validateArg:regex:invalid\")\n        return null;\n      }\n\n      //match\n      let match = arg.value.match(pattern)\n      console.log(\"validateArg:value:\",arg.value)\n      console.log(\"validateArg:pattern:\",pattern)\n      console.log(\"validateArg:match:\",match)\n      if(!match || match.length == 0){\n        console.log(\"validateArg:match:no\")\n        return arg.name + \": Validation error\";\n      }\n      console.log(\"validateArg:match:yes\")\n      return null;\n  }\n\n}\n","import { FsNodeFolder, FsServiceDriver } from '../fs-service/fs.service';\nimport { PythonCompiler as PythonCompiler } from './python-compiler.service';\n\n// --- PyodideDriver --- \n\ntype UID = string; // should I ? \n\ntype PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\ntype stdCallback = (data:string)=>void;\n\n\n\nexport enum PyodideMessageType {\n  Ready = 'Ready',\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n}\nexport interface PyodideMessage {\n  uid: UID;\n  type: PyodideMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface PyodideRequest {\n  uid: UID;\n  timestamp: number;\n  message: PyodideMessage;\n}\n\nexport interface PyodideResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: PyodideMessage;\n  errors: string[];\n}\n\nexport interface PyodideRequestHandler {\n  uid: UID;\n  request: PyodideRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\nexport class PyodideDriver implements FsServiceDriver, PythonCompiler {\n  public worker: Worker = new Worker(new URL('../../workers/python-compiler.worker', import.meta.url));\n  public rootDir = \".\"\n  public requestIndex = new Map<UID, PyodideRequestHandler>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  onStdout?: stdCallback\n  onStderr?: stdCallback\n\n  constructor() {\n    //alert('driver built!');\n    this.worker.onmessage = (event: MessageEvent) => { this.didRecieve(event.data) };   \n  }\n\n  mount(path: string) {\n    //TODO\n  }\n\n  unmount(path: string) {\n    //TODO\n  }\n\n\n\n  didRecieve(response: PyodideResponse) {\n    if (!response) {return;}\n    console.log('PyodideFsDriver:didRecieve:', response.message.type, response);\n\n    let requestHandler = this.requestIndex.get(response.uid);\n    if (requestHandler != null) {\n      let removeRequest = true;\n      let msgSent = requestHandler.request.message;\n      let msgRecived = response.message;\n      let resolvePromise = requestHandler.resolvePromise;\n\n      switch(response.message.type){\n        case PyodideMessageType.Ready:           this.didReceiveReady(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.InstallPackages: this.didReceiveInstallPackages(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteCode:     this.didReceiveExecuteCode(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteFile:     this.didReceiveExecuteFile(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.SubscribeStdout: this.didReceiveSubscribeStdout(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeStderr: this.didReceiveSubscribeStderr(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SendStdin:       this.didReceiveSendStdin(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.CreateDirectory: this.didReceiveCreateDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadDirectory:   this.didReceiveReadDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ScanDirectory:   this.didReceiveScanDirectory(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.WriteFile:       this.didReceiveWriteFile(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadFile:        this.didReceiveReadFile(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.Delete:          this.didReceiveDelete(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.Exists:          this.didReceiveExists(msgSent, msgRecived, resolvePromise); break;\n      }\n      \n      if (removeRequest){\n        this.requestIndex.delete(response.uid)\n      }\n    }\n  }\n\n  didReceiveReady(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveReady: \")\n    let ready = msgRecived.args[0]\n    ///alert(111)\n    resolvePromise(ready == 'true'?true:false)\n  }\n\n  didReceiveInstallPackages(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveInstallPackages: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  didReceiveExecuteCode(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteCode: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  didReceiveExecuteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteFile: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  didReceiveSubscribeStdout(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStdout: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStdout && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStdout(this.toString(content))\n    }\n  } \n\n  didReceiveSubscribeStderr(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStderr: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStderr && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStderr(this.toString(content))\n    }\n  } \n\n  didReceiveSendStdin(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSendStdin: \")\n    if (msgRecived.args.length > 0){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n\n    resolvePromise(false)\n  } \n\n  didReceiveCreateDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveCreateDirectory: \")\n    if (msgSent.args.length != 1){ \n      resolvePromise(false); \n    }\n    let pathSent = msgSent.args[0];\n    let pathRecived = msgRecived.args[0];\n\n    resolvePromise(pathSent == pathRecived)\n  } \n\n  didReceiveReadDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let replacer = (key:any, value:any) => {\n      if (value instanceof ArrayBuffer){\n        let buffer = new Uint8Array(value)\n        return Array.from(buffer)\n      }\n      return value\n    }\n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.jsonReplacer)\n    console.log(\"didReceiveReadDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  didReceiveScanDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.jsonReplacer)\n    console.log(\"didReceiveScanDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  jsonReplacer(key:any,value:any){\n    if ( typeof value !== 'object') {return value; }\n    //console.log('jsonReplacer:object:',key,value)\n    if (!(\"flags\" in value && \"constructor\" in value && \"data\" in value )){ return value; }\n    //console.log('jsonReplacer:constructor',value.constructor)\n    if ( value.constructor == 'ArrayBuffer' && value.data instanceof Array){\n      //console.log('jsonReplacer:ArrayBuffer')\n      let buffer = Uint8Array.from(value.data).buffer\n      console.log('jsonReplacer:ArrayBuffer',buffer)\n      return buffer;\n    }\n    return value\n  }\n\n\n\n  didReceiveReadFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string|ArrayBuffer> ){\n    console.log(\"didReceiveReadFile:\\n\", msgRecived.contents.length)\n    resolvePromise( msgRecived.contents[0] )\n  }\n  \n  didReceiveWriteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<number> ){\n    console.log(\"didReceiveWriteFile: \")\n    console.log(msgRecived.args.length)\n    console.log(msgRecived.contents.length)\n    //TODO:\n    resolvePromise(msgRecived.contents.length)\n  }\n  \n\n  didReceiveDelete(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveDelete: \")\n    resolvePromise(true)\n  }\n\n  didReceiveExists(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveExists: \")\n    let res = msgRecived.args[0]\n    resolvePromise(res  == 'true' )\n  }\n\n  sendMessage<T>(message: PyodideMessage) {\n    //alert('sendMessage:'+message.type);\n    let request: PyodideRequest = {\n      uid: message.uid,\n      timestamp: Date.now(),\n      message: message\n    }\n\n    let promiseResolver: PromiseResolver<T>;\n    let resultPromise =  new Promise<T>((resolve, reject) => {\n      promiseResolver = resolve;\n    })\n    \n    let requestHandler: PyodideRequestHandler = {\n      uid: message.uid,\n      request: request,\n      resolvePromise: (value)=>{ promiseResolver(value) }\n    }\n\n    this.requestIndex.set(message.uid, requestHandler);\n    this.worker.postMessage(request);\n\n    return resultPromise;\n  }\n\n  async ready(): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Ready,\n      args: [],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  async installPackages(packages: string[]): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.InstallPackages,\n      args: packages,\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  async executeCode(code: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteCode,\n      args: [],\n      contents: [code],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  async executeFile(fullpath: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  subscribeStdout(enable=true, onStdout?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStdout,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStdout && enable){\n      this.onStdout = (msg:string)=>{onStdout(msg)}\n    }else{\n      this.onStdout = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  subscribeStderr(enable=true, onStderr?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStderr,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStderr && enable){\n      this.onStderr = (msg:string)=>{onStderr(msg)}\n    }else{\n      this.onStderr = undefined;\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  sendStdin(msg:string){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SendStdin,\n      args: [],\n      contents: [msg],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  async createDirectory(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.CreateDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  async readFile(fullpath: string, binary: boolean=true): Promise<string|ArrayBuffer> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadFile,\n      args: [fullpath],\n      contents: [],\n    }\n    if(binary){message.args.push('binary');}\n    let resultPromise = this.sendMessage<string|ArrayBuffer>(message);\n    return resultPromise;\n  }\n\n  async writeFile(fullpath: string, content: string|ArrayBuffer): Promise<number> {\n    console.log(\"writeFile: \"+fullpath)\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.WriteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    message.contents.push(content)\n    \n    let resultPromise = this.sendMessage<number>(message);\n    return resultPromise;\n  }\n\n  async readDirectory(fullpath: string): Promise<FsNodeFolder | null> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n\n  async scanDirectory(fullpath?: string, recursive = false, parent?: FsNodeFolder): Promise<FsNodeFolder | null> {\n    if (!fullpath) { fullpath = './' }\n    \n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ScanDirectory,\n      args: [fullpath, recursive?'recursive':'flat'],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n  async delete(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Delete,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  async exists(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Exists,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n\n\n  requestUID(): UID {\n    var timestap = new Date().getTime();\n    let seed = Math.floor(Math.random() * 100000000);\n    return 'uid-' + timestap + '-' + seed;\n  }\n}\n  /*\n}\n \n \n  sendMessage(type: PyodideFsMessageType, args?:string[], contents?:string[], response?:(data:string)=>void){\n    if(!(args)){ args = []; }\n    if(!(contents)){ contents = []; }\n    \n    const uid = this.requestUID();\n \n    \n    \n    const message: PyodideFsMessage = {\n      type: type,\n      uid: uid,\n      args: args,\n      contents: contents\n    }\n    this.worker.postMessage(message);\n    let onData = (data:Event)=>{\n      if(response){response(data);}\n      if(this.worker.removeAllListeners){worker.removeAllListeners(uid)}\n    }\n    worker.addEventListener(uid, onData);\n  }\n \n  async createDirectory(fullpath:string): Promise<boolean>{\n    return false;\n  }\n \n  async writeFile(fullpath:string, content:string): Promise<number>{\n    return -1;\n  }\n \n  async readDirectory(fullpath:string):Promise<FsNode|null>{\n    return null;\n  }\n \n  \n \n  async scanDirectory(path?:string, recursive=false, parent?:FsNode):Promise<FsNode>{\n    if(!path){path='./'}\n    return {name:path,path:path,isFolder:false, depth:-1};\n  }\n \n \n \n  /*\n  sendMessages(){\n    this.pycs.worker.onmessage = ({ data }) => {\n      console.log(`page got message: ${data}`);\n    }\n    \n    const messageInstall: PythonCompilerMessageInterface = {\n      type: PythonCompilerMessageInterfaceType.PackageInstall,\n      packages: ['fake-traffic'],\n    }\n    this.pycs.worker.postMessage(messageInstall);\n \n    const messageToSend: PythonCompilerMessageInterface = {\n      type: PythonCompilerMessageInterfaceType.ExecuteCode,\n      code: `\n      import os\n      print(os.listdir('/'))\n      print(os.listdir('/mnt'))\n      import fox\n      import mainC\n  `\n    }\n \n    this.pycs.worker.postMessage(messageToSend);\n \n  }\n \n  async createDirectory(fullpath:string): Promise<boolean>{\n    let res = await this.fs.createDirectory(fullpath);\n    return await this.fs.exists(fullpath);\n  }\n \n  async writeFile(fullpath:string, content:string): Promise<number>{\n    let res = await this.fs.writeFile(fullpath, content);\n    if (!(await this.fs.exists(fullpath)) ) {return -1;}\n    return res.data.length;\n  }\n \n  async readDirectory(fullpath:string):Promise<FsNode|null>{\n    if ( await this.fs.exists(fullpath) ) {\n      return this.scanDirectory(fullpath, false );\n    }\n    return null;\n  }\n  */\n","import { Injectable } from '@angular/core';\nimport { PyodideDriver, PyodideRequest } from './pydiode-driver';\nimport { FsService } from '../fs-service/fs.service';\nimport { ApiService } from '../api-service/api.service';\nimport { Commands } from '../api-service/api.commands';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PythonCompilerService {\n  public driverName = 'pyodide';\n  public projectFolder = \"/.talight/\"\n  public configName = \"talight.json\"\n  public configPath = this.projectFolder + this.configName\n  \n  public driver?: PyodideDriver;\n  public worker: Worker = new Worker(new URL('../../workers/python-compiler.worker', import.meta.url));\n  \n  \n\n  constructor( private fs:FsService) { \n    this.driver = new PyodideDriver();\n    this.fs.registerDriver(this.driverName, this.driver); \n  }\n\n  async createPythonProject(){\n    \n    if (!this.driver) {return false}\n\n    if (await this.driver.exists(this.configPath)){\n      console.log(\"createPythonProject: Skipping, config file already present\")\n      return true;\n    }\n  \n    let configContent = JSON.stringify(new PythonConfig(), null, 4)\n    await this.driver?.writeFile(this.configPath, configContent );\n    let content = `print(\"asd\") \\ndata = 123 \\nprint(\"data:\", data)`;\n    await this.driver?.createDirectory(this.projectFolder);\n    await this.driver?.writeFile('/main.py', content);\n    await this.driver?.createDirectory('/data/');\n\n    let bot = `import time\ndef sleep(seconds):\n    start = now = time.time()\n    while now - start < seconds:\n        now = time.time()\n\nsleep(2)\nprint(\"100 0\")`\n\n    await this.driver?.writeFile('/free_sum_mysimplebot.py', bot);\n    return true\n  }\n\n  async readPythonConfig(){\n    if (!this.driver) {return null}\n\n    if (!await this.driver.exists(this.configPath)){\n      console.log(\"readPythonConfig: config file doesn't exisit!\")\n      return null;\n    }\n    \n    let configContent = await this.driver?.readFile(this.configPath, false ) as string;\n    let config = JSON.parse(configContent) as PythonConfig\n    return config\n  }\n\n  \n  async runProject(){\n    let config = await this.readPythonConfig()\n    if (!config){return null;}\n    await this.driver?.installPackages(config.PACKAGES)\n    let result = await this.driver?.executeFile(config!.MAIN)\n    console.log(result)\n    return result    \n  }\n\n  async installPackages(packages:string[]){\n    this.driver?.installPackages(packages)\n  }\n\n  async executeFile(fullpath:string){\n    this.driver?.executeFile(fullpath)\n  }\n\n\n}\n\nclass PythonConfig {\n  MAIN = \"main.py\"\n  DEBUG = \"\"\n  DOWNLOAD_ATTACHMENT_AUTO = true\n  DEFAULT_PROJECT=\"3SAT\"\n  PACKAGES: string[] = [\"numpy\"]\n}\n\nexport interface PythonCompiler{\n  installPackages(packages: string[]): Promise<string>;\n\n  executeCode(code: string): Promise<string>;\n\n  executeFile(fullpath: string): Promise<string>;\n}\n\n\n\n\n\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport enum AppTheme {\n  light = \"light-theme.css\",\n  dark = \"dark-theme.css\",\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  public themeChanged: Subject<AppTheme> = new Subject<AppTheme>();\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    const storedTheme: AppTheme = localStorage.getItem('theme') as AppTheme || AppTheme.light;\n    this.setTheme(storedTheme);\n  }\n\n  public get currentTheme(): AppTheme {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    return storedTheme as AppTheme;\n  }\n\n  public setTheme(theme: AppTheme): void {\n    if (theme === AppTheme.light || theme === AppTheme.dark) {\n      let themeLink = this.document.getElementById('app-theme') as HTMLLinkElement;\n\n      if (themeLink) {\n        localStorage.setItem('theme', theme);\n        themeLink.href = theme;\n        this.themeChanged.next(theme);\n      }\n    }\n  }\n\n  public toggleTheme(): void {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    const newTheme: AppTheme = storedTheme === AppTheme.light ? AppTheme.dark : AppTheme.light;\n    this.setTheme(newTheme);\n  }\n\n  public themeName(): string {\n    switch (this.currentTheme) {\n      case AppTheme.dark:\n        return \"vs-dark\";\n      default:\n        return \"vs\";\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-connect-view',\n  templateUrl: './connect-view.component.html',\n  styleUrls: ['./connect-view.component.scss']\n})\nexport class ConnectViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Connettiti ad un server</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-form-input\">\n      <label for=\"serverurl\">Server Url</label>\n      <input name=\"serverurl\" input type=\"text\" pInputText placeholder=\"https://...\" />\n    </div>\n    <p class=\"tal-error\">\n      <i class=\"pi pi-times-circle\"></i>\n      <span>Questo è un errore</span>\n    </p>\n    <button pButton>Connetti</button>\n  </div>\n\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ApiService, Meta } from 'src/app/services/api-service/api.service';\nimport { Commands } from 'src/app/services/api-service/api.commands';\n\n@Component({\n  selector: 'app-demo-view',\n  templateUrl: './demo-view.component.html',\n  styleUrls: ['./demo-view.component.scss']\n})\nexport class DemoViewComponent implements OnInit {\n  public output = \"\";\n  public cmdConnect?:Commands.Connect;\n\n  constructor(\n    private zone: NgZone,\n    private api: ApiService\n    ) {}\n\n  ngOnInit(): void {\n    //api.problemList((problemList: any) => {console.log(problemList)});\n\n    /*\n    api.getAttachment(\n      \"piastrelle\",\n      ()=>{console.log(\"Attachment packet received\")},\n      (onAttachmentInfo: any) => {console.log(onAttachmentInfo)},\n      (data: ArrayBuffer) => {\n        console.log(\"ArrayBuffer received\");\n\n        const arrayBufferToFile = (buffer:any, filename:any) => {\n          const blob = new Blob([buffer], { type: 'application/octet-stream' });\n          return new File([blob], filename, { type: 'application/octet-stream' });\n        };\n\n        let file = arrayBufferToFile(data, \"/home/michele/piastrelle.tar\");\n        console.log(file);\n      }\n    );\n    \n\n    api.Connect(\n      \"sum\", \n      \"synopsis\", \n      {\"service\":\"free_sum\"}, \n      undefined,\n      undefined,\n      undefined,\n      (onConnectionBegin: any) => {console.log(\"Connection Begin -> \" + onConnectionBegin); },\n      () => {console.log(\"Connection Start\")},\n      (onConnectionClose: any) => {console.log(onConnectionClose)},\n      (onData: any) => {console.log(onData)},\n      (onError: any) => {alert(onError)},\n    );\n\n    */\n    \n  }\n  //API Test\n    \n  async onApiError(message: string){\n    alert(\"Error: \"+message)\n  }\n\n  public refreshOutput() {\n    this.zone.run(() => this.output += \"\")\n  }\n\n  async apiProblemList() {\n    let onSuccess = (problemList:Map<string, Meta>)=>{ \n      console.log(problemList);\n      this.refreshOutput();\n    }\n    let req = this.api.problemList( onSuccess );\n    req.onError = this.onApiError;\n  }\n\n  async apiGetAttachment() {\n    let problem_name = \"piastrelle\";\n\n    let onAttachment = ()=>{console.log(\"Attachment packet received\")};\n    let onAttachmentInfo = (onAttachmentInfo: any) => {console.log(onAttachmentInfo)};\n    \n    let onData = (data: ArrayBuffer)=>{\n      console.log(data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.GetAttachment(problem_name, onAttachment, onAttachmentInfo, onData);\n    req.onError = this.onApiError;\n\n  }\n\n  async apiConnect() {\n    let problem_name = \"sum_testAPI\";\n    let service = \"free_sum\";\n\n    let onConnectionBegin = (onConnectionBegin: string[]) => {console.log(\"Connection Begin -> \" + onConnectionBegin); };\n    let onConnectionStart = () => {console.log(\"Connection Start\")};\n    let onConnectionClose = (onConnectionClose: string[]) => {console.log(onConnectionClose)};\n    \n    let onData = (data: string)=>{\n      this.output += ''+data\n      console.log(\"Binary data: \"+data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.Connect(problem_name, service, undefined, undefined, undefined, undefined, onConnectionBegin, onConnectionStart, onConnectionClose, onData);\n    req.onError = this.onApiError;\n\n    this.cmdConnect = req;\n\n    this.sendBinary();\n  }\n\n  async sendBinary() {\n    setTimeout(() => {this.cmdConnect?.sendBinary(\"100 0\\n\");}, 1500);\n    //setTimeout(() => {this.cmdConnect?.sendConnectStop();}, 2500);\n    /*\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 2500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 3500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 4500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 5500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 6500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 7500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 8500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 9500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 10500);\n    */\n\n    setTimeout(() => {console.log(\"this.cmdConnect!.tal.isOpen()\");\n    console.log(this.cmdConnect!.tal.isOpen());}, 2500);\n  }\n\n\n}\n","<div style=\"display:flex; flex-direction: row\">\n    <div>\n        <div>\n            API Demo\n        </div>\n        <div>\n            <button (click)=\"apiProblemList()\">Problem List</button>\n            <button (click)=\"apiGetAttachment()\">Get Attachment</button>\n            <button (click)=\"apiConnect()\">Connect</button>\n        </div>\n    </div>\n    \n    \n    <div>\n        <pre>{{output}}</pre>\n    </div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CodeEditorComponent } from 'src/app/widgets/code-editor/code-editor/code-editor.component';\n\n\n@Component({\n  selector: 'tal-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.scss']\n})\nexport class HomeViewComponent implements OnInit {\n  \n  @ViewChild(\"codeEditor\") public codeEditor!: CodeEditorComponent;\n\n  constructor(\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-home-container\">\n  <div class=\"tal-home-editor\">\n    <tal-code-editor #codeEditor></tal-code-editor>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-select-problem-view',\n  templateUrl: './select-problem-view.component.html',\n  styleUrls: ['./select-problem-view.component.scss']\n})\nexport class SelectProblemViewComponent implements OnInit {\n\n  public problems: any[] = [\n    {\n      id: 1, name: 'Problem 1',\n    },\n    {\n      id: 2, name: 'Problem 2',\n    },\n    {\n      id: 3, name: 'Problem 3',\n    },\n    {\n      id: 4, name: 'Problem 4',\n    },\n  ];\n\n  public selectedProblem: any = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Seleziona un problema da risolvere</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-problems-list\">\n      <ng-container *ngFor=\"let problem of problems\">\n        <div class=\"tal-problem\" (click)=\"selectedProblem=problem.id\">\n          <p-radioButton name=\"groupname\" [value]=\"problem.id\" [(ngModel)]=\"selectedProblem\">\n          </p-radioButton>\n          <div class=\"tal-problem-details\">\n            <p>{{problem.name}}</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <button pButton>Inizia</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileExplorerWidgetComponent } from './file-explorer-widget/file-explorer-widget.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { FormsModule } from '@angular/forms';\nimport { ConfirmationService, SharedModule } from 'primeng/api';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { SplitterModule } from 'primeng/splitter';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileEditorWidgetComponent } from './file-editor-widget/file-editor-widget.component';\nimport { ExecbarWidgetComponent } from './execbar-widget/execbar-widget.component';\nimport { ProblemWidgetComponent } from './problem-widget/problem-widget.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MonacoEditorWidgetComponent } from './monaco-editor-widget/monaco-editor-widget.component';\nimport { OutputWidgetComponent } from './output-widget/output-widget.component';\n\n@NgModule({\n  declarations: [\n    FileExplorerWidgetComponent,\n    FileEditorWidgetComponent,\n    CodeEditorComponent,\n    ExecbarWidgetComponent,\n    ProblemWidgetComponent,\n    MonacoEditorWidgetComponent,\n    OutputWidgetComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MonacoEditorModule,\n    ConfirmDialogModule,\n    OverlayPanelModule,\n    SplitterModule,\n    SharedModule,\n    TooltipModule,\n    DropdownModule,\n  ],\n  exports: [\n    FileExplorerWidgetComponent,\n    CodeEditorComponent\n  ],\n  providers: [ ConfirmationService ],\n})\nexport class CodeEditorModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Commands } from 'src/app/services/api-service/api.commands';\nimport { ApiService } from 'src/app/services/api-service/api.service';\n\nimport { FsService, FsNodeFile, Tar } from 'src/app/services/fs-service/fs.service';\nimport { ProblemDescriptor, ServiceDescriptor } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { PyodideDriver } from 'src/app/services/python-compiler-service/pydiode-driver';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\nimport { FileExplorerWidgetComponent } from 'src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component';\nimport { ExecbarWidgetComponent } from '../execbar-widget/execbar-widget.component';\nimport { FileEditorWidgetComponent } from '../file-editor-widget/file-editor-widget.component';\nimport { OutputWidgetComponent } from '../output-widget/output-widget.component';\nimport { ProblemWidgetComponent } from '../problem-widget/problem-widget.component';\n\n@Component({\n  selector: 'tal-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss']\n})\nexport class CodeEditorComponent implements OnInit {\n  public selectedFile?: FsNodeFile;\n  public selectedProblem?: ProblemDescriptor;\n  public selectedService?: ServiceDescriptor;\n  public driver;\n  public cmdConnect?:Commands.Connect;\n\n  @ViewChild(\"fileExplorer\") public fileExplorer!: FileExplorerWidgetComponent;\n  @ViewChild(\"fileEditor\") public fileEditor!: FileEditorWidgetComponent;\n  @ViewChild(\"execBar\") public execBar!: ExecbarWidgetComponent;\n  @ViewChild(\"problemWidget\") public problemWidget!: ProblemWidgetComponent;\n  @ViewChild(\"outputWidget\") public outputWidget!: OutputWidgetComponent;\n  \n  constructor(\n    private fs: FsService,\n    private python:PythonCompilerService,\n    private api:ApiService,\n  ) {\n    this.driver = python.driver\n  }\n\n  ngOnInit(): void {\n    this.python.driver?.subscribeStdout(true,(msg)=>{this.onStdout(msg)})\n    this.python.driver?.subscribeStderr(true,(msg)=>{this.onStderr(msg)})\n  }\n  \n\n  \n  public onStdout(data:string){\n    this.outputWidget!.print(data);\n    //TODO: if API connect then:\n    if(!this.cmdConnect){return;}\n    this.cmdConnect.sendBinary(data + \"\\n\"); //lo \\n va aggiunto all'output del bot python\n  }\n\n\n  public onStderr(data:string){\n    //alert(\"STDERR: \"+data)\n    this.outputWidget.print(data)\n  }\n\n  public onStdin(msg:string){\n    this.outputWidget.print(msg)\n    this.python.driver?.sendStdin(msg)\n  }\n\n  public onProblemChanged(selectedProblem: ProblemDescriptor){\n    console.log(\"onProblemChanged:\",selectedProblem)\n    this.selectedProblem=selectedProblem;\n  }\n\n  public onServiceChanged(selectedService: ServiceDescriptor){\n    console.log(\"onServiceChanged:\",selectedService)\n    this.selectedService=selectedService;\n    this.selectedProblem=selectedService.parent;\n  }\n\n  async onAttachments(data: ArrayBuffer){\n    console.log(\"onAttachments:\",data)\n    if(!this.selectedProblem){return;}\n    let name = this.selectedProblem.name\n\n    if (!(data instanceof ArrayBuffer ) ) {return;}\n    Tar.unpack(data, async (files,folders) => {\n      \n\n      console.log(\"extractTar:unpack:folders\",folders)\n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = '/data/' + folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n\n\n      console.log(\"extractTar:unpack:files\",files)\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = '/data/' + file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      \n      \n      this.fileExplorer.refreshRoot()\n    });\n   \n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.selectedFile = file;\n    this.execBar.selectedFile = this.selectedFile\n    this.fileEditor.selectedFile = this.selectedFile \n  }\n\n  public editorDidChange(file: FsNodeFile){\n    console.log(\"editorDidChange:\")\n    this.saveFile()\n  }\n\n  public editorDidInput(event: InputEvent){\n    console.log(\"Input: \", this.fileEditor)\n    this.saveFile()\n  }\n\n  public saveFile(){\n    if ( this.selectedFile ){ \n      console.log(\"saveFile:\\n\", this.selectedFile.path, \"\\n\", this.fileEditor)\n      this.driver?.writeFile(this.selectedFile.path, this.selectedFile.content)\n    } else {\n      console.log(\"saveFile:failed\")\n    }\n  }\n\n  public async runProject(useAPI = false){\n    this.outputWidget.clearOutput()\n    \n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n\n    this.outputWidget.print(\"RUN: \"+config.MAIN)\n    this.saveFile();\n    \n    this.python.runProject().then(()=>{\n      this.fileExplorer.refreshRoot()\n    })\n\n    return true\n  }\n\n\n//-------------- API CONNECT\n  public runConnectAPI(){\n    this.outputWidget.clearOutput()\n    this.saveFile();\n    \n \n    this.apiConnect().then(()=>{\n      //TODO: on success, new files are downloaded \n      this.fileExplorer.refreshRoot()\n    })\n  }\n  \n\n  async apiConnect() {\n    console.log(\"apiConnect\")\n    if(!this.selectedService){return false}\n    console.log(\"apiConnect:service:OK\")\n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n    console.log(\"apiConnect:config:OK\")\n\n    let problem = this.selectedService.parent.name;\n    let service = this.selectedService.name;\n    let args = this.selectedService.exportArgs();\n    let tty = undefined\n    let token = undefined\n    let files = this.selectedService.exportFiles();\n    \n    console.log(\"apiConnect:params:problem\",problem)\n    console.log(\"apiConnect:params:service\",service)\n    console.log(\"apiConnect:params:args\",args)\n    console.log(\"apiConnect:params:tty\",tty)\n    console.log(\"apiConnect:params:token\",token)\n    console.log(\"apiConnect:params:files\",files)\n\n    \n    let onConnectionStart = () => {this.didConnectStart()};\n    let onConnectionBegin = (msg: string[]) => {this.didConnectBegin(msg)};\n    let onConnectionClose = (msg: string[]) => {this.didConnectClose(msg)};\n    let onData = (data: string)=>{ this.didConnectData(data)};\n\n    this.cmdConnect = await this.api.Connect(\n      problem, \n      service, \n      args,\n      tty,\n      token,\n      files,\n      onConnectionBegin,\n      onConnectionStart,\n      onConnectionClose,\n      onData\n    );\n    this.cmdConnect.onError = (error)=>{this.didConnectError(error)};\n\n    console.log(\"apiConnect:params:packages\",config.PACKAGES)\n    await this.python.installPackages(config.PACKAGES)\n    this.outputWidget.print(\"TEST: \"+config.MAIN)\n    await this.driver?.executeFile(config.MAIN)\n    \n    \n    console.log(\"apiConnect:DONE\")\n    \n\n    return true\n  }\n\n  async didConnectError(error: string){\n    console.log(\"apiConnect:didConnectError:\",error)\n    this.cmdConnect = undefined\n  }\n\n  async didConnectStart(){\n    console.log(\"apiConnect:didConnectStart\")\n  }\n\n  async didConnectBegin(message: string[]){\n    console.log(\"apiConnect:didConnectBegin:\", message)\n  }\n\n  async didConnectClose(message: string[]){\n    console.log(\"apiConnect:didConnectionClose:\",message)\n    this.cmdConnect = undefined\n  }\n\n  async didConnectData(data: string){\n    console.log(\"apiConnect:didConnectData:\",data)\n    this.onStdin(data)\n  }\n\n\n  //--------------\n\n\n\n\n}\n","\n<div class=\"tal-editor\">\n  <p-splitter [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50,35]\" [minSizes]=\"[12,20,20]\">\n\n\n    \n    <ng-template pTemplate>\n      <div class=\"tal-editor-files\">\n        <tal-file-explorer-widget #fileExplorer (onSelectFile)=\"selectFile($event)\"></tal-file-explorer-widget>\n      </div>\n    </ng-template>\n\n\n\n    <ng-template pTemplate>\n      \n        <div class=\"tal-code-editor-container\">\n\n          <div class=\"tal-code-editor-header\">\n            <tal-execbar-widget #execBar \n              (onRun)=\"runProject()\"\n              (onConnect)=\"runConnectAPI()\"\n              [selectedFile]=\"selectedFile\">\n            </tal-execbar-widget>\n          </div>\n\n          <div class=\"tal-code-editor\">\n            <tal-file-editor-widget #fileEditor\n              (onChange)=\"editorDidChange($event)\">\n            </tal-file-editor-widget>\n          </div>\n\n        </div>\n      \n    </ng-template>\n\n\n    <ng-template pTemplate>\n      <p-splitter [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50]\" [minSizes]=\"[12,20]\" layout=\"vertical\">\n\n        <ng-template pTemplate>\n          <tal-problem-widget #problemWidget \n            (onAttachments)=\"onAttachments($event)\"\n            (onProblemChanged)=\"onProblemChanged($event)\"\n            (onServiceChanged)=\"onServiceChanged($event)\">\n          </tal-problem-widget>\n        </ng-template>\n\n        <ng-template pTemplate>\n          <tal-output-widget #outputWidget \n            (onStdin)=\"onStdin($event)\">\n          </tal-output-widget>\n        </ng-template>\n        \n      </p-splitter>\n    </ng-template>\n\n  </p-splitter>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FsNodeFile, FsNodeFolder } from 'src/app/services/fs-service/fs.service';\n\n@Component({\n  selector: 'tal-execbar-widget',\n  templateUrl: './execbar-widget.component.html',\n  styleUrls: ['./execbar-widget.component.scss']\n})\nexport class ExecbarWidgetComponent implements OnInit {\n  @Input('selectedFile') selectedFile?:FsNodeFile\n\n  @Output('onRun') public onRun = new EventEmitter<FsNodeFile>();\n  @Output('onConnect') public onConnect = new EventEmitter<FsNodeFile>();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onRunClick(){\n    this.onRun.emit(this.selectedFile)\n  }\n\n  public onConnectClick(){\n    this.onConnect.emit(this.selectedFile)\n  }\n\n}\n","<div class=\"tal-code-editor-execbar\">\n    <div class=\"tal-code-editor-execbar-left\">\n        <h3>{{selectedFile?.name}}</h3>\n    </div>\n\n    <div class=\"tal-code-editor-execbar-right\">\n        <button pButton icon=\"pi pi-play\" (click)=\"onRunClick()\" title=\"Run locally\"></button>\n        <button pButton icon=\"pi pi-cloud-upload\" (click)=\"onConnectClick()\" title=\"Verify solution with TALight server\"></button>\n    </div>\n</div>","import { Component, ElementRef, EventEmitter, Input,  OnInit, Output, ViewChild } from '@angular/core';\nimport { encode } from 'base64-arraybuffer';\nimport { marked } from 'marked';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\nimport { MonacoEditorWidgetComponent } from '../monaco-editor-widget/monaco-editor-widget.component';\n\n// Editor UI\nexport enum EditorType{\n  None,\n  Code,\n  Archive,\n  Markdown,\n  Image,\n  Browser,\n  Unknown,\n  Default = Browser,\n}\n\nexport enum MatchMethod{\n  Auto,\n  Exact,\n  Glob,\n  Regex,\n  Default = Auto,\n}\nexport enum MatchType{\n  Auto,\n  Extension,\n  Mime, //TODO: \n  Default = Auto,\n}\n\n//Editor Options\nexport class EditorOptions{}\nexport class EditorOptionsMonaco extends EditorOptions{\n  constructor(\n    public language = \"python\",\n  ){super()}\n}\nexport class EditorOptionsBrowser extends EditorOptions{\n  constructor(\n    public embedded = true,\n    public mime = 'application/octet'\n  ){super()}\n}\n\n\n//File Assoc\nexport class FileAssociation{\n  constructor(\n    public pattern=\".*\",\n    public editorType = EditorType.None,\n    public editorOption?: EditorOptions,\n    public priority=0,\n    public matchMethod = MatchMethod.Auto, \n    public matchType = MatchType.Auto, \n  ){}\n  \n  match(file:FsNodeFile){\n    let parts = file.name.split(\".\")\n    console.log('FileAssociation:match:',parts)\n    if (parts.length > 1){\n      let ext = parts.splice(-1)[0]\n      console.log('FileAssociation:ext:',ext)\n      if(this.pattern==ext) { return true } \n      if(ext.match(this.pattern)){ return true } \n    } else {\n      //TODO: mime-magic matching\n    }\n\n    return false; //No match\n  }\n\n  static matchAll(file:FsNodeFile, associations:FileAssociation[]){\n    let matches:FileAssociation[] = []\n    associations.forEach((association)=>{\n      if(association.match(file)){\n        matches.push(association)\n      }\n    })\n\n    matches = matches.sort((a,b)=>{\n      return b.priority-a.priority\n    })\n\n    return matches;\n  }\n}\n\n\nexport class FileAssociationChoiceList{\n  public associations: FileAssociation[]\n  constructor(items: FileAssociation[]){ \n    this.associations = Array.from(items)\n  }\n  add(item: FileAssociation){ \n    if(this.associations.includes(item)){return;}\n    this.associations.push(item)\n  }\n  match(file:FsNodeFile){\n    let matches = FileAssociation.matchAll(file, this.associations)\n    console.log('FileAssociationChoiceList:match:',matches)\n    if(matches.length == 0){return null}\n    let bestMatch = matches[0]\n    return bestMatch;\n  }\n}\n\n\n\n@Component({\n  selector: 'tal-file-editor-widget',\n  templateUrl: './file-editor-widget.component.html',\n  styleUrls: ['./file-editor-widget.component.scss']\n})\nexport class FileEditorWidgetComponent implements OnInit {\n\n  EditorType = EditorType\n  public editorType = EditorType.None\n  public editorOption?:EditorOptions\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n\n  fileAssocList = new FileAssociationChoiceList([\n    //Code\n    new FileAssociation('py', EditorType.Code, new EditorOptionsMonaco('python')),\n    new FileAssociation('csv', EditorType.Code, new EditorOptionsMonaco('csv')),\n    new FileAssociation('json', EditorType.Code, new EditorOptionsMonaco('json')),\n    new FileAssociation('txt', EditorType.Code, new EditorOptionsMonaco('text')),\n    new FileAssociation('js', EditorType.Code, new EditorOptionsMonaco('javascript')),\n    new FileAssociation('yaml', EditorType.Code, new EditorOptionsMonaco('yaml')),\n    \n    //Markdown\n    new FileAssociation('md', EditorType.Markdown, new EditorOptionsMonaco('markdown')),\n\n    //Archive\n    new FileAssociation('tar', EditorType.Archive),\n    new FileAssociation('zip', EditorType.Archive),\n\n    //PDF\n    new FileAssociation('pdf', EditorType.Browser, new EditorOptionsBrowser(true,'application/pdf')),\n\n    //Images\n    new FileAssociation('png', EditorType.Browser, new EditorOptionsBrowser(true,'image/png')),\n    new FileAssociation('jpg', EditorType.Browser, new EditorOptionsBrowser(true,'image/jpg')),\n\n    //Other\n    new FileAssociation('.*', EditorType.Browser, new EditorOptionsBrowser(true),-10),\n  ])\n\n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @ViewChild(\"monacoEditor\") public monacoEditor!: MonacoEditorWidgetComponent;\n  @ViewChild(\"browserEditor\") public browserEditor!: ElementRef;\n  @ViewChild(\"imageViewer\") public imageViewer!: ElementRef;\n  @ViewChild(\"markdownPreview\") public markdownPreview!: ElementRef;\n  \n\n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n\n  constructor(\n    private readonly themeService: ThemeService, \n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    console.log('selectedFile:',selectedFile)\n    this.selectEditor()\n  }\n\n  public selectEditor(){\n    if(!this._selectedFile) { \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    \n    let bestMatch = this.fileAssocList.match(this._selectedFile)\n    if(!bestMatch){ \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    this.editorType = bestMatch.editorType\n    this.editorOption = bestMatch.editorOption\n\n    console.log(\"selectEditor:\",this.editorType)\n    console.log(\"selectEditor:editorOption:\",this.editorOption)\n    \n    this.openEditor()\n  }\n\n  public async openEditor(){\n    if (!this.selectedFile){return}\n    console.log('openEditor:', this.editorType.toString())\n    switch(this.editorType){\n      case EditorType.Markdown:\n        let markdownBox = this.markdownPreview.nativeElement as HTMLDivElement;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        markdownBox.innerHTML = await marked( this.selectedFile.content )\n        break;\n      case EditorType.Code: \n        let monacoOptions = this.editorOption as EditorOptionsMonaco;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        this.monacoEditor.selectedFile = this.selectedFile\n        this.monacoEditor.language = monacoOptions.language;\n        this.monacoEditor.updateEditorOptions()\n        break;\n      case EditorType.Browser: \n        let browserOptions = this.editorOption as EditorOptionsBrowser;\n        let iframe = this.browserEditor.nativeElement as HTMLIFrameElement;\n        let header = 'data:'+browserOptions.mime+';'\n        let body;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          console.log('openEditor:Browser:',Array.from(new Uint8Array(this.selectedFile.content) ) )\n          body = encode(this.selectedFile.content)\n        }else{\n          body = btoa(this.selectedFile.content)\n        }\n        let daraurl = header + 'base64,' + body\n\n        /*\n        let id = 'doclink'\n        let filename = this.selectedFile.name\n        let link = `<a id=\"${id}\" download=\"${filename}\" href=\"${daraurl}\"></a>`\n        let script = `<script>document.getElementById('${id}').click()</script>`\n        let template = `<html><body>${link}${script}</body></html>`\n        */\n        \n        iframe.src = daraurl\n        \n        break;\n    }\n  }\n\n  public shouldHide(editorType: EditorType){\n    return this.editorType !== editorType;\n  }\n\n  \n\n  //MonacoEditor\n\n  public monacoEditorDidChange(file:FsNodeFile){\n    this.onChange.emit(file)\n  }\n\n}\n","<div class=\"tal-file-editor-switch\">\n\n    <div [hidden]=\"shouldHide(EditorType.Unknown)\" class=\"tal-file-editor-case-unknown tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Formato file sconosciuto.</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.None)\" class=\"tal-file-editor-case-none tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Seleziona o crea un file</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Image)\" class=\"tal-file-editor-case-image tal-file-editor-case \">\n        <div class=\"tal-file-editor-image\">\n            <img #imageViewer/>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Code)\" class=\"tal-file-editor-case-code tal-file-editor-case \">\n        <div class=\"tal-file-editor-code\">\n            <tal-monaco-editor-widget class=\"tal-file-editor-monaco-widget\"\n                #monacoEditor\n                (onChange)=\"monacoEditorDidChange($event)\">\n            </tal-monaco-editor-widget>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Markdown)\" class=\"tal-file-editor-case-markdown tal-file-editor-case \">\n        <div class=\"tal-markdown-preview\">\n            <div #markdownPreview class=\"tal-markdown-preview-content\" ></div>\n        </div>\n    </div>\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Browser)\" class=\"tal-file-editor-case-browser tal-file-editor-case \">\n        <div class=\"tal-browser-viewer\">\n            <iframe #browserEditor class=\"tal-browser-viewer-iframe\" ></iframe>\n        </div>\n    </div>\n\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Archive)\" class=\"tal-file-editor-case-archive tal-file-editor-case \">\n        <div class=\"tal-archive-viewer tal-center-page\">\n            <div class=\"tal-placeholder-message\">{{selectedFile?.name}}</div>\n            <div class=\"tal-placeholder-message\">\n                TODO: file preview\n                <ul>\n                    <li>fileA.zip</li>\n                    <li>main.py</li>\n                    <li>.talight/talight.json</li>\n                </ul>\n                \n            </div>\n            <div class=\"tal-placeholder-message\">\n                <button #untarButton pButton \n                    label=\"Decompress\"\n                    [title]=\"'Untar: '+selectedFile?.name\"\n                    onclick=\"alert('TODO: Decompress')\"\n                    ></button>\n            </div>\n        </div>\n    </div>\n\n    \n</div>\n\n\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { ConfirmationService } from 'primeng/api';\nimport { OverlayPanel } from 'primeng/overlaypanel';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver, Tar } from 'src/app/services/fs-service/fs.service';\nimport { FsServiceTest } from 'src/app/services/fs-service/fs.service.test';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\n\n\n@Component({\n  selector: 'tal-file-explorer-widget',\n  templateUrl: './file-explorer-widget.component.html',\n  styleUrls: ['./file-explorer-widget.component.scss']\n})\nexport class FileExplorerWidgetComponent implements OnInit {\n  public driver?: FsServiceDriver;\n  public rootDir = \"/\"\n  public driverName = 'pyodide'\n  public emptyNode = {name:\"\", path: this.rootDir, files:[], folders:[]}\n  public showHidden = false\n\n  @Input(\"root\") root: FsNodeFolder = this.emptyNode;\n\n  \n  public editingValue: string = \"\";\n  public editingItem: FsNodeFile | FsNodeFolder | null = null;\n  public editingItemFolder: FsNodeFolder | null = null;\n  public editingItemError: boolean = false;\n\n  public newItemValue: string = \"\";\n  public newItemType: \"file\" | \"folder\" = \"file\";\n  public newItemFolder: FsNodeFolder | null = null;\n  public newItemError: boolean = false;\n\n  public selectedFile: FsNodeFile | null = null;\n  public selectedFolder: FsNodeFolder | null = null;\n  \n\n  @ViewChild(\"nameEditing\") public nameEditingElement?: ElementRef;\n  @ViewChild(\"newItemName\") public newItemNameElement?: ElementRef;\n\n  @ViewChildren(OverlayPanel) public panels?: QueryList<OverlayPanel>;\n\n  @Output(\"change\") public change = new EventEmitter<FsNodeFolder>();\n  @Output(\"onSelectFile\") public onSelectFile = new EventEmitter<FsNodeFile>();\n  \n  @Output(\"showHiddenChanged\") public showHiddenChanged = new EventEmitter<boolean>(); \n\n  constructor(\n    private confirmationService: ConfirmationService, \n    private fs:FsService,\n    private python: PythonCompilerService,\n    ) {\n    //this.driver = fs.getDriver('pyodide');\n    this.driver = fs.getDriver(this.driverName);\n    //alert(this.driver)\n    //this.driver?.writeFile(this.editingItem.path,this.editingItem)\n   }\n\n  ngOnInit() {\n    this.bindCollapseEvent();\n    \n    let test = new FsServiceTest(this.fs, this.driverName)\n    //this.rootDir = this.driver?.rootDir ?? this.rootDir;\n    this.driver?.ready().then((ready)=>{\n      //alert('ready!');\n      \n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      })\n      \n    })\n\n    \n\n  }\n\n  refreshRoot(){\n    this.driver?.scanDirectory(this.rootDir).then((folder)=>{\n      this.root = folder ?? this.emptyNode;\n      this.bindCollapseEvent();\n      this.change?.emit(this.root);\n    });\n    \n  }\n\n  private bindCollapseEvent() {\n    setTimeout(() => {\n      const rows = document.getElementsByClassName(\"collapse-toggle\");\n      for (let i = 0; i < rows.length; i++) {\n        if (!rows[i].classList.contains(\"bound\")) {\n          let row = rows[i];\n          row.addEventListener(\"click\", (event) => { this.handleClickEvent(event) });\n          row.classList.add(\"bound\");\n        }\n      }\n    }, 0);\n  }\n\n  public handleClickEvent(event:Event){\n    event.preventDefault();\n    event.stopPropagation();\n    const row = event.target as HTMLElement;\n    let newParent: HTMLElement = row;\n    let safeCount = 0;\n    do {\n      newParent = newParent.parentElement as HTMLElement;\n      safeCount++;\n    } while (!newParent.classList.contains(\"tal-folder-subtree\") && safeCount < 10);\n\n    if (safeCount < 10) {\n      newParent.classList.toggle(\"collapsed\");\n    }\n  }\n\n  public closeAllContextMenus(event: Event) {\n    event.preventDefault();\n    if (this.panels) {\n      this.panels.forEach(p => p.hide());\n    }\n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.driver?.readFile(file.path).then((content)=>{\n      file.content = content ?? \"\";\n      this.selectedFile = file;\n      this.onSelectFile?.emit(file);\n    })\n    \n  }\n\n  public selectFolder(folder: FsNodeFolder) {\n    if (this.selectedFolder == folder){\n      this.selectedFolder == null;\n    }\n  }\n\n  public openSettings(){\n    //TODO: \n  }\n  \n\n  public toggleHidden(){\n    this.showHidden = !this.showHidden;\n  }\n\n  public isVisibile(fsitem: FsNodeFile|FsNodeFolder){\n    let isHidden = fsitem.name.startsWith('.');\n    return this.showHidden || ( !this.showHidden && !isHidden ) \n  }\n\n  /** EDITING METHODS  **/\n  public startEditing(folder: FsNodeFolder, item: FsNodeFile | FsNodeFolder) {\n    this.editingItem = item;\n    this.editingValue = item.name;\n    this.editingItemFolder = folder;\n    this.editingItemError = false;\n\n    setTimeout(() => {\n      if (this.nameEditingElement) {\n        this.nameEditingElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public saveEditing() {\n    if (!this.editingItemError) {\n      if (this.editingItem) {\n        this.editingValue = this.editingValue.trim();\n        if (this.editingValue.length > 0) {\n          this.editingItem.name = this.editingValue;\n          this.change?.emit(this.root);\n        }\n      }\n    }\n    this.cancelEditing();\n  }\n\n  public cancelEditing() {\n    this.editingItem = null;\n    this.editingValue = \"\";\n    this.editingItemFolder = null;\n  }\n\n  public editItemChange() {\n    this.editingItemError = false;\n\n    if (this.editingItemFolder) {\n      const existingFile = this.editingItemFolder.files.find(f => f.name === this.editingValue);\n      const existingFolder = this.editingItemFolder.folders.find(f => f.name === this.editingValue);\n      if (existingFile || existingFolder) {\n        this.editingItemError = true;\n      }\n    }\n  }\n  /***************/\n\n  /** DELETE METHODS **/\n  public deleteFileClick(event: Event, file: FsNodeFile) {\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questo file?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFile(this.root, file);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFile(currentFolder: FsNodeFolder, file: FsNodeFile) {\n    this.driver?.delete(file.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.files.indexOf(file) >= 0) {\n      currentFolder.files.splice(currentFolder.files.indexOf(file), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const folder: TalFolder = currentFolder.folders[i];\n        this.deleteFile(folder, file);\n      }\n    }\n    */\n  }\n\n  public deleteFolderClick(event: Event, folder: FsNodeFolder) {\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questa cartella? Tutti i file e le cartelle contenute verranno eliminate.',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFolder(this.root, folder);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFolder(currentFolder: FsNodeFolder, folder: FsNodeFolder) {\n    this.driver?.delete(folder.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.folders.indexOf(folder) >= 0) {\n      currentFolder.folders.splice(currentFolder.folders.indexOf(folder), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const subFolder: TalFolder = currentFolder.folders[i];\n        this.deleteFolder(subFolder, folder);\n      }\n    }\n    */\n  }\n  /***************/\n\n  /** CREATE METHODS **/\n  public syncFilesystem(folder: FsNodeFolder) {\n    setTimeout(() => { \n      //this.refreshRoot();\n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      });\n    }, 0);\n  }\n\n\n  public addNewItem(folder: FsNodeFolder, type: \"file\" | \"folder\") {\n    this.newItemValue = \"\";\n    this.newItemFolder = folder;\n    this.newItemType = type;\n    this.newItemError = false;\n\n    setTimeout(() => {\n      if (this.newItemNameElement) {\n        this.newItemNameElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public cancelNewItem() {\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public saveNewItem() {\n    if (!this.newItemError) {\n      this.newItemValue = this.newItemValue.trim();\n      if (this.newItemValue.length > 0) {\n        if (this.newItemFolder) {\n          if (this.newItemType === \"file\") {\n            let path = this.newItemFolder.path + \"/\" + this.newItemValue\n            this.driver?.writeFile(path, \"\").then(()=>{\n              this.refreshRoot()\n            })\n            /*\n            this.newItemFolder.files.push({\n              name: this.newItemValue,\n              content: \"\"\n            } as TalFile );\n            */\n          } else {\n            this.driver?.createDirectory(\"./\"+this.newItemValue).then(()=>{\n              this.refreshRoot()\n            })\n            \n            this.newItemFolder.folders.push({\n              name: this.newItemValue,\n              path: \"./\"+this.newItemValue,\n              files: [],\n              folders: []\n            });\n\n            //this.bindCollapseEvent();\n          }\n          //this.refreshRoot()\n          //this.change?.emit(this.root);\n        }\n      }\n    }\n\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public newItemChange() {\n    this.newItemError = false;\n\n    if (this.newItemFolder) {\n      const existingFile = this.newItemFolder.files.find(f => f.name === this.newItemValue);\n      const existingFolder = this.newItemFolder.folders.find(f => f.name === this.newItemValue);\n      if (existingFile || existingFolder) {\n        this.newItemError = true;\n      }\n    }\n  }\n  /***************/\n  async upload(event:Event) {\n    if (!( event.target instanceof HTMLInputElement )){ return false; }\n    let target = event.target as HTMLInputElement\n    if(!target.files || target.files.length == 0){ return false; }\n\n    if(target.files.length == 1 && target.files[0].name.endsWith('.tal.tar') ){\n      let content = await target.files[0].arrayBuffer();\n      await this.importProject(content)\n    }else{\n      for(let i = 0; i<target.files.length; i++){\n        let file = target.files[i]\n        let content = await file.arrayBuffer();\n        console.log(\"upload:content:\", new Uint8Array(content))\n        let path = (!this.selectedFolder?\"/\":this.selectedFolder.path) + file.name\n        console.log('upload:', path, content)\n        await this.driver?.writeFile(path, content)\n      }\n    }\n    this.refreshRoot()\n    return true;\n  }\n\n  async importProject(tarball:ArrayBuffer) {\n    Tar.unpack(tarball, async (files, folders)=>{\n      console.log(\"extractTar:unpack:files\",files)\n      console.log(\"extractTar:unpack:folders\",folders)\n  \n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      this.refreshRoot()\n    })\n    console.log(\"import:data:\",tarball)\n        \n    return true\n  }\n\n  public export() {\n    let items = this.fs.treeToList(this.root)\n    if(items.length == 0 ) {\n      console.log(\"export: No files found to be exported\")\n    }\n\n    console.log(\"export:items:\",items)\n    Tar.pack(items, (tarball:ArrayBuffer)=>{\n      let tarname = \"tal-project-\"+ Date.now()+\".tal.tar\"\n      console.log('export:tarball:',tarname,tarball)\n      this.triggerDownload(tarname, tarball, \"application/x-tar\")\n    })\n  }\n\n  public triggerDownload(filename:string, content:ArrayBuffer|string, mime=\"application/octet-stream\"){\n    let a = document.createElement(\"a\");\n    \n    const blob = new Blob([content], {type: mime});\n    let url = window.URL.createObjectURL(blob);\n    \n    a.style.display = \"none\";\n    a.download = filename;\n    a.href = url;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n\n\n\n\n\n}\n","<div class=\"tal-editor-files-tree\">\n  <div class=\"tal-editor-files-header\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton icon=\"pi pi-file\" title=\"Nuovo file\"\n        (click)=\"closeAllContextMenus($event); addNewItem(root, 'file')\" pTooltip=\"Nuovo file\"></button>\n      <button pButton icon=\"pi pi-folder\" title=\"Nuova cartella\"\n        (click)=\"closeAllContextMenus($event); addNewItem(root, 'folder')\" pTooltip=\"Nuova cartella\"></button>\n    </div>\n    <div class=\"tal-editor-files-right-bar\">\n      <button pButton icon=\"pi pi-sync\" title=\"Refresh\" (click)=\"closeAllContextMenus($event); syncFilesystem(root)\"\n        pTooltip=\"Aggiorna\"></button>    \n    </div>\n  </div>\n\n\n  <div class=\"tal-editor-files-body\">\n    <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: root }\"></ng-container>\n  </div>\n\n\n  <div class=\"tal-editor-files-footer\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton class=\"p-button p-button-secondary\" icon=\"pi pi-save\" title=\"Salva/Esporta\"\n        (click)=\"closeAllContextMenus($event); export()\" pTooltip=\"Esporta\"></button>\n      \n      <button pButton class=\"p-button p-button-secondary\" icon=\"pi pi-upload\" title=\"Upload/Importa\"\n        (click)=\"fileUpload.click()\" pTooltip=\"Upload/Import\"></button>\n      <input #fileUpload type=\"file\" style=\"display: none;\" (change)=\"upload($event)\"/>\n    </div>\n\n    <div class=\"tal-editor-files-right-bar\">\n\n      <button pButton icon=\"pi pi-eye\" *ngIf=\"showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Mostra file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-eye-slash\" *ngIf=\"!showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Nascondi file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-cog\" title=\"Settings\"\n        (click)=\"closeAllContextMenus($event); openSettings()\" pTooltip=\"Settings\"></button>\n      \n    </div>\n\n    \n  </div>\n\n\n\n</div>\n\n<ng-template #TalFolder let-folder>\n  <div class=\"tal-folder\">\n    <ng-container *ngFor=\"let subfolder of folder.folders\">\n      <div *ngIf=\"isVisibile(subfolder)\" class=\"tal-folder-subtree\">\n        <div class=\"tal-folder-row\" (contextmenu)=\"closeAllContextMenus($event); folderOverlayPanel.show($event)\" [class.opened]=\"subfolder===selectedFolder\">\n          <div class=\"tal-folder-title collapse-toggle\" (click)=\"closeAllContextMenus($event); selectFolder(subfolder)\"\n            (dblclick)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n            <i class=\"pi pi-chevron-down\"></i>\n            <ng-container *ngIf=\"editingItem!=subfolder;else ItemEditingTemplate\">\n              <i class=\"pi pi-folder\"></i>\n              <p>{{subfolder.name}}</p>\n            </ng-container>\n          </div>\n          <div class=\"tal-row-settings\" *ngIf=\"editingItem!=subfolder\">\n            <div class=\"tal-row-button\" (click)=\"folderOverlayPanel.show($event)\">\n              <i class=\"pi pi-ellipsis-h\"></i>\n            </div>\n          </div>\n\n          <p-overlayPanel #folderOverlayPanel>\n            <ng-template pTemplate>\n              <div class=\"tal-contextmenu-container\">\n                <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'file')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuovo file</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'folder')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuova cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n                  <i class=\"pi pi-pencil\"></i>\n                  <p>Rinomina cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); deleteFolderClick($event, subfolder)\">\n                  <i class=\"pi pi-trash\"></i>\n                  <p>Elimina cartella</p>\n                </div>\n              </div>\n            </ng-template>\n          </p-overlayPanel>\n\n        </div>\n        <div class=\"tal-subfolder\">\n          <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: subfolder }\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"newItemFolder === folder\">\n      <ng-container *ngTemplateOutlet=\"NewItemTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngFor=\"let file of folder.files\">\n      <div *ngIf=\"isVisibile(file)\" class=\"tal-file\"\n        (contextmenu)=\"closeAllContextMenus($event); fileOverlayPanel.show($event)\" [class.opened]=\"file===selectedFile\">\n        <div class=\"tal-file-title\" (click)=\"closeAllContextMenus($event); selectFile(file)\"\n          (dblclick)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n          <ng-container *ngIf=\"editingItem!=file;else ItemEditingTemplate\">\n            <p>{{file.name}}</p>\n          </ng-container>\n        </div>\n        <div class=\"tal-row-settings\" *ngIf=\"editingItem!=file\">\n          <div class=\"tal-row-button\" (click)=\"fileOverlayPanel.show($event)\">\n            <i class=\"pi pi-ellipsis-h\"></i>\n          </div>\n        </div>\n\n        <p-overlayPanel #fileOverlayPanel>\n          <ng-template pTemplate>\n            <div class=\"tal-contextmenu-container\">\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n                <i class=\"pi pi-pencil\"></i>\n                <p>Rinomina file</p>\n              </div>\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); deleteFileClick($event, file)\">\n                <i class=\"pi pi-trash\"></i>\n                <p>Elimina file</p>\n              </div>\n            </div>\n          </ng-template>\n        </p-overlayPanel>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #ItemEditingTemplate>\n  <input #nameEditing class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"editingValue\" (blur)=\"saveEditing()\"\n    (keyup.enter)=\"saveEditing()\" (keyup.esc)=\"cancelEditing()\" (input)=\"editItemChange()\"\n    [class.error]=\"editingItemError\">\n</ng-template>\n\n<ng-template #NewItemTemplate>\n  <div class=\"tal-new-item\">\n    <input #newItemName class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"newItemValue\" (blur)=\"saveNewItem()\"\n      (keyup.enter)=\"saveNewItem()\" (keyup.esc)=\"cancelNewItem()\" (input)=\"newItemChange()\"\n      [class.error]=\"newItemError\">\n  </div>\n</ng-template>\n\n<p-confirmDialog acceptLabel=\"Elimina\" acceptIcon=\"pi pi-trash\" rejectLabel=\"Annulla\">\n</p-confirmDialog>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EditorComponent } from 'ngx-monaco-editor-v2';\nimport { noop } from 'rxjs';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\n\n@Component({\n  selector: 'tal-monaco-editor-widget',\n  templateUrl: './monaco-editor-widget.component.html',\n  styleUrls: ['./monaco-editor-widget.component.scss']\n})\nexport class MonacoEditorWidgetComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @ViewChild(\"monacoEditor\") public monacoEditor!: EditorComponent;\n  public editorOptions: any;\n  \n  \n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @Input(\"language\") public language: string = \"\";\n  //Code\n  \n  \n  \n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n  \n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  constructor(\n    private readonly themeService: ThemeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.themeService.themeChanged.subscribe((theme) => {\n      this.updateEditorOptions();\n    });\n    \n    \n    this.updateEditorOptions();\n  }\n\n\n  ngAfterViewInit() {\n    //this.monacoEditor.registerOnChange((event:any)=>{ this.change(event) })\n    //this.monacoEditor.registerOnTouched((event:any)=>{ this.input(event) })\n\n    // this returns null\n  }\n  \n  ngOnChanges(): void {\n    this.updateEditorOptions();\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    if(!this._selectedFile) {\n      this.value = \"\"; \n      return; \n    }\n    let content = this._selectedFile.content; \n    if(typeof content === 'string' )\n    { \n      this.value = content\n    }\n\n  }\n\n  // CodeEditorControls\n  private onTouchedCallback: (_?: any) => void = noop;\n  private onChangeCallback: (_?: any) => void = noop;\n\n  public getFileContent():string{\n    if(!this._selectedFile){return \"\"}\n    let content = this._selectedFile.content\n    if (content instanceof ArrayBuffer){\n      content = this.binDecoder.decode(content)\n      this._selectedFile.content = content\n    }\n    return content\n  }\n\n  public setFileContent(text:string){\n    if(!this._selectedFile){return;}\n    this._selectedFile.content = text\n  }\n\n  \n\n\n  // get accessor\n  public get value(): string {\n    console.log(\"MonacoEditor:value:get\")\n    return this.getFileContent(); \n  }\n\n  // Set accessor including call the onchange callback\n  public set value(text: string) {\n    console.log(\"MonacoEditor:value:set\")\n    if(!this._selectedFile){return;}\n    let content=this.getFileContent()\n    console.log(\"MonacoEditor:value:old:new\",content,text)\n    if (text !== content) {\n      console.log(\"MonacoEditor:value:set:changed\")\n      this.setFileContent(text);\n      this.didChange()\n      \n    }\n  }\n  // From ControlValueAccessor interface\n  public writeValue(text: any) {\n    console.log(\"MonacoEditor:value:writeValue\")\n    if (text !== this.value) {\n      this.value = text;\n    }\n  }\n\n  \n  public didChange(): void {\n    console.log(\"monacoEditor:didChange\")\n    this.onChangeCallback();\n    this.onTouchedCallback();\n    if(!this.selectedFile){return;}\n    this.onChange.emit(this.selectedFile);\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  public updateEditorOptions(): void {\n    console.log(this.language);\n    this.editorOptions = {\n      language: this.language,\n      theme: this.themeService.themeName(),\n      automaticLayout: true\n    }\n  }\n    \n}\n","<div class=\"tal-monaco-editor\">\n    <ngx-monaco-editor class=\"tal-monaco-editor-ngx\"\n        #monacoEditor \n        [lang]=\"language\" \n        [options]=\"editorOptions\" \n        [(ngModel)]=\"value\">\n    </ngx-monaco-editor>\n</div>\n    ","import { Component, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport { ApiService, Meta } from 'src/app/services/api-service/api.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { ProblemDescriptor, ServiceDescriptor, ArgsMap, ArgDescriptor } from 'src/app/services/problem-manager-service/problem-manager.service';\n\n\nexport class ServiceMenuEntry {\n  constructor(\n    public problem = \"\",\n    public service = \"\",\n    public descriptor: ServiceDescriptor,\n  ){}\n}\n\n@Component({\n  selector: 'tal-output-widget',\n  templateUrl: './output-widget.component.html',\n  styleUrls: ['./output-widget.component.scss'],\n})\nexport class OutputWidgetComponent {\n\n  @Output('onInput') public onInput = new EventEmitter<InputEvent>();\n  @Output('onStdin') public onStdin = new EventEmitter<string>(); \n\n  @ViewChild(\"output\") public output!: ElementRef;\n  @ViewChild(\"sdtinInput\") public sdtinInput!: ElementRef;\n\n  public outputText: string = \"\";\n\n  constructor( public zone: NgZone){}\n  \n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n\n  clearOutput() {\n    this.zone.run(() => this.outputText = \"\")\n  }\n\n\n  public print(content: string, end = \"\\n\") {\n    this.zone.run(() => this.outputText += content + end);\n\n    // Scroll #console-bottom-scroll to bottom\n    setTimeout(() => {\n      const scrollEl = document.getElementById(\"tal-output-widget-scroll-id\");\n      if (scrollEl) {\n        scrollEl.scrollTop = scrollEl.scrollHeight;\n        console.log(scrollEl.scrollTop, scrollEl.scrollHeight)\n      }\n    });\n  }\n\n\n\n  public testOutput() {\n    this.print(\"python main.py\\n\")\n  }\n\n\n  public sendStdin() {\n    let msg = this.sdtinInput.nativeElement.value ?? \"\"\n    msg = msg.trim()\n    console.log(\"sendStdin:\", this.sdtinInput)\n    if (msg == \"\") { return }\n\n    this.sdtinInput.nativeElement.value = \"\"\n    this.onStdin.emit(msg);\n  }\n\n  public sendOnEnter(event: KeyboardEvent) {\n    if (event.key == 'Enter') { this.sendStdin(); }\n  }\n\n}\n\n\n","\n<div class=\"tal-output-widget\">\n    <div class=\"tal-output-widget-label\">Output</div>\n    <div class=\"tal-output-widget-scroll\" id=\"tal-output-widget-scroll-id\">\n        <pre class=\"tal-output-widget-text\" #output>{{outputText}}</pre>\n    </div>\n    <div class=\"tal-output-widget-stdin\">\n        <button pButton class=\"p-button-danger\" icon=\"pi pi-trash\" (click)=\"clearOutput()\" title=\"Clear output\"\n          pTooltip=\"Pulisci output\"></button>\n        <input #sdtinInput class=\"tal-output-widget-stdin-input\" (keydown)=\"sendOnEnter($event)\"\n          placeholder=\"Input del programma\" />\n        <button pButton icon=\"pi pi-send\" (click)=\"sendStdin()\" title=\"Send\" pTooltip=\"Invia\"></button>\n  </div>\n</div>\n\n","import { Component, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport { ApiService, Meta } from 'src/app/services/api-service/api.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { ProblemDescriptor, ServiceDescriptor, ArgsMap, ArgDescriptor } from 'src/app/services/problem-manager-service/problem-manager.service';\n\n\nexport class ServiceMenuEntry {\n  constructor(\n    public problem = \"\",\n    public service = \"\",\n    public descriptor: ServiceDescriptor,\n  ){}\n}\n\n@Component({\n  selector: 'tal-problem-widget',\n  templateUrl: './problem-widget.component.html',\n  styleUrls: ['./problem-widget.component.scss'],\n})\nexport class ProblemWidgetComponent {\n  @Output('onProblemListUpdate') public onProblemListUpdate = new EventEmitter<Map<string, Meta>>();\n  @Output('onProblemChanged') public onProblemSelected = new EventEmitter<ProblemDescriptor>();\n  @Output('onServiceChanged') public onServiceSelected = new EventEmitter<ServiceDescriptor>();\n  @Output('onAttachments') public onAttachments = new EventEmitter<ArrayBuffer>();\n\n  public outputText: string = \"\";\n\n  servicesMenu = new Array<ServiceMenuEntry>();\n  selectedProblem?: ProblemDescriptor;\n  selectedService?: ServiceMenuEntry;\n  selectedArgs?: ArgsMap;\n  regexFormat = true;\n  showRegex = true;\n\n\n  constructor( public zone: NgZone,\n               public api: ApiService,\n               public pm: ProblemManagerService){}\n  \n  ngOnInit() {\n    this.apiProblemList();\n  }\n\n  ngOnDestroy() {}\n\n\n  clearOutput() {\n    this.zone.run(() => this.outputText = \"\")\n  }\n\n  clenupRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\((.*)\\)/,'$1')\n    text = text.replace(/\\|/g,' OR ')\n    return text;\n  }\n\n  readableRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\[([^\\]]*)\\]/, (match:string, content:string)=>{\n      if ( content.startsWith('^') ){\n        return ' invalid('+content.slice(1)+') '\n      }\n      return ' valid('+content.slice(1)+') '\n    })\n    text = text.replace(/\\(([^|]+|)*([^|]+)*\\)/g,(match:string, options:string, last:string)=>{\n      console.log('OROR:',match, options, last)\n      return text.replace(/\\((.*)\\)/,'$1').replace(/\\|/g,' OR ')\n    })\n    return text\n  }\n\n  async onApiError(message: string) {\n    console.log(\"API Error: \", message)\n  }\n  \n  async argDidFocus(arg:ArgDescriptor,event:Event){\n    console.log('argDidFocus:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n    console.log('argDidFocus:show!')\n    panel.style.display = \"flex\"\n    if(regex.style.color == \"red\"){\n      regex.style.color = \"orange\"\n    }else{\n      regex.style.color = \"\"\n    }\n    \n  }\n\n  async argDidChange(arg:ArgDescriptor,event:Event){\n    console.log('argDidChange:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n\n    console.log('argDidFocus:validate')\n    let issues = this.pm.validateArg(arg)\n    if(issues !== null){\n      regex.style.color = \"red\"\n      panel.style.display = \"flex\"\n    }else if(arg.value != arg.default){\n      regex.style.color = \"green\"\n      panel.style.display = \"flex\"\n    }else{\n      regex.style.color = \"\"\n      panel.style.display = \"none\"\n    }\n  }\n\n  async argDidReset(arg:ArgDescriptor,event:Event){\n    console.log('argDidReset:',arg.key,event)\n    arg.value = arg.default ?? \"\"\n    this.argDidChange(arg,event)\n  }\n\n  async toggleShowRegex(arg:ArgDescriptor,event:Event){\n    let idPanel = 'args-regex-panel-' + arg.key\n    let panel = document.getElementById(idPanel)\n    if(!(panel instanceof HTMLElement)) {return}\n    panel.style.display = panel.style.display == 'none' ? 'flex' : 'none';\n  }\n\n  async toggleRegexFormat(arg:ArgDescriptor,event:Event){\n    let idRegex = 'args-regex-'+arg.key;\n    let regex = document.getElementById(idRegex)\n    if(!(regex instanceof HTMLElement)) {return}\n    let content;\n    if(regex.classList.contains('format-regex-simple')){\n      regex.classList.remove('format-regex-simple')\n      regex.innerText = arg.regex + \"\"\n    }else{\n      regex.classList.add('format-regex-simple')\n      regex.innerText = this.clenupRegex(arg.regex)\n    }\n  }\n\n  async reloadProblemList(){\n    this.selectedProblem = undefined;\n    this.selectedService = undefined;\n    this.selectedArgs = undefined;\n    this.servicesMenu = []\n    this.apiProblemList()\n  }\n\n  async updateProblemsUI() {\n    let menuServices = new Array<ServiceMenuEntry>();\n    this.pm.problemList.forEach((problemDesc)=>{      \n      problemDesc.services.forEach((serviceDesc)=>{\n        var pattern = new RegExp('[-_ ]+','g');\n        var serviceLabel = serviceDesc.name.replace(pattern, \" \")\n        let serviceEntry = new ServiceMenuEntry(problemDesc.name,serviceLabel,serviceDesc)\n        menuServices.push(serviceEntry)\n      })\n    })\n\n    console.log('updateProblemsUI:menuServices:', menuServices)\n    \n    this.zone.run(() => { \n      this.servicesMenu = menuServices\n    })\n    \n  }\n\n  \n  async apiProblemList() {\n    let req = this.api.problemList(async (problemList) => {\n      console.log('apiProblemList:problemList:', problemList)\n      this.pm.updateProblems(problemList)\n      this.onProblemListUpdate.emit(problemList)\n      await this.updateProblemsUI()\n    });\n    req.onError = (error) => { this.onApiError(error) };\n  }\n\n  \n\n  async didSelectProblem() {\n    console.log('didSelectProblem:', this.selectedProblem)\n    if (!this.selectedProblem){return}\n    this.pm.selectProblem(this.selectedProblem)\n    this.onProblemSelected.emit(this.selectedProblem)\n  }\n\n  async didSelectService() {\n    console.log('didSelectService:', this.selectedService)\n    if (!this.selectedService){return}\n    let serviceDesc = this.selectedService!.descriptor\n    this.pm.selectService(serviceDesc)\n    this.selectedArgs = serviceDesc.args\n    console.log('didSelectService:selectedArgs:', this.selectedArgs)\n    this.onServiceSelected.emit(serviceDesc)\n  }\n\n  async apiDownloadAttachment() {\n    console.log('apiDownloadAttachment:', this.selectedService)\n    if (!this.selectedService) { return }\n    let problem = this.selectedService.descriptor.parent;\n    if(!problem) {return;}\n    \n    let onAttachment = () => { console.log(\"Attachment packet received\") };\n    let onAttachmentInfo = (info: any) => { console.log('apiDownloadAttachment:info:', info) };\n\n    let onData = (data: ArrayBuffer) => {\n      console.log(\"apiDownloadAttachment:onData:\", data);\n      this.onAttachments.emit(data);\n    };\n\n    let req = this.api.GetAttachment(problem.name, onAttachment, onAttachmentInfo, onData);\n    req.onError = (error) => { this.onApiError(error) };\n\n  }\n\n}\n\n\n","<div class=\"tal-problem-widget-api\">\n  <!-- ROW:title -->\n  <!--\n  <div class=\"tal-problem-widget-api-args-row\">\n    <div class=\"tal-problem-widget-label\">Problem</div>\n  </div>\n  -->\n\n  <!-- API: PROBLEMS and SERVICES -->\n  <div class=\"tal-problem-widget-api-row tal-problem-widget-api-problem\">\n      <button pButton class=\"p-button-danger\" icon=\"pi pi-refresh\"\n                      title=\"Refresh\" pTooltip=\"Refresh\"\n                      (click)=\"reloadProblemList()\"></button>\n      <p-dropdown placeholder=\"Seleziona un problema\" class=\"tal-problem-widget-problem-selector\" \n                  [options]=\"servicesMenu\" [(ngModel)]=\"selectedService\"\n                  (onChange)=\"didSelectService()\" [style]=\"{'height': '55px', 'padding': 0}\">\n            \n            \n            <ng-template let-option pTemplate=\"selectedItem\">\n              <div class=\"tal-problem-widget-problem-selected\">\n                <span class=\"problem-label\">{{option.problem}}</span>\n                <span class=\"service-label\">{{option.service}}</span>\n              </div>\n            </ng-template>\n            \n\n            <ng-template let-option pTemplate=\"item\">\n              <div class=\"tal-problem-widget-problem-item\">\n                <span class=\"problem-label\">{{option.problem}}</span>\n                <span class=\"service-label\">{{option.service}}</span>\n              </div>\n            </ng-template>\n\n\n      </p-dropdown>\n      <button pButton class=\"p-button-help\" icon=\"pi pi-download\" (click)=\"apiDownloadAttachment()\"\n              title=\"Download Attachments\" pTooltip=\"Scarica allegati\"></button>\n  </div>\n\n  <!-- ROW:title -->\n  <div class=\"tal-problem-widget-api-args-row\">\n    <div class=\"tal-problem-widget-label\">Arguments</div>\n  </div>\n\n  <!-- API: ARGS -->\n  <div class=\"tal-problem-widget-api-row tal-problem-widget-api-args\">\n    <!-- ROW: empty -->\n    <div class=\"tal-problem-widget-api-args-row stretch-flex\" *ngIf=\"!selectedArgs || selectedArgs.size==0\">\n      <div class=\"tal-problem-widget-api-args-row-no-params\">\n        <div>No arguments found.</div>\n      </div>\n    </div>\n    \n    <!-- ROW: arg -->\n    <div class=\"tal-problem-widget-api-args-row\" *ngFor=\"let arg of selectedArgs | keyvalue; \"> \n      <div class=\"tal-problem-widget-api-args-subrow\">\n        <!-- CELL: info -->\n        <div class=\"tal-problem-widget-api-args-row-info\">\n          <i #argsIcons class=\"pi pi-info-circle\" [id]=\"'args-icon-'+arg.value.key\" (click)=\"toggleShowRegex(arg.value,$event)\" style=\"cursor: pointer;\" [pTooltip]=\"arg.value.regex+''\"></i>\n        </div>\n        <!-- CELL: name -->\n        <div class=\"tal-problem-widget-api-args-row-name\">{{arg.value.name}}</div>\n\n        <!-- CELL: field -->\n        <div class=\"tal-problem-widget-api-args-row-field\">\n          <input  pInputText type=\"text\" \n                  class=\"top-bar-url-input p-inputtext-sm\" \n                  [(ngModel)]=\"arg.value.value\" \n                  [placeholder]=\"arg.value.default\" \n                  (change)=\"argDidChange(arg.value,$event)\" \n                  (blur)=\"argDidChange(arg.value,$event)\" \n                  (focus)=\"argDidFocus(arg.value,$event)\">\n        </div>\n\n        <!-- CELL: reset -->\n        <div class=\"tal-problem-widget-api-args-row-actions\">\n          <button pButton class=\"p-button\" icon=\"pi pi-trash\" (click)=\"argDidReset(arg.value,$event)\"\n            title=\"Reset to default\" pTooltip=\"Reset to default\"></button>\n        </div>\n      </div>\n\n      <!-- regex -->\n      <div class=\"tal-problem-widget-api-args-subrow\" [id]=\"'args-regex-panel-'+arg.value.key\" style=\"display:none; cursor: pointer;\" (dblclick)=\"toggleRegexFormat(arg.value,$event)\" >\n        <div class=\"tal-problem-widget-api-args-subrow-regexpr format-regex-simple\" [id]=\"'args-regex-'+arg.value.key\" >{{this.clenupRegex(arg.value.regex)}}</div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n    \n\n\n","import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { AutoComplete } from 'primeng/autocomplete';\nimport { ApiService } from 'src/app/services/api-service/api.service';\nimport { AppTheme, ThemeService } from 'src/app/services/theme-service/theme.service';\n\n@Component({\n  selector: 'tal-topbar-widget',\n  templateUrl: './topbar-widget.component.html',\n  styleUrls: ['./topbar-widget.component.scss']\n})\nexport class TopbarWidgetComponent implements OnInit {\n\n  @ViewChild(\"urlInput\") public urlInput?: AutoComplete;\n  @ViewChild(\"statusDot\") public statusDot?: ElementRef;\n  \n  \n\n  url;\n  urlCache:string[] = []\n  escapeRegEx = /[.*+?^${}()|[\\]\\\\]/g\n  urlInputClass = \"\"\n  \n  constructor( public readonly themeService: ThemeService, \n               public api: ApiService,\n               public zone: NgZone,\n             ) {\n    this.url = api.url;\n    this.urlCache = [...this.api.urlCache]\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  public get changeThemIcon(): string {\n    return this.themeService.currentTheme == AppTheme.dark ? 'pi-sun' : 'pi-moon';\n  }\n\n  public toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n\n  filterSuggestions(event:any) {\n    let query = event.query.replace(this.escapeRegEx, '\\\\$&')\n    let filter = new RegExp(\".*\"+query+\".*\")\n    let urlCache:string[] = []\n    this.api.urlCache.forEach( (url:string) => {\n      if(url.match(filter)){\n        urlCache.push(url)\n      }\n    });\n    this.urlCache=urlCache\n  }\n\n  public changeURL(event:Event) {\n    let dot = this.statusDot!.nativeElement as HTMLElement\n    console.log(\"changeURL:dot:\", dot)\n    console.log(\"changeURL:event:\", event)\n    let url = this.url;\n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.setUrl(url) ){\n      dot.style.color = \"darkred\"\n      console.log(\"changeURL:setURL:failed\")\n    }else{\n      this.url = this.api.url;\n      console.log(\"changeURL:setURL:success\")\n      dot.style.color = \"green\"\n      this.urlCache = this.api.urlCache\n    }\n    \n    console.log(\"changeURL:urlCache:after:\", this.urlCache )\n    console.log(\"changeURL:url:\", this.url )\n  }\n\n  public removeURL(url:string, event:Event) {\n    if(event){ event.preventDefault();event.stopPropagation();event.stopImmediatePropagation(); }\n    \n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.removeFromCache(url) ){\n      console.log(\"changeURL:removeURL:done\")\n    }\n    this.urlCache = this.api.urlCache\n    \n\n\n    console.log(\"changeURL:urlCache:after:\",this.urlCache)\n    console.log(\"changeURL:url:\",url)\n  }\n  \n}\n","<div class=\"tal-topbar\">\n    <div class=\"tal-brand\">\n        <h1>TALight Desktop</h1>\n    </div>\n\n    <div class=\"tal-buttons\">\n\n        <i #statusDot class=\"pi pi-circle-fill\" pTooltip=\"Status\"></i>\n\n        <p-autoComplete #urlInput class=\"top-bar-url-input p-inputtext-sm\"\n            (placeholder)=\"urlCache\"  [(ngModel)]=\"url\"\n            (change)=\"changeURL($event)\" (onBlur)=\"changeURL($event)\" [suggestions]=\"urlCache\"\n            (completeMethod)=\"filterSuggestions($event)\" [dropdown]=\"true\">\n\n            <ng-template let-url pTemplate=\"item\">\n                <div class=\"url-item\">\n                    <div class=\"url-item-label\">{{url}}</div>\n                    <button pButton icon=\"pi pi-trash\" pTooltip=\"Remove URL\" (click)=\"removeURL(url, $event)\"></button>\n                </div>\n            </ng-template>\n\n        </p-autoComplete>        \n\n        <button pButton icon=\"pi {{changeThemIcon}}\" (click)=\"toggleTheme()\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopbarWidgetComponent } from './topbar-widget/topbar-widget.component';\n\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    TopbarWidgetComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AutoCompleteModule,\n    InputTextModule,\n    TooltipModule,\n    ButtonModule,\n  ],exports:[\n    TopbarWidgetComponent\n  ]\n})\nexport class TopbarModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["ConnectionManagerService","constructor","router","api","isConnected","_isConnected","url","_url","value","setUrl","disconnect","navigate","factory","providedIn","createFs","IndexeddbFsDriver","databaseVersion","objectStoreName","databaseName","rootDirectoryName","rootDir","fs","options","ready","readFile","fullpath","binary","exists","createDirectory","res","writeFile","content","data","length","readDirectory","scanDirectory_recursive","scanDirectory","path","recursive","rootNode","name","split","reverse","folders","files","console","log","dirContent","key","element","childNode","fullPath","push","directories","delete","remove","FsServiceTest","useDriver","driverName","driver","getDriver","createTestFiles","PyodideMessageType","PyodideDriver","Worker","URL","import","meta","Map","TextEncoder","TextDecoder","worker","onmessage","event","didRecieve","mount","unmount","response","message","type","requestHandler","requestIndex","get","uid","removeRequest","msgSent","request","msgRecived","resolvePromise","Ready","didReceiveReady","InstallPackages","didReceiveInstallPackages","ExecuteCode","didReceiveExecuteCode","ExecuteFile","didReceiveExecuteFile","SubscribeStdout","didReceiveSubscribeStdout","SubscribeStderr","didReceiveSubscribeStderr","SendStdin","didReceiveSendStdin","CreateDirectory","didReceiveCreateDirectory","ReadDirectory","didReceiveReadDirectory","ScanDirectory","didReceiveScanDirectory","WriteFile","didReceiveWriteFile","ReadFile","didReceiveReadFile","Delete","didReceiveDelete","Exists","didReceiveExists","args","contents","toString","result","onStdout","onStderr","pathSent","pathRecived","replacer","ArrayBuffer","buffer","Uint8Array","Array","from","node","JSON","parse","jsonReplacer","sendMessage","timestamp","Date","now","promiseResolver","resultPromise","Promise","resolve","reject","set","postMessage","requestUID","installPackages","packages","executeCode","code","executeFile","subscribeStdout","enable","msg","undefined","subscribeStderr","sendStdin","parent","binDecoder","decode","toArrayBuffer","binEncoder","encode","timestap","getTime","seed","Math","floor","random","PythonCompilerService","projectFolder","configName","registerDriver","createPythonProject","configPath","configContent","stringify","PythonConfig","bot","readPythonConfig","config","runProject","PACKAGES","MAIN","NgZone","DemoViewComponent","zone","ngOnInit","onApiError","alert","refreshOutput","run","output","apiProblemList","onSuccess","problemList","req","onError","apiGetAttachment","problem_name","onAttachment","onAttachmentInfo","onData","GetAttachment","apiConnect","service","onConnectionBegin","onConnectionStart","onConnectionClose","Connect","cmdConnect","sendBinary","setTimeout","tal","isOpen","selectors","decls","vars","consts","template","i0","ctx","Tar","CodeEditorComponent","python","outputWidget","print","onStdin","onProblemChanged","selectedProblem","onServiceChanged","selectedService","onAttachments","unpack","idx","folder","file","fileExplorer","refreshRoot","selectFile","selectedFile","execBar","fileEditor","editorDidChange","saveFile","editorDidInput","useAPI","clearOutput","then","runConnectAPI","problem","exportArgs","tty","token","exportFiles","didConnectStart","didConnectBegin","didConnectClose","didConnectData","error","didConnectError","viewQuery","ElementRef","EventEmitter","marked","EditorType","MatchMethod","MatchType","EditorOptions","EditorOptionsMonaco","language","EditorOptionsBrowser","embedded","mime","FileAssociation","pattern","editorType","None","editorOption","priority","matchMethod","Auto","matchType","match","parts","ext","splice","matchAll","associations","matches","forEach","association","sort","a","b","FileAssociationChoiceList","items","add","item","includes","bestMatch","FileEditorWidgetComponent","themeService","Code","Markdown","Archive","Browser","_selectedFile","selectEditor","openEditor","fileAssocList","markdownBox","markdownPreview","nativeElement","innerHTML","monacoOptions","monacoEditor","updateEditorOptions","browserOptions","iframe","browserEditor","header","body","btoa","daraurl","src","shouldHide","monacoEditorDidChange","onChange","emit","QueryList","OverlayPanel","ctx_r10","ctx_r12","ctx_r28","ctx_r31","ctx_r33","ctx_r36","ctx_r38","ctx_r40","ctx_r42","ctx_r56","ctx_r60","ctx_r62","ctx_r64","ctx_r66","FileExplorerWidgetComponent","confirmationService","emptyNode","bindCollapseEvent","test","root","change","rows","document","getElementsByClassName","i","classList","contains","row","addEventListener","handleClickEvent","preventDefault","stopPropagation","target","newParent","safeCount","parentElement","toggle","closeAllContextMenus","panels","p","hide","onSelectFile","selectFolder","selectedFolder","openSettings","toggleHidden","showHidden","isVisibile","fsitem","isHidden","startsWith","startEditing","editingItem","editingValue","editingItemFolder","editingItemError","nameEditingElement","focus","saveEditing","trim","cancelEditing","editItemChange","existingFile","find","f","existingFolder","deleteFileClick","confirm","icon","accept","deleteFile","currentFolder","deleteFolderClick","deleteFolder","syncFilesystem","addNewItem","newItemValue","newItemFolder","newItemType","newItemError","newItemNameElement","cancelNewItem","saveNewItem","newItemChange","upload","HTMLInputElement","endsWith","arrayBuffer","importProject","tarball","export","treeToList","pack","tarname","triggerDownload","filename","createElement","blob","Blob","window","createObjectURL","style","display","download","href","appendChild","click","removeChild","revokeObjectURL","ServiceMenuEntry","descriptor","ProblemWidgetComponent","pm","ngOnDestroy","outputText","clenupRegex","re","text","replace","readableRegex","slice","last","argDidFocus","arg","idPanel","idRegex","panel","getElementById","regex","HTMLElement","color","argDidChange","issues","validateArg","default","argDidReset","toggleShowRegex","toggleRegexFormat","innerText","reloadProblemList","selectedArgs","servicesMenu","updateProblemsUI","menuServices","problemDesc","services","serviceDesc","RegExp","serviceLabel","serviceEntry","updateProblems","onProblemListUpdate","didSelectProblem","selectProblem","onProblemSelected","didSelectService","selectService","onServiceSelected","apiDownloadAttachment","info","outputs"],"sourceRoot":"webpack:///","x_google_ignoreList":[44]}