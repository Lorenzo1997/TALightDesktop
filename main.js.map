{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/app/routes.ts","./src/app/services/api-service/api.commands.ts","./src/app/services/api-service/api.packets.ts","./src/app/services/api-service/api.service.ts","./src/app/services/api-service/api.socket.ts","./src/app/services/clang-compiler-service/clang-compiler.service.ts","./src/app/services/connection-manager-service/connection-manager.service.ts","./src/app/services/fs-service/fs.service.test.ts","./src/app/services/fs-service/fs.service.ts","./src/app/services/notification-mananger-service/notification-manager.service.ts","./src/app/services/problem-manager-service/problem-manager.service.ts","./src/app/services/problem-manager-service/problem-manager.types.ts","./src/app/services/project-manager-service/project-manager.service.ts","./src/app/services/project-manager-service/project-manager.types.ts","./src/app/services/python-compiler-service/pydiode-driver.ts","./src/app/services/python-compiler-service/python-compiler.service.ts","./src/app/services/theme-service/theme.service.ts","./src/app/views/connect-view/connect-view.component.ts","./src/app/views/connect-view/connect-view.component.html","./src/app/views/demo-view/demo-view.ts","./src/app/views/demo-view/demo-view.component.html","./src/app/views/home-view/home-view.component.ts","./src/app/views/home-view/home-view.component.html","./src/app/views/select-problem-view/select-problem-view.component.ts","./src/app/views/select-problem-view/select-problem-view.component.html","./src/app/widgets/code-editor/code-editor.module.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.ts","./src/app/widgets/code-editor/code-editor/code-editor.component.html","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.ts","./src/app/widgets/code-editor/execbar-widget/execbar-widget.component.html","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.ts","./src/app/widgets/code-editor/file-editor-widget/file-editor-widget.component.html","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.ts","./src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component.html","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.ts","./src/app/widgets/code-editor/monaco-editor-widget/monaco-editor-widget.component.html","./src/app/widgets/code-editor/output-widget/output-widget.component.ts","./src/app/widgets/code-editor/output-widget/output-widget.component.html","./src/app/widgets/code-editor/problem-widget/problem-widget.component.ts","./src/app/widgets/code-editor/problem-widget/problem-widget.component.html","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.ts","./src/app/widgets/topbar/topbar-widget/topbar-widget.component.html","./src/app/widgets/topbar/topbar.module.ts","./src/environments/environment.ts","./src/main.ts","ignored|/home/runner/work/TALightDesktop/TALightDesktop/node_modules/tar-web|fs"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n\n}\n","<div class=\"tal-page-container\">\n  <div class=\"tal-page-topbar\">\n    <tal-topbar-widget></tal-topbar-widget>\n  </div>\n  <div class=\"tal-page-content\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { routes } from './routes';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { FileUploadModule } from 'primeng/fileupload';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ScrollPanelModule } from 'primeng/scrollpanel';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { SplitterModule } from 'primeng/splitter';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { CodeEditorModule } from './widgets/code-editor/code-editor.module';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopbarModule } from './widgets/topbar/topbar.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeViewComponent,\n    ConnectViewComponent,\n    SelectProblemViewComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MonacoEditorModule.forRoot(),\n    RouterModule.forRoot(routes),\n    FormsModule,\n    InputTextModule,\n    InputSwitchModule,\n    DropdownModule,\n    FileUploadModule,\n    FormsModule,\n    InputTextModule,\n    TooltipModule,\n    ScrollPanelModule,\n    SelectButtonModule,\n    SplitterModule,\n    RadioButtonModule,\n    CodeEditorModule,\n    TopbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ConnectionManagerService } from '../services/connection-manager-service/connection-manager.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private readonly connectionManagerService: ConnectionManagerService,\n    private readonly router: Router,\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const isConnected: boolean = this.connectionManagerService.isConnected;\n\n    if (!isConnected) {\n      //this.router.navigate(['/connect']);\n    }\n    return true;\n    return isConnected;\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ConnectViewComponent } from './views/connect-view/connect-view.component';\nimport { HomeViewComponent } from './views/home-view/home-view.component';\nimport { SelectProblemViewComponent } from './views/select-problem-view/select-problem-view.component';\nimport { DemoViewComponent } from './views/demo-view/demo-view';\n\nexport const routes: Routes = [\n    /*\n    {\n        path: '',\n        redirectTo: '/home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'home',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n    */\n\n    {\n        path: '',\n        canActivate: [AuthGuard],\n        component: HomeViewComponent\n    },\n\n    /*\n    {\n        path: 'connect',\n        component: ConnectViewComponent\n    },\n\n    {\n        path: 'select-problem',\n        component: SelectProblemViewComponent\n    },\n    */\n    {\n        path: 'demo',\n        component: DemoViewComponent\n    },\n];","import { TALightSocket } from \"./api.socket\";\nimport { Packets } from \"./api.packets\";\n\nexport namespace Commands{\n\n    export class Command{\n      public tal: TALightSocket;\n      public url?:string;\n      public debug=false; \n      public onReciveHandshake?:(message:Packets.Reply.Handshake)=>void;\n      public onReciveBinary?:(message:string)=>void;\n      public onReciveUndecodedBinary?:(message:ArrayBuffer)=>void;\n      public onRecive?:(message:Packets.PacketsPayload)=>void; \n      public onClose?:()=>void;\n      public onError?:(error:any)=>void;\n  \n      constructor(url:string, decodeBinary?:boolean){\n        this.url = url;\n        this.tal = new TALightSocket(this.url);\n        if(decodeBinary === false) {this.tal.decode = decodeBinary;}\n\n        this.tal.onError = (error)=>{ this.didError(error); };\n        this.tal.onClose = ()=>{ this.didClose(); };\n        this.tal.onRecive = (payload)=> { this.didRecive(payload) }\n        this.tal.onReciveBinary = (payload)=> { this.didReciveBinary(payload) }\n        this.tal.onReciveUndecodedBinary = (payload)=> { this.didReciveUndecodedBinary(payload) }\n      }\n      \n      public run(){\n        let msg = new Packets.Request.Handshake();\n        this.tal.send(msg);\n      }\n\n      public sendBinary(data:string){\n        this.log(\"didSendBinary: \"+data);\n        this.tal.sendBinary(data);\n      }\n\n      public log(...args:any[]){\n        let prefix = this.constructor.name+\": \"\n        console.log(prefix, ...args);\n        \n        if (this.debug) alert(prefix + (args).join(\" \") );\n      }\n      \n      public didClose(){\n        this.log(\"didClose\");\n        if (this.onClose){ this.onClose();}\n      }\n  \n      public didError(error:any){\n        this.log(\"didError \",error);\n        if (this.onError){ this.onError(error);}\n      }\n\n      public didReciveBinary(payload:string){\n        this.log(\"didReciveBinary:\\n\"+payload);\n        if(this.onReciveBinary){this.onReciveBinary(payload)}\n      }\n\n      public didReciveUndecodedBinary(payload:ArrayBuffer){\n        this.log(\"didReciveUndecodedBinary:\\n\");\n        if(this.onReciveUndecodedBinary){this.onReciveUndecodedBinary(payload)}\n      }\n\n      public didRecive(payload:Packets.PacketsPayload){\n        this.log(\"didRecive\");\n        if(this.onRecive){ this.onRecive(payload) }\n        \n        let message = payload.getMessage(Packets.Reply.Handshake)\n        if (message){ this.didReciveHandshake(message); }\n      }\n\n      \n      public didReciveHandshake(message:Packets.Reply.Handshake){\n        this.log(\"didRecieveHandshake\");\n        if (this.onReciveHandshake) { this.onReciveHandshake(message); }\n      }\n    }\n\n    export class ProblemList extends Command{\n      public onRecieveProblemList?:(message:Packets.Reply.MetaList)=>void\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.MetaList();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.MetaList);\n        if (message){ this.didReciveProblemList(message); }\n      }\n        \n      public didReciveProblemList(message:Packets.Reply.MetaList){\n        this.log(\"onRecieveProblemList\");\n        if (this.onRecieveProblemList) { this.onRecieveProblemList(message); }\n      }\n    }\n\n    export class Attchment extends Command{\n      public onReciveAttachment?:(message:Packets.Reply.Attachment )=>void;\n      public onReciveAttachmentInfo?:(message:Packets.Reply.AttachmentInfo)=>void;\n\n      private msg:Packets.Request.Attachment;\n  \n      constructor(url:string, problem_name:string){\n        super(url, false);\n  \n        this.msg = new Packets.Request.Attachment(problem_name);\n      }\n  \n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n  \n        this.tal!.send(this.msg)\n      }\n\n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n\n        message = payload.getMessage(Packets.Reply.Attachment)\n        if (message){ this.didRecieveAttachment(message); }\n \n        message = payload.getMessage(Packets.Reply.AttachmentInfo)\n        if (message){ this.didRecieveAttachmentInfo(message);}\n        \n      }\n\n      public didRecieveAttachment(message: Packets.Reply.Attachment){\n        this.log(\"Attachment\");\n        if (this.onReciveAttachment ) { this.onReciveAttachment(message); }\n      }\n      \n      public didRecieveAttachmentInfo(message: Packets.Reply.AttachmentInfo){\n        this.log(\"AttachmentInfo\");\n        if (this.onReciveAttachmentInfo ) { this.onReciveAttachmentInfo(message); }\n      }\n      \n    }  \n    \n    export class Connect extends Command{ \n      files = new Map<string,string>()\n\n      public onReciveConnectBegin?:(message:Packets.Reply.ConnectBegin)=>void;\n      public onReciveConnectStart?:(message:Packets.Reply.ConnectStart)=>void;\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n      \n      private msg:Packets.Request.ConnectBegin;\n  \n      constructor(url:string, problem_name:string, service:string, args?:{}, tty?:boolean, token?:string, files?:Map<string,string>){\n        super(url);\n        if(files){this.files = files}\n        let fileArgNames = [...this.files.keys()]\n        this.msg = new Packets.Request.ConnectBegin(problem_name, service, args, tty, token, fileArgNames);\n      }\n\n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal.send(this.msg);\n      }\n      \n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n        message = payload.getMessage(Packets.Reply.ConnectBegin);\n        if (message){ this.didRecieveConnectBegin(message); }\n\n        message = payload.getMessage(Packets.Reply.ConnectStart)\n        if (message){ this.didRecieveConnectStart(message); }\n\n        message = payload.getMessage(Packets.Reply.ConnectStop)\n        if (message){ this.didRecieveConnectStop(message); }\n      }\n\n      public didRecieveConnectBegin(message: Packets.Reply.ConnectBegin){\n        this.log(\"didRecieveConnectBegin\");\n        if (this.onReciveConnectBegin ) { this.onReciveConnectBegin(message); }\n      }\n\n      public didRecieveConnectStart(message: Packets.Reply.ConnectStart){\n        this.log(\"didRecieveConnectStart\");\n        if (this.onReciveConnectStart ) { this.onReciveConnectStart(message); }\n      }\n      \n      public didRecieveConnectStop(message: Packets.Reply.ConnectStop){\n        this.log(\"didRecieveConnectStop\",message);\n        /* download result files */\n        \n        if (this.onReciveConnectStop ) { \n          this.onReciveConnectStop(message); \n        }\n      }\n\n      public sendConnectStop() {\n        this.tal.send(new Packets.Request.ConnectStop());\n        //this.tal.closeConnection();\n      }\n    }\n\n    export class CloseConnection extends Command{\n      public onReciveConnectStop?:(message:Packets.Reply.ConnectStop)=>void;\n\n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.ConnectStop();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.ConnectStop);\n        if (message){ this.didReciveConnectStop(message); }\n      }\n        \n      public didReciveConnectStop(message:Packets.Reply.ConnectStop){\n        this.log(\"didRecieveGameList\");\n        if (this.onReciveConnectStop) { this.onReciveConnectStop(message); }\n      }\n    }\n\n    /*\n  \n    export class GameList extends Command{\n      public onRecieveGameList?:(message:Packets.Reply.GameList)=>void\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.GameList();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameList)\n        if (message){ this.didReciveGameList(message); }\n      }\n        \n      public didReciveGameList(message:Packets.Reply.GameList){\n        this.log(\"didRecieveGameList\");\n        if (this.onRecieveGameList) { this.onRecieveGameList(message); }\n      }\n    }\n\n    export class GameDescription extends Command{\n      public onRecieveGameDescription?:(message:Packets.Reply.GameDescription)=>void\n      private msg:Packets.Request.GameDescription;\n  \n      constructor(url:string, game:string){\n        super(url);\n        this.msg = new Packets.Request.GameDescription(game);\n      }\n\n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n\n        let msg = new Packets.Request.GameDescription();\n        this.tal.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameDescription)\n        if (message){ this.didReciveGameDescription(message); }\n      }\n        \n      public didReciveGameDescription(message:Packets.Reply.GameDescription){\n        this.log(\"didRecieveGameList\");\n        if (this.onRecieveGameDescription) { this.onRecieveGameDescription(message); }\n      }\n    }\n  \n    export class LobbyList extends Command{\n      public onReciveLobbyList?:(message:Packets.Reply.LobbyList)=>void;\n      \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        \n        let msg = new Packets.Request.LobbyList();\n        this.tal!.send(msg);\n      }\n\n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.LobbyList)\n        if (message){ this.didRecieveLobbyList(message);}\n      }\n        \n      public didRecieveLobbyList(message:Packets.Reply.LobbyList){\n        this.log(\"didRecieveLobbyList\");\n        if (this.onReciveLobbyList) { this.onReciveLobbyList(message); }\n      }\n    }\n  \n    export class NewLobby extends Command {\n      public onReciveNewLobby?:(message:Packets.Reply.GameNew)=>void;\n\n      private msg:Packets.Request.GameNew;\n  \n      constructor(url:string, lobby_name?:string, game_name?:string, num_palyer?:number, num_bots?:number, timeout?:number, args?:{}, password?:string){\n        super(url);\n        this.msg = new Packets.Request.GameNew(lobby_name, game_name, num_palyer, num_bots, timeout, args, password);\n      }\n      \n      public override didRecive(payload:Packets.PacketsPayload){\n        super.didRecive(payload);\n        let message = payload.getMessage(Packets.Reply.GameNew)\n        if (message){\n          this.didRecieveNewLobby(message);\n        }\n      }\n        \n      public didRecieveNewLobby(message:Packets.Reply.GameNew){\n        this.log(\"didRecieveNewLobby\");\n        if (this.onReciveNewLobby) { this.onReciveNewLobby(message); }\n      }\n            \n      public override didReciveHandshake( handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal!.send(this.msg);\n      }\n    }\n  \n    export class Connect extends Command{\n      public onReciveJoin?:(message:Packets.Reply.LobbyJoinedMatch )=>void;\n      public onReciveUpdate?:(message:Packets.Reply.LobbyUpdate)=>void;\n      public onReciveStart?:(message:Packets.Reply.MatchStarted)=>void;\n      public onReciveEnd?:(message:Packets.Reply.MatchEnded) => void;\n      \n      private msg:Packets.Request.LobbyJoinMatch;\n  \n      constructor(url:string, lobby_id:string, player_name:string, lobby_password?:string){\n        super(url);\n        this.msg = new Packets.Request.LobbyJoinMatch(lobby_id, player_name, lobby_password);\n      }\n\n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n        this.tal.send(this.msg);\n      }\n      \n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n        message = payload.getMessage(Packets.Reply.LobbyJoinedMatch);\n        if (message){ this.didRecieveJoin(message); }\n\n        message = payload.getMessage(Packets.Reply.LobbyUpdate)\n        if (message){ this.didRecieveUpdate(message); }\n\n        message = payload.getMessage(Packets.Reply.MatchStarted)\n        if (message){ this.didRecieveStart(message); }\n        \n        message = payload.getMessage(Packets.Reply.MatchEnded)\n        if (message){ this.didRecieveEnd(message); }\n      }\n\n      public didRecieveJoin(message: Packets.Reply.LobbyJoinedMatch){\n        this.log(\"didRecieveJoin\");\n        if (this.onReciveJoin ) { this.onReciveJoin(message); }\n      }\n\n      public didRecieveUpdate(message: Packets.Reply.LobbyUpdate){\n        this.log(\"didRecieveUpdate\");\n        if (this.onReciveUpdate ) { this.onReciveUpdate(message); }\n      }\n      \n      public didRecieveStart(message: Packets.Reply.MatchStarted){\n        this.log(\"didRecieveStart\");\n        if (this.onReciveStart ) { this.onReciveStart(message); }\n      }\n      \n      public didRecieveEnd(message: Packets.Reply.MatchEnded){\n        this.log(\"didRecieveEnd\");\n        this.tal.closeConnection();\n        if (this.onReciveEnd ) { this.onReciveEnd(message); }\n      }\n    }\n\n    export class Spectate extends Command{\n      public onReciveJoin?:(message:Packets.Reply.SpectateJoined )=>void;\n      public onReciveUpdate?:(message:Packets.Reply.LobbyUpdate)=>void;\n      public onReciveStart?:(message:Packets.Reply.SpectateStarted)=>void;\n      public onReciveSync?:(message:Packets.Reply.SpectateSynced) => void;\n      public onReciveEnd?:(message:Packets.Reply.SpectateEnded) => void;\n\n      private msg:Packets.Request.SpectateJoin;\n  \n      constructor(url:string, lobby_id:string){\n        super(url);\n  \n        this.msg = new Packets.Request.SpectateJoin(lobby_id);\n      }\n  \n      public override didReciveHandshake(handshake: Packets.Reply.Handshake){\n        super.didReciveHandshake(handshake);\n  \n        this.tal!.send(this.msg)\n      }\n\n      public override didRecive(payload: Packets.PacketsPayload): void {\n        super.didRecive(payload);\n        let message;\n\n        message = payload.getMessage(Packets.Reply.SpectateJoined)\n        if (message){ this.didRecieveJoin(message); }\n\n        message = payload.getMessage(Packets.Reply.LobbyUpdate)\n        if (message){ this.didRecieveUpdate(message);}\n        \n        message = payload.getMessage(Packets.Reply.SpectateStarted)\n        if (message){ this.didRecieveStart(message);}\n\n        message = payload.getMessage(Packets.Reply.SpectateSynced)\n        if (message){ this.didRecieveStart(message);}\n\n        message = payload.getMessage(Packets.Reply.SpectateEnded)\n        if (message){ this.didRecieveEnd(message);}\n\n      }\n\n      public didRecieveJoin(message: Packets.Reply.LobbyJoinedMatch){\n        this.log(\"LobbyJoinedMatch\");\n        if (this.onReciveJoin ) { this.onReciveJoin(message); }\n      }\n\n      public didRecieveUpdate(message: Packets.Reply.LobbyUpdate){\n        this.log(\"LobbyUpdate\");\n        if (this.onReciveUpdate ) { this.onReciveUpdate(message); }\n      }\n      \n      public didRecieveStart(message: Packets.Reply.MatchStarted){\n        this.log(\"MatchStarted\");\n        if (this.onReciveStart ) { this.onReciveStart(message); }\n      }\n      \n      public didRecieveEnd(message: Packets.Reply.MatchEnded){\n        this.log(\"MatchEnded\");\n        this.tal.closeConnection();\n        if (this.onReciveEnd ) { this.onReciveEnd(message); }\n      }\n    }\n    */\n  }","\nexport namespace Packets{\n\n    export class PacketsPayload{\n      public data;\n      public packets:any;\n      public packetTypes:string[] = []\n\n      constructor(data:string){\n        this.data = data;\n        this.packets = JSON.parse(this.data);\n        for (var pkttype in this.packets) {\n          this.packetTypes.push(pkttype)\n        }\n\n        if(this.packetTypes.length === 3 &&\n          this.packetTypes.indexOf(\"name\") === 0 &&\n          this.packetTypes.indexOf(\"size\") === 1 &&\n          this.packetTypes.indexOf(\"hash\") === 2\n          ) {\n            this.packetTypes = [\"AttachmentInfo\"];\n            this.packets = {\"AttachmentInfo\" : this.packets};\n        }\n      }\n\n      public getMessage<T extends Message>( packetClass: new (packet?: any)=>T ):T | null{\n        let packetType = packetClass.name;\n        for (var pkttype in this.packets) {\n          if (pkttype != packetType){ continue; }\n          let packet = this.packets[packetType] \n          let message = new packetClass(packet);\n          return message;\n        }        \n        return null;\n      }\n\n    }\n  \n    export class Message{\n      constructor(packet?: any){\n        if(packet){this.fromPacket(packet);}\n      }\n\n      public static dataToPayload(data: string): PacketsPayload{\n        let raw = JSON.parse(data);\n        return raw;\n      }\n      \n      public static findPacketName(msgClasses: Array<string>, packet: any): string{\n        var msgClass = \"\";\n        msgClasses.forEach((msgName) => {\n          if(msgName in JSON.parse(packet)){\n            msgClass = msgName;\n          }\n        });\n  \n        return msgClass;\n      }\n\n\n\n      public messageName():string{\n        return this.constructor.name;\n      }\n  \n      public toPacketWithName(messageName: string){\n        const packet = { [messageName]:this };\n        return packet;\n      }\n\n      public toPacket(): any{\n        const packetName = this.messageName();\n        const packet = { [packetName]:this };\n        return packet;\n      }\n      \n      public fromPacket(packet:any){\n        for (var msgField in this) {\n          if (! (msgField in packet)){ continue; }\n          let value = packet[msgField];\n          const varType = typeof value;\n          \n          if (varType in [\"function\",\"undefined\",\"symbol\"] ){ continue; }\n  \n          if (varType === \"object\") {\n            this[msgField] = Object.assign(value);\n          } else {\n            this[msgField] = value;\n          }\n        }\n        return true;\n      }\n    }\n  \n  export class Meta {\n    constructor(data?: any){\n      //console.log(\"Meta:constructor:\", data)\n      this.public_folder = data.public_folder\n      let servicesMap = new Map<string,Service>()\n      for(var attr in data.services){\n        let value = data.services[attr];\n        //console.log(\"Meta:constructor:services:\",attr,value)\n        let service = new Service(value);\n        servicesMap.set(attr,service)\n      }\n      this.services = servicesMap\n    }\n    public public_folder: string = \"\";\n    public services: Map<string, Service> = new Map<string, Service>();\n  }\n\n  export class Service {\n    constructor(data?: any){\n      //console.log(\"Service:constructor:\", data)\n      this.evaluator = data.evaluator\n      this.files = data.files\n      let argsMap = new Map<string,Arg>()\n      for(var attr in data.args){\n        let value = data.args[attr];\n        let arg = new Arg(value);\n        argsMap.set(attr,arg)\n      }\n      this.args = argsMap\n    }\n    public evaluator: string[] = [];\n    public args?:Map<string, Arg>;\n    public files?: string[];\n  }\n\n  export class Arg {\n    constructor(data: any){\n      this.regex = data.regex\n      this.default = data.default\n    }\n    public regex: RegExp;\n    public default: string;\n  }\n\n\n\n    \n  // Requests ---------------------------------\n  export namespace Request{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"rtal\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {}\n    export class  Attachment extends Message{\n      public problem: String;\n\n      constructor(problem_name:String) {\n        super();\n        this.problem = problem_name;\n      }\n    }\n    export class ConnectBegin extends Message {\n      public problem:string = \"\";\n      public service:string = \"\";\n      public args:{} = {};\n      public tty:boolean = false;\n      public token:string|null = null;\n      public files:string[] = [];\n\n      constructor(problem:string, service:string, args:{}={}, tty:boolean=false, token:string|null = null, files:string[] = []) {\n        super();\n        this.problem = problem;\n        this.service = service;\n        this.args = args;\n        this.tty = tty;\n        this.token = token;\n        this.files = files;\n      }\n    }\n    export class ConnectStop extends Message {\n\n    }\n  }\n\n\n  export namespace Reply{\n    export class Message extends Packets.Message {}\n    export class Handshake extends Message {\n      public magic:string = \"\";\n      public version:number = 2;\n    }\n    export class MetaList extends Message {\n      constructor(packet?: any){\n        super(packet)\n        let metaMap = new Map<string,Meta>()\n        for(var attr in packet.meta){\n          let value = packet.meta[attr];\n          let meta = new Meta(value);\n          metaMap.set(attr,meta)\n        }\n        this.meta = metaMap\n      }\n      public meta:Map<string, Meta> = new Map<string, Meta>();\n    }\n    export class  Attachment extends Message{\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class AttachmentInfo extends Message {\n      public name:string = \"\";\n      public size:string = \"\";\n      public hash:string = \"\";\n    }\n    export class ConnectBegin extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n    export class ConnectStart extends Message {\n      public status = {\"Ok\": undefined, \"Err\": \"\"};\n    }\n    export class ConnectStop extends Message {\n      public status = {\"Ok\": [\"\"], \"Err\": \"\"};\n    }\n\n\n\n    export class Result {\n      Ok: string[]|null = null\n      Err: string = \"\"\n      constructor(data:any){\n        if(\"Ok\" in data){this.Err = data[\"Ok\"]}\n        if(\"Err\" in data){this.Err = data[\"Err\"]}\n      }\n      \n      success(){ return this.Err == \"\" }\n    }\n    /*\n    Attachment { status: Result<(), String> },\n    ConnectBegin { status: Result<Vec<String>, String> },\n    ConnectStart { status: Result<(), String> },\n    ConnectStop { status: Result<Vec<String>, String> }\n    */\n\n    \n  }\n}\n\n\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { Packets } from './api.packets';\nimport { Commands } from './api.commands';\n\nexport class Meta extends Packets.Meta{}\nexport interface AttachmentInfo extends Packets.Reply.AttachmentInfo{}\n\n\nexport enum ApiState{\n  Idle,\n  Good,\n  Maybe,\n  Bad\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private _url;\n  urlCache;\n  lastState = ApiState.Idle\n\n  public onApiStateChange = new EventEmitter<ApiState>();\n\n  constructor(){\n    this._url = 'wss://ta.di.univr.it/sfide'\n    this.urlCache = [\n      'wss://ta.di.univr.it/sfide',\n      'ws://localhost:8008/',\n      'wss://ta.di.univr.it/rtal',\n    ]\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public addToCache(url:string){\n    this.removeFromCache(url)\n    this.urlCache.unshift(url)\n  }\n\n  public removeFromCache(url:string){\n    let idx = this.urlCache.indexOf(url)\n    if(idx != -1){\n      this.urlCache.splice(idx,1)\n      return true\n    }\n    return false\n  }\n\n  public setUrl(value: string): boolean {\n    let url;\n    console.log(\"setUrl\")\n    try{ url = new URL(value); }catch(_){ return false; }\n    if(!( url.protocol == 'ws:' || url.protocol == 'wss:' )){ return false; }\n    console.log(\"setUrl:valid!\")\n    this.resetAllConnections()\n    this._url = url.href\n    console.log(\"setUrl:href:\",url.href)\n    this.addToCache(this._url)\n    return true;\n  }\n\n  public updateState(state: ApiState){\n    if(this.lastState != state){\n      this.lastState = state\n      this.onApiStateChange.emit(state)\n    }\n  }\n\n  public stateIdle(){ this.updateState(ApiState.Idle); }\n  public stateGood(){ this.updateState(ApiState.Good); }\n  public stateMaybe(){ this.updateState(ApiState.Maybe); }\n  public stateBad(){ this.updateState(ApiState.Bad); }\n\n  public resetAllConnections(){\n    //TODO: is it necessary to kill all old connection upon URL change ? \n  }\n\n  public problemList(onResult:(problemList:Map<string, Meta>)=>void, onError?: (error: string)=>void){\n    this.stateMaybe()\n    console.log(\"problemList:\")\n    let cmdList = new Commands.ProblemList(this._url);\n    cmdList.onRecieveProblemList = (message)=>{\n      console.log(\"problemList:onRecieveProblemList:\",message)\n      this.stateGood()\n      if(onResult){onResult(message.meta)}\n    }\n    cmdList.onError = (error) => {\n      this.stateBad();\n      console.log(\"problemList:onError:\")\n      if(onError) {onError(error)} \n    }\n    cmdList.run();\n    return cmdList;\n  }\n\n  public GetAttachment( \n    problemName:string, \n    onAttachment?: ()=>void,\n    onAttachmentInfo?: (message: Packets.Reply.AttachmentInfo)=>void, \n    onData?: (data: ArrayBuffer)=>void,\n    onError?: (error: string)=>void\n  ){\n    this.stateMaybe()\n    let cmdGet = new Commands.Attchment(this._url, problemName);\n\n    cmdGet.onReciveAttachment = (message) => { \n      if (message.status.Err){\n        this.stateBad() \n        if (cmdGet.onError) { cmdGet.onError(\"Failed to receive attachment: \"+message.status.Ok) } \n        return;\n      }\n      this.stateGood() \n      if(onAttachment) { onAttachment() } \n    }\n    \n    cmdGet.onReciveAttachmentInfo = (message) => {\n      this.stateGood();\n      if(onAttachmentInfo) { onAttachmentInfo(message) } \n    }\n    \n    cmdGet.onReciveUndecodedBinary = (message) => { \n      this.stateGood();\n      if(onData) { onData( message )} \n    }\n\n    cmdGet.onError = (error) => {\n      this.stateBad();\n      if(onError) {onError(error)} \n    }\n\n    cmdGet.run();\n    return cmdGet;\n  }\n\n  public Connect (\n    problem_name:string, \n    service:string, \n    args?:{}, \n    tty?:boolean, \n    token?:string, \n    files?:Map<string, string>,\n    onConnectBegin?:(message:string[] )=>void,\n    onConnectStart?:()=>void,\n    onConnectStop?:(message:string[])=>void,\n    onData?: (data:string)=>void,\n    onError?:(data:string)=>void\n  ){\n    this.stateMaybe()\n    let cmdConnect = new Commands.Connect(this._url, problem_name, service, args, tty, token, files);\n\n    cmdConnect.onReciveConnectBegin = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to begin connection: \"+message.status.Err); } \n        return;\n      }\n      this.stateGood() \n      if(onConnectBegin && message.status.Ok) { onConnectBegin(message.status.Ok) }\n    }\n\n    cmdConnect.onReciveConnectStart = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to start connect: \"+message.status.Err)  } \n        return;\n      }\n      this.stateGood() \n      if(onConnectStart) { onConnectStart() }\n    }\n\n    cmdConnect.onReciveConnectStop = (message) => { \n      if (message.status.Err){ \n        this.stateBad() \n        if (cmdConnect.onError) { cmdConnect.onError(\"Failed to stop connection: \"+message.status.Err)  } \n        return;\n      }\n      this.stateGood() \n      if(onConnectStop && message.status.Ok) { onConnectStop(message.status.Ok) }\n    }\n    \n    cmdConnect.onReciveBinary = (message) => { \n      this.stateGood();\n      if(onData) { onData(message)} \n    }\n    cmdConnect.onError = (error) => { \n      this.stateBad();\n      if(onError) {onError(error)} \n    }\n    \n    cmdConnect.run();\n    return cmdConnect;\n  }\n\n}\n","import { WebSocketSubject } from 'rxjs/webSocket';\nimport { Packets } from './api.packets';\n\n\nexport class TALightSocket{\n  public url = 'ws://localhost:8008';\n  public ws?:WebSocketSubject<any>;\n  \n  public decode = true;\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n  \n  public onError?:(error:string)=>void;\n  public onClose?:()=>void;\n  public onRecive?:(payload: Packets.PacketsPayload) => void;\n  public onReciveBinary?:(payload: string) => void;\n  public onReciveUndecodedBinary?:(payload: ArrayBuffer) => void;\n      \n  constructor(url:string){\n    this.url = url;\n\n    if (!this.ws || this.ws.closed ){\n      this.ws = new WebSocketSubject({\n        url: this.url,\n        binaryType: \"arraybuffer\",\n        deserializer: msg => msg,\n        serializer: msg => {\n          if (msg instanceof ArrayBuffer)\n            return msg;\n          else\n            return JSON.stringify(msg);\n        }\n      });\n      this.ws.subscribe({\n        next: (payload:any)=>{ this.didRecieve(payload) },\n        error: (error:any)=>{ this.didError(error) },\n        complete: ()=>{ this.didClose() },\n      });\n\n      console.log(\"Created new socket\");\n    }\n  }\n\n  public isOpen():boolean{\n    return (!!this.ws) && !this.ws.closed;\n  }\n\n  public closeConnection(){\n    this.ws!.unsubscribe();\n    this.ws!.complete();\n    console.log(\"TALightSocket:closeConnection\");\n  }\n  \n  public send(request: Packets.Request.Message){\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:send: unable to send, socket is null\")\n      return false\n    } \n    \n    let packet = request.toPacket();\n    this.ws!.next(packet);\n\n    return true;\n  }\n\n  public sendBinary(data: string) {\n    let payload = this.binEncoder.encode(data);\n    if (!this.isOpen()) {\n      this.didError(\"TALightSocket:sendBinary: unable to send, socket is null\")\n      return false\n    } \n    console.log(\"TALightSocket:sendBinary: sending payload \\n\"+payload);\n    this.ws!.next(payload.buffer);\n    return true;\n  }\n  \n  public didRecieve(payload:MessageEvent){ // Called whenever there is a message from the server.\n    let data = payload.data;\n    console.log(\"TALightSocket:didRecieve:type: \"+payload.constructor.name+\"<\"+payload.data.constructor.name+\">\" )\n\n    if(typeof data === \"object\" && data instanceof ArrayBuffer) {\n      if(this.decode) {\n        if (data.byteLength == 0) {return}\n        data = this.binDecoder.decode(data);\n        console.log(\"TALightSocket:didRecieve:binary:\\n\"+data)\n        if(this.onReciveBinary){ this.onReciveBinary( data );}\n      } \n      else {\n        if(this.onReciveUndecodedBinary){ this.onReciveUndecodedBinary( data );}\n      }\n    } else{\n      let packetsPayload = new Packets.PacketsPayload(data)\n      console.log(\"TALightSocket:didRecieve:packets: \"+packetsPayload.packetTypes)\n      if(this.onRecive){ this.onRecive( packetsPayload ); }\n      \n    }\n  }\n\n  public didError(error:any) { \n    //let errorMsg = JSON.stringify(err);\n    if (this.onError) { this.onError(error );}\n  }\n\n  public didClose() { \n    this.closeConnection();\n    if (this.onClose) { this.onClose();}\n  }\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClangCompilerService {\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../api-service/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectionManagerService {\n  private _url: string = \"\";\n  private _isConnected: boolean = false;\n\n  constructor( private readonly router: Router, private api:ApiService ) { }\n\n  public get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  public get url(): string {\n    return this._url;\n  }\n\n  public set url(value: string) {\n    if(this.api.setUrl(value)){\n      this._url = value;\n    }\n  }\n\n  public disconnect(): void {\n    this._isConnected = false;\n    this.router.navigate(['/home']);\n  }\n\n}\n","import { resolve } from 'dns';\nimport { createFs } from 'indexeddb-fs';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver } from './fs.service';\n\n\nexport class IndexeddbFsDriver implements FsServiceDriver {\n  public fs;\n  public rootDir = \"root\"\n  public options = {\n    databaseVersion:    1,\n    objectStoreName:    'files',\n    databaseName:       'indexeddb',\n    rootDirectoryName:  this.rootDir\n  }\n\n  constructor() { \n    this.fs = createFs(this.options);\n  }\n\n  async ready(): Promise<boolean>{\n    return true;\n  }\n\n  async readFile(fullpath:string, binary: boolean=true): Promise<string|null>{\n    if (!(await this.fs.exists(fullpath)) ) {return null;}\n    return this.fs.readFile(fullpath);\n  }\n\n  async createDirectory(fullpath:string): Promise<boolean>{\n    let res = await this.fs.createDirectory(fullpath);\n    return await this.fs.exists(fullpath);\n  }\n\n  async writeFile(fullpath:string, content:string): Promise<number>{\n    let res = await this.fs.writeFile(fullpath, content);\n    if (!(await this.fs.exists(fullpath)) ) {return -1;}\n    return res.data.length;\n  }\n\n  async readDirectory(fullpath:string):Promise<FsNodeFolder|null>{\n    if ( await this.fs.exists(fullpath) ) {\n      return this.scanDirectory_recursive(fullpath);\n    }\n    return null;\n  }\n\n  async mount(path: string): Promise<boolean> {\n    //TODO\n    return new Promise<boolean>(resolve=>true);\n  }\n  \n  async unmount(path: string): Promise<boolean> \n  {\n    //TODO\n    return new Promise<boolean>(resolve=>true);\n  }\n  \n  async scanDirectory(path?:string):Promise<FsNodeFolder>{\n    if (!path){path = this.rootDir;}\n    return this.scanDirectory_recursive(path, true)\n  }\n\n  async scanDirectory_recursive(path:string, recursive=false):Promise<FsNodeFolder>{\n    let rootNode:FsNodeFolder = {\n      name: path.split(\"/\").reverse()[0]+\"/\",\n      path: path,\n      folders: [],\n      files: []\n    };\n    console.log(\"scanDirectory:dir: \",path);\n    \n    let dirContent = await this.fs.readDirectory(path)\n     \n\n    for(let key in dirContent.files){\n      let element = dirContent.files[key]\n      let childNode:FsNodeFile = {\n        name: element.name,\n        path: element.fullPath,\n        content: \"\"\n        //depth: depth + 1,\n      }\n      rootNode.files.push(childNode);\n      console.log(\"scanDirectory:file: \",element.fullPath);\n    }\n\n    for(let key in dirContent.directories){\n      let element = dirContent.directories[key]\n      if (recursive){\n        rootNode.folders.push(await this.scanDirectory_recursive(element.fullPath, true));\n      }\n      else{\n        let childNode:FsNodeFolder = {\n          name: element.name,\n          path: element.fullPath,\n          //depth: depth + 1,\n          folders: [],\n          files: []\n        }\n        rootNode.folders.push(childNode);\n      }\n    }\n\n    return rootNode;\n  }\n\n  async delete(fullpath:string): Promise<boolean>{\n    if(!this.exists(fullpath)) return true;\n    await this.fs.remove(fullpath);\n    return !this.exists(fullpath);\n  }\n\n  async exists(fullpath:string): Promise<boolean>{\n    return this.fs.exists(fullpath);\n  }\n\n}\n\n\nexport class FsServiceTest{\n  \n  public fs;\n  public driver;\n  public driverName;\n  constructor( fs:FsService, useDriver?:string ){\n    this.fs = fs;\n     \n    this.driverName = useDriver ?? 'example';\n    this.driver = fs.getDriver(this.driverName);\n    //alert('driverName:'+this.driver)\n  }\n  \n  \n\n  async createTestFiles(){\n    \n    if (!this.driver){return;}\n    //alert('createTestFiles: before: '+this.driver.constructor.name);\n    await this.driver.createDirectory('/src');\n    await this.driver.createDirectory('/assets');\n    await this.driver.createDirectory('/assets/data');\n    await this.driver.createDirectory('/assets/img');\n    await this.driver.writeFile('/main.py',           'import src/testclass.py\\nprint(\"hello\");');\n    await this.driver.writeFile('/mainC.py',           'import src/testclass.py\\nprint(\"helloC\");');\n    await this.driver.writeFile('/src/__init__.py',   '');\n    await this.driver.writeFile('/src/testclassA.py',  'class testclassA: pass');\n    await this.driver.writeFile('/src/testclassB.py',  'class testclassB: pass');\n    await this.driver.writeFile('/src/testclassC.py',  'class testclassC: pass');\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { IndexeddbFsDriver } from './fs.service.test';\n\nexport class FsNodeList extends Array<FsNodeFile|FsNodeFolder>{};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FsService {\n  public drivers = new Map<string,FsServiceDriver>();\n  public static EmptyFolder = {name:\"\", path: \"/\", files:[], folders:[]} as FsNodeFolder\n  public static EmptyFile = {name:\"\", path: \"/\", content:\"\"} as FsNodeFile\n  \n  constructor(){\n     //TODO: Remove test driver FS from constructor\n    this.registerDriver('example', new IndexeddbFsDriver());   \n  }\n\n  registerDriver(name:string, driver: FsServiceDriver):boolean{\n    //if (name in this.drivers){return false;}\n    //alert('register: '+driver)\n    this.drivers.set(name, driver);\n    //alert('register: '+driver.constructor.name+' | all: '+this.getDriverNames())\n    return true;\n  }\n\n  getDriver(name:string): FsServiceDriver | undefined{\n    //alert(name + ' '  + this.getDriverNames() )\n    if ( this.drivers.has(name) ){return this.drivers.get(name);}\n    alert(name + ' NOT found in: '  + this.getDriverNames() + \" | getDriver: undefined !!!\" )\n    return undefined\n    \n  }\n\n  getDriverNames(){\n    return Array.from(this.drivers.keys());\n  }\n\n  treeToList(root:FsNodeFolder){\n    let items = new Array<FsNodeFile|FsNodeFolder>();\n    let queue = new Array<FsNodeFolder>();\n    \n    queue.push(root)\n    console.log('treeToList:root',root)\n    console.log('treeToList:queue:0:',queue.length)\n    while(queue.length > 0){\n      let dir = queue.shift()\n      console.log('treeToList:dir:',dir)\n      if(!dir){break;}\n      items = items.concat(dir.files, dir.folders)\n      queue = queue.concat(dir.folders)\n      console.log('treeToList:queue:',queue.length)\n    }\n    return items;\n  }\n}\n\n\nexport class Tar{\n  public static tarstream = require('tar-web')\n  public static b4a = require('b4a')\n\n  public static binEncoder = new TextEncoder(); // always utf-8\n  public static binDecoder = new TextDecoder(\"utf-8\");\n\n  static unpack(tarball: ArrayBuffer, cb: (files:FsNodeFile[],folders:FsNodeFolder[])=>void ){\n    var extract = this.tarstream.extract()\n\n    var files = new Array<FsNodeFile>();\n    var folders = new Array<FsNodeFolder>();\n    \n    \n    extract.on('entry', function(header:any, stream:any, next:()=>void) {\n      // header is the tar header\n      // stream is the content body (might be an empty stream)\n      // call next when you are done with this entry\n\n      console.log('Tar:unpack:entry:header',header)\n      console.log('Tar:unpack:entry:stream',stream)\n\n      let fullpath = header.name;\n      let filetype = header.type;\n        \n      if ( filetype == 'file' ){\n        stream.on('data', (data:any)=>{\n          console.log('Tar:unpack:entry:data',data)\n          let filename = fullpath.split(\"/\").slice(0,-1)[0];\n          let file:FsNodeFile = {path:fullpath, name:filename, content: data}\n          console.log('Tar:unpack:entry:file',file, stream.read)\n          files.push(file)\n        })\n      }else if ( filetype == 'directory' ){\n        let dirname = fullpath;\n        if( dirname.slice(-1) == '/' ) {dirname = dirname.slice(0,-1)}\n        let forder:FsNodeFolder = {path:fullpath, name:dirname, files:[], folders:[] }\n        console.log('Tar:unpack:entry:forder',forder)\n        folders.push(forder)\n      }\n      \n      // ready for next entry\n      stream.on('end', () => {\n        console.log('Tar:unpack:entry:end'); \n        next()\n      })\n\n      stream.resume() // just auto drain the stream\n    })\n\n    extract.on('finish', function() {\n      console.log('Tar:unpack:finish')\n      console.log('Tar:unpack:files',files)\n      console.log('Tar:unpack:folders',folders)\n      files.sort((a,b)=>a.path.length - b.path.length)\n      folders.sort((a,b)=>a.path.length - b.path.length)\n      // all entries read\n      if(cb){cb(files,folders)}\n    })\n\n    console.log('Tar:unpack:tarball',tarball)\n    console.log('Tar:unpack:extract',extract)\n\n    let tarData = new Uint8Array(tarball)\n    extract.write(tarData, (errr:any)=>{console.log(\"Tar:unpack:extract:write:\",errr)})\n    extract.end()\n    \n    \n  }\n\n  static pack(items: Array<FsNodeFile|FsNodeFolder>, cb:(tarbell:ArrayBuffer)=>void){\n    let pack = this.tarstream.pack() // pack is a stream\n    console.log(pack);\n\n    var length = 0\n    var chunks = new Array<any>();\n    pack.on('data', (chunk:ArrayBuffer)=>{\n      console.log('data:chunk:prototype:',chunk.constructor.name)\n      console.log('data:chunk:',chunk)\n      length += chunk.byteLength\n      chunks.push(chunk)\n    })\n\n    pack.on('end', ()=>{\n      // Create a new array with total length and merge all source arrays.\n      console.log(chunks)\n      let data = new Uint8Array(length);\n      let offset = 0;\n      chunks.forEach(item => {\n        data.set(item, offset);\n        offset += item.length;\n      });\n      console.log(data)\n      if(cb){cb(data)}\n    })\n\n    let processItems = function(items: Array<FsNodeFile|FsNodeFolder>){\n      let item = items.shift()\n      let file = item as FsNodeFile;\n      console.log(\"Tar:pack:item\", item)\n      \n      let content;\n      let header;\n      if( file.content ){\n        console.log(\"Tar:pack:file\", file)\n        if ( file.content instanceof ArrayBuffer ){\n          content = new Uint8Array(file.content)\n        }else{\n          content = file.content\n        }\n        header = {name: file.path}\n      } else {\n        header = {name: item!.path, type:\"directory\"}\n      }\n      \n      pack.entry(header, content, (error:any) => {\n        console.log(\"Tar:pack:onFinishEntry\", error)\n        if (error) { throw error }\n        if ( items.length == 0 ){\n          pack.finalize()\n        }else{\n          processItems(items)\n        }\n      })\n\n    }\n\n    console.log(\"Tar:pack:processItems\", items)\n    processItems(items)\n  }\n\n  \n  \n\n}\n\nexport interface FsNode {\n  name: string;\n  path: string;\n}\n\nexport interface FsNodeFolder extends FsNode {\n  folders: FsNodeFolder[];\n  files: FsNodeFile[];\n}\nexport interface FsNodeFile extends FsNode {\n  content:string|ArrayBuffer\n}\n\n\n\n\n\nexport interface FsServiceDriver {\n  rootDir:string;\n  \n  mount(path: string): Promise<boolean>;\n  \n  unmount(path: string): Promise<boolean>;\n\n  ready(): Promise<boolean>;\n\n  createDirectory(fullpath:string): Promise<boolean>;\n\n  writeFile(fullpath:string, content:string|ArrayBuffer): Promise<number>;\n\n  readFile(fullpath:string, binary?: boolean): Promise<string|ArrayBuffer|null>;\n\n  readDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  scanDirectory(fullpath:string): Promise<FsNodeFolder|null>;\n\n  delete(fullpath:string): Promise<boolean>;\n\n  exists(fullpath:string): Promise<boolean>;\n}\n","import { EventEmitter, Injectable } from '@angular/core';\n\nexport enum NotificationType{\n  Debug = 'debug',\n  Info = 'info',\n  Warning = 'warning',\n  Error = 'error',\n  System = 'system',\n  Default = Info\n}\n\nexport class NotificationMessage{\n  constructor(\n    public title: string,\n    public message: string,\n    public type = NotificationType.Info,\n    public timestamp = Date.now()\n  ){}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationManagerService {\n  history = new Array<NotificationMessage>();\n  \n  constructor() { }\n\n  public onNotification = new EventEmitter<NotificationMessage>();\n\n  sendNotification(title:string, message: string, type=NotificationType.Info){\n    let notification = new NotificationMessage(title, message, type);\n    this.onNotification.emit(notification)\n    this.history.push(notification)\n  }\n\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { ApiService, } from '../api-service/api.service';\nimport { ArgDescriptor, ParamsMap, ProblemDescriptor, ProblemList, ProblemMap, ServiceDescriptor, ServiceMap } from './problem-manager.types';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemManagerService {\n  \n  selectedProblem?: ProblemDescriptor\n  selectedService?: ServiceDescriptor\n\n  problemList=new ProblemList();\n  problems=new ProblemMap();\n  services=new ServiceMap();\n  savedParams=new ParamsMap();\n  \n\n  public onProblemsChanged = new EventEmitter<boolean>();\n  public onError = new EventEmitter<any>();\n    \n  constructor(\n    public api:ApiService\n  ){}\n\n\n  updateProblems(){\n    this.selectedProblem=undefined;\n    this.selectedService=undefined;\n    this.problemList=[];\n    this.problems.clear();\n    this.services.clear();\n    this.onProblemsChanged.emit(true)\n\n    let req = this.api.problemList((problemMap) => {\n      console.log('apiProblemList:problemList:', problemMap)\n      problemMap.forEach(( problem, name )=>{\n        let problemDesc = new ProblemDescriptor(name, problem)\n        this.problemList.push(problemDesc)\n        this.problems.set(problemDesc.key,problemDesc);\n        problemDesc.services.forEach((serviceDesc)=>{\n          this.services.set(serviceDesc.key, serviceDesc)\n        })\n      })\n      this.onProblemsChanged.emit(false)\n    });\n    req.onError = (error) => { \n      this.onProblemsChanged.emit(false)\n      this.onError.emit(error) \n    };\n  }\n\n  \n  \n  selectProblem(selectedProblem: ProblemDescriptor){\n    this.selectedProblem = selectedProblem;\n    this.selectedService = undefined\n  }\n  \n\n  selectService(selectedService: ServiceDescriptor){\n    let name = selectedService.key;\n    if ( this.savedParams.has(name) ){\n      //TODO: Deep copy param values from  to selectedProblem object, to account for changes in the problem structure.\n      this.selectedService = this.savedParams.get(name)\n    }else{\n      this.savedParams.set(name,selectedService);\n      this.selectedService = selectedService;\n    }\n  }\n\n\n  validateArgs(service: ServiceDescriptor){\n    let issues = new Map<string,any>();\n    service.args.forEach((arg)=>{\n      let issue = this.validateArg(arg)\n      if(issue){issues.set(arg.key,issue)}\n    })\n    return issues;\n  }\n\n  validateArg(arg: ArgDescriptor){\n      //set\n      if (arg.regex === null){\n        console.log(\"validateArg:regex:null\")\n        return null\n      }\n\n      //valid re\n      let pattern;\n      try{\n        pattern = new RegExp(arg.regex)\n      }catch(error:any) { \n        console.log(\"validateArg:regex:invalid\")\n        return null;\n      }\n\n      //match\n      let match = arg.value.match(pattern)\n      console.log(\"validateArg:value:\",arg.value)\n      console.log(\"validateArg:pattern:\",pattern)\n      console.log(\"validateArg:match:\",match)\n      if(!match || match.length == 0){\n        console.log(\"validateArg:match:no\")\n        return arg.name + \": Validation error\";\n      }\n      console.log(\"validateArg:match:yes\")\n      return null;\n  }\n\n}\n","import { Packets } from '../api-service/api.packets';\nimport {  Meta } from '../api-service/api.service';\n\n\nexport class RawMap extends Map<string, Meta>{};\nexport class ProblemList extends Array<ProblemDescriptor>{};\nexport class ProblemMap extends Map<string, ProblemDescriptor>{};\nexport class ServiceMap extends Map<string, ServiceDescriptor>{};\nexport class ParamsMap extends ServiceMap{};\nexport class ArgsMap extends Map<string, ArgDescriptor>{};\nexport class FilesMap extends Map<string, FileDescriptor>{};\n\nexport class ProblemDescriptor {\n  public key;\n  public services=new ServiceMap();\n  \n  constructor(\n    public name:string, \n    meta:Meta,\n    ){\n      meta.services.forEach((service,serviceName)=>{\n        let serviceDesc = new ServiceDescriptor(serviceName,service,this)\n        this.services.set(serviceDesc.getKey(), serviceDesc)\n      })\n      this.key = this.getKey()\n    }\n\n    getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase()\n      key = key.replace(\"_+\",\"_\")\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      \n      return key\n    }\n}\n\nexport class ServiceDescriptor {\n  public key;\n  public args = new ArgsMap();\n  public evaluator;\n  public files = new FilesMap();\n  public filesOrder\n  constructor( public name:string, \n               service:Packets.Service,\n               public parent:ProblemDescriptor,\n    ){\n      this.evaluator = service.evaluator\n      \n      this.filesOrder = service.files ?? []\n      this.filesOrder.forEach(name =>{\n        let file = new FileDescriptor(name,this)\n        this.files.set(file.name,file)\n      })\n      service.args!.forEach((arg,argName)=>{\n        //console.log('ServiceDescriptor:constructor:arg', arg)\n        let argDesc = new ArgDescriptor(argName,arg,this)\n        this.args.set(argName,argDesc)\n      })\n      console.log('ServiceDescriptor:constructor:args', this.args)\n      this.key = this.getKey()\n    }\n\n    public getKey(){\n      let key = this.name.trim()\n      key = key.toLowerCase().trim()\n      key = key.replace(\" \",\"-\")\n      key = key.replace(\"[^a-z0-9_-]\",\"\")\n      key = key.replace(\"-+\",\"-\")\n      key = key.replace(\"_+\",\"_\")\n      return this.parent.getKey() + \"_\" + key\n    }\n\n    public exportArgs(){\n      let args:any = {}\n      this.args.forEach(arg=>{\n        args[arg.name]=arg.value\n      })\n      return args;\n    }\n\n    public exportFilesPaths(){\n      let fileArgs = new Map<string,string>();\n      this.filesOrder.forEach((name)=>{\n        let file = this.files.get(name)\n        if(!file || file.value==\"\"){return}\n        fileArgs.set(name,file.value)\n      })\n\n      return fileArgs\n    }\n}\n\nexport class ArgDescriptor{\n  public key;\n  public default: string\n  public regex: RegExp\n  public value: string\n  \n  constructor(\n    public name:string, \n    arg: Packets.Arg,\n    public parent: ServiceDescriptor\n    ){\n    this.default = arg.default\n    this.regex = arg.regex\n    this.value = arg.default\n    this.key = this.getKey()\n  }\n\n  getKey(){\n    let key = this.name.trim()\n    key = key.toLowerCase().trim()\n    key = key.replace(\" \",\"-\")\n    key = key.replace(\"[^a-z0-9_-]\",\"\")\n    key = key.replace(\"-+\",\"-\")\n    key = key.replace(\"_+\",\"_\")\n    return this.parent.getKey() + \"_\" + key\n  }\n}\n\nexport class FileDescriptor{\n  public key;\n  public value:string=\"\"; \n\n  constructor(\n    public name:string, \n    public parent: ServiceDescriptor\n    ){\n    this.key = this.getKey()\n  }\n\n  getKey(){\n    let key = this.name.trim()\n    key = key.toLowerCase().trim()\n    key = key.replace(\" \",\"-\")\n    key = key.replace(\"[^a-z0-9_-]\",\"\")\n    key = key.replace(\"-+\",\"-\")\n    key = key.replace(\"_+\",\"_\")\n    return this.parent.getKey() + \"_\" + key\n  }\n}\n\n\n","import { EventEmitter, Injectable, Input } from '@angular/core';\nimport { ApiService } from '../api-service/api.service';\nimport { ClangCompilerService } from '../clang-compiler-service/clang-compiler.service';\nimport { FsService } from '../fs-service/fs.service';\nimport { PyodideDriver } from '../python-compiler-service/pydiode-driver';\nimport { PythonCompilerService } from '../python-compiler-service/python-compiler.service';\nimport { ProjectEnvironment, ProjectType } from './project-manager.types';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectManagerService {\n  \n  projects = new Array<ProjectEnvironment>();\n  private _selectedProject?: ProjectEnvironment;\n  driver\n  \n  @Input(\"onProjectSelected\") onProjectSelected = new EventEmitter<ProjectEnvironment>();\n  @Input(\"onProjectListChanged\") onProjectListChanged = new EventEmitter<void>();\n\n  constructor(\n      public fs:FsService,  \n      public api:ApiService,\n      public python:PythonCompilerService,\n      public clang:ClangCompilerService,\n    ) {\n      this.driver = python.driver;\n  }\n\n\n  public set currentProject(project:ProjectEnvironment | undefined){\n    if(!project){return}\n    this.addProject(project)\n    this._selectedProject = project\n    this.onProjectSelected.emit(project)\n  }\n\n  public get currentProject(): ProjectEnvironment | undefined{\n    return this._selectedProject\n  }\n  \n\n\n  public createProject(name:string, mount:string, root:string, ){\n    let project = new ProjectEnvironment();\n    //TODO: \n    return project\n  }\n\n  public closeProject(project:ProjectEnvironment){\n    //TODO: \n    return project\n  }\n\n  public listProject(){\n    let projects = new Array<ProjectEnvironment>();\n    //TODO: \n    return projects\n  }\n\n  public addProject(project:ProjectEnvironment){\n    if( this.projects.indexOf(project) == -1 ){\n      this.projects.push(project)\n    }\n  }\n\n\n\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { Packets } from \"../api-service/api.packets\";\nimport { ApiService, Meta } from \"../api-service/api.service\";\nimport { ClangCompilerService } from \"../clang-compiler-service/clang-compiler.service\";\nimport { FsNodeFile, FsNodeFolder, FsNodeList, FsService, FsServiceDriver as FsDriver } from \"../fs-service/fs.service\"\nimport { PyodideDriver } from \"../python-compiler-service/pydiode-driver\";\nimport { PythonCompiler, PythonCompilerService } from \"../python-compiler-service/python-compiler.service\";\n\nexport enum ProjectType{\n  PY='PY',\n  C='C',\n  CPP='CPP',\n}\n\nexport class ProjectList extends Array<ProjectEnvironment>{}\n\n\nexport class ProjectEnvironment{\n\n  public config?: ProjectConfig;\n  public isLoaded = false;\n  \n  //FS\n  public fs?: FsDriver;\n  public fsroot?:FsNodeFolder;\n  public fslist?:FsNodeList;\n  public fslistfiles?:Array<FsNodeFile>;\n\n  //Compiler\n  public compiler?: PythonCompiler;\n  \n  async load(){\n    if(!this.fs){return false}\n    let config = await ProjectConfig.load(this.fs)\n    if(config){return false;}\n    //load more\n    return true;\n  }\n\n  public activate(){\n    //subscribe\n  }\n\n  public deactivate(){\n    //unsubscribe\n  }\n}\n\n\n\nexport class ProjectConfig {\n  RUN = \"/main.py\"\n  DEBUG = false //TODO\n  PROJECT_NAME=\"My solution\" //TODO\n  PREFERED_LANG=\"it\"\n  \n  TAL_SERVERS = [ //TODO\n    \"wss://ta.di.univr.it/sfide\",\n    \"wss://ta.di.univr.it/rtal\",\n    \"ws://localhost:8008/\",\n  ]\n  TAL_SERVER = \"wss://ta.di.univr.it/sfide\" //TODO\n  TAL_PROBLEM = \"\" //TODO\n  TAL_SERVICE = \"\" //TODO\n\n  DIR_PROJECT = '/.talight/'\n  DIR_ATTACHMENTS = '/data/'\n  DIR_RESULTS = '/results/' //TODO\n  DIR_ARGSFILE = '/files/' //TODO\n  DIR_EXAMPLES = '/examples/'\n  CREATE_EXAMPLES = true\n\n  //TODO: hotkey manager service\n  HOTKEY_RUN = \"f8\"\n  HOTKEY_TEST = \"f9\"\n  HOTKEY_SAVE = \"ctrl+s\"\n\n  CONFIG_NAME = 'talight.json'\n  CONFIG_PATH = this.DIR_PROJECT + this.CONFIG_NAME\n\n  PIP_PACKAGES: string[] = []\n\n  public static readonly defaultConfig = new ProjectConfig()\n\n  static async load(fs:FsDriver, path?:string){\n    if(!path){ path = ProjectConfig.defaultConfig.CONFIG_PATH }\n    if (!await fs.exists(path)){\n      console.log(\"ProjectConfig:LoadConfig: Config file doesn't exisit!\")\n      return null;\n    }\n    \n    let configContent = await fs.readFile(path, false ) as string;\n    let config = JSON.parse(configContent) as ProjectConfig\n    return config\n  }\n\n  async save(fs:FsDriver){\n    let content = JSON.stringify(this, null, 4)\n    let res = await fs.writeFile(this.CONFIG_PATH, content); \n    return true\n  }\n}\n\n\n","import { FsNodeFolder, FsServiceDriver } from '../fs-service/fs.service';\nimport { PyodideState, PythonCompiler as PythonCompiler } from './python-compiler.service';\n\n// --- PyodideDriver --- \n\ntype UID = string; // should I ? \n\ntype PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\ntype stdCallback = (data:string)=>void;\ntype stateCallback = (state:PyodideState, content?:string)=>void;\ntype notifyCallback = (title:string, msg:string, kind:string)=>void;\n\n\nexport enum PyodideMessageType {\n  Ready = 'Ready', // Deprecated -> SubscribeState\n  Mount = 'Mount', //TODO\n  Unmount = 'Unmount', //TODO\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState  = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n}\nexport interface PyodideMessage {\n  uid: UID;\n  type: PyodideMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface PyodideRequest {\n  uid: UID;\n  timestamp: number;\n  message: PyodideMessage;\n}\n\nexport interface PyodideResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: PyodideMessage;\n  errors: string[];\n}\n\nexport interface PyodideRequestHandler {\n  uid: UID;\n  request: PyodideRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\nexport class PyodideDriver implements FsServiceDriver, PythonCompiler {\n  public worker: Worker;\n  public mountDir = \"/mnt\"\n  public homeDir = \"/\"\n  public rootDir = \".\"\n  public requestIndex = new Map<UID, PyodideRequestHandler>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  onStdout?: stdCallback\n  onStderr?: stdCallback\n  onState?: stateCallback\n  onNotify?: notifyCallback\n\n  constructor() {\n    //alert('driver built!');\n    this.worker = new Worker(new URL('../../workers/python-compiler.worker', import.meta.url));\n    this.worker.onmessage = (event: MessageEvent) => { this.didRecieve(event.data) };   \n    \n  }\n\n\n\n  private didRecieve(response: PyodideResponse) {\n    if (!response) {return;}\n    console.log('PyodideFsDriver:didRecieve:', response.message.type, response);\n\n    let requestHandler = this.requestIndex.get(response.uid);\n    if (requestHandler != null) {\n      let removeRequest = true;\n      let msgSent = requestHandler.request.message;\n      let msgRecived = response.message;\n      let resolvePromise = requestHandler.resolvePromise;\n\n      switch(response.message.type){\n        case PyodideMessageType.Ready:           this.didReceiveReady(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.InstallPackages: this.didReceiveInstallPackages(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteCode:     this.didReceiveExecuteCode(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ExecuteFile:     this.didReceiveExecuteFile(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.StopExecution:     this.didReceiveStopExecution(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.SubscribeNotify: this.didReceiveSubscribeNotify(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeState:  this.didReceiveSubscribeState(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeStdout: this.didReceiveSubscribeStdout(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SubscribeStderr: this.didReceiveSubscribeStderr(msgSent, msgRecived, resolvePromise); removeRequest = false; break;\n        case PyodideMessageType.SendStdin:       this.didReceiveSendStdin(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.CreateDirectory: this.didReceiveCreateDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadDirectory:   this.didReceiveReadDirectory(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ScanDirectory:   this.didReceiveScanDirectory(msgSent, msgRecived, resolvePromise); break;\n\n        case PyodideMessageType.WriteFile:       this.didReceiveWriteFile(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.ReadFile:        this.didReceiveReadFile(msgSent, msgRecived, resolvePromise); break;\n        \n        case PyodideMessageType.Delete:          this.didReceiveDelete(msgSent, msgRecived, resolvePromise); break;\n        case PyodideMessageType.Exists:          this.didReceiveExists(msgSent, msgRecived, resolvePromise); break;\n      }\n      \n      if (removeRequest){\n        this.requestIndex.delete(response.uid)\n      }\n    }\n  }\n\n  private didReceiveReady(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveReady: \")\n    let ready = msgRecived.args[0]\n    resolvePromise(ready == 'true'?true:false)\n  }\n\n  private didReceiveInstallPackages(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveInstallPackages: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveExecuteCode(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteCode: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveExecuteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string> ){\n    console.log(\"didReceiveExecuteFile: \")\n    if (msgSent.contents.length != 1){ \n      resolvePromise(\"\"); \n    }\n    console.log(msgRecived.contents)\n\n    resolvePromise(this.toString(msgRecived.contents[0]))\n  } \n\n  private didReceiveStopExecution(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveStopExecution: \",msgRecived.args )\n    if (msgSent.args.length != 1){ \n      resolvePromise(false); \n    }\n\n    resolvePromise(true)\n  } \n\n  private didReceiveSubscribeNotify(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeNotify: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onNotify && msgRecived.contents.length > 1){\n      console.log(msgRecived.contents)\n      let [title, msg, kind] = msgRecived.contents\n      this.onNotify(this.toString(title), this.toString(msg), this.toString(kind))\n    }\n  } \n\n  private didReceiveSubscribeState(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeState: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onState && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let state = msgRecived.contents[0] as PyodideState\n      let content;\n      if(msgRecived.contents.length>1){\n        content = this.toString(msgRecived.contents[1])\n      }\n      this.onState(state,content)\n    }\n  } \n\n  private didReceiveSubscribeStdout(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStdout: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStdout && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStdout(this.toString(content))\n    }\n  } \n\n  private didReceiveSubscribeStderr(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSubscribeStderr: \")\n    if (msgRecived.args.length == 1){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n    if ( this.onStderr && msgRecived.contents.length > 0){\n      console.log(msgRecived.contents)\n      let content = msgRecived.contents[0]\n      this.onStderr(this.toString(content))\n    }\n  } \n\n  private didReceiveSendStdin(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveSendStdin: \")\n    if (msgRecived.args.length > 0){ \n      let result = msgRecived.args[0] == 'true'\n      resolvePromise(result); \n    }\n\n    resolvePromise(false)\n  } \n\n  private didReceiveCreateDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveCreateDirectory: \")\n    if (msgSent.args.length != 1){ \n      resolvePromise(false); \n    }\n    let pathSent = msgSent.args[0];\n    let pathRecived = msgRecived.args[0];\n\n    resolvePromise(pathSent == pathRecived)\n  } \n\n  private didReceiveReadDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let replacer = (key:any, value:any) => {\n      if (value instanceof ArrayBuffer){\n        let buffer = new Uint8Array(value)\n        return Array.from(buffer)\n      }\n      return value\n    }\n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.internal_jsonReplacer)\n    console.log(\"didReceiveReadDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  private didReceiveScanDirectory(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<FsNodeFolder | null> ){\n    //TODO: do the actual thing \n    let node = JSON.parse(this.toString(msgRecived.contents[0]),this.internal_jsonReplacer)\n    console.log(\"didReceiveScanDirectory: \", node)\n    resolvePromise( node )\n  }\n\n  private internal_jsonReplacer(key:any,value:any){\n    if ( typeof value !== 'object') {return value; }\n    //console.log('jsonReplacer:object:',key,value)\n    if (!(\"flags\" in value && \"constructor\" in value && \"data\" in value )){ return value; }\n    //console.log('jsonReplacer:constructor',value.constructor)\n    if ( value.constructor == 'ArrayBuffer' && value.data instanceof Array){\n      //console.log('jsonReplacer:ArrayBuffer')\n      let buffer = Uint8Array.from(value.data).buffer\n      console.log('jsonReplacer:ArrayBuffer',buffer)\n      return buffer;\n    }\n    return value\n  }\n  \n  private didReceiveReadFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<string|ArrayBuffer> ){\n    console.log(\"didReceiveReadFile:\\n\", msgRecived.contents.length)\n    resolvePromise( msgRecived.contents[0] )\n  }\n  \n  private didReceiveWriteFile(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<number> ){\n    console.log(\"didReceiveWriteFile: \")\n    console.log(msgRecived.args.length)\n    console.log(msgRecived.contents.length)\n    //TODO:\n    resolvePromise(msgRecived.contents.length)\n  }\n  \n\n  private didReceiveDelete(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveDelete: \")\n    resolvePromise(true)\n  }\n\n  private didReceiveExists(msgSent:PyodideMessage, msgRecived:PyodideMessage, resolvePromise:PromiseResolver<boolean> ){\n    console.log(\"didReceiveExists: \")\n    let res = msgRecived.args[0]\n    resolvePromise(res  == 'true' )\n  }\n\n  // SEND: INTERNAL\n\n  private sendMessage<T>(message: PyodideMessage) {\n    console.log(\"PyodideDriver:sendMessage:\"+message.type)\n    let request: PyodideRequest = {\n      uid: message.uid,\n      timestamp: Date.now(),\n      message: message\n    }\n\n    let promiseResolver: PromiseResolver<T>;\n    let resultPromise =  new Promise<T>((resolve, reject) => {\n      promiseResolver = resolve;\n    })\n    \n    let requestHandler: PyodideRequestHandler = {\n      uid: message.uid,\n      request: request,\n      resolvePromise: (value)=>{ promiseResolver(value) }\n    }\n\n    this.requestIndex.set(message.uid, requestHandler);\n    this.worker.postMessage(request);\n\n    return resultPromise;\n  }\n\n  //SEND: PUBLIC\n\n  public mount(path: string): Promise<boolean> {\n    //TODO\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Mount,\n      args: [path],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public unmount(path: string): Promise<boolean> {\n    //TODO\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Unmount,\n      args: [path],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async ready(): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Ready,\n      args: [],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async installPackages(packages: string[]): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.InstallPackages,\n      args: packages,\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async executeCode(code: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteCode,\n      args: [],\n      contents: [code],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async executeFile(fullpath: string): Promise<string> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ExecuteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<string>(message);\n\n    return resultPromise;\n  }\n\n  public async stopExecution(signal: number=2): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.StopExecution,\n      args: [signal.toString()],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    //TODO: stop pyodide gracefully -> stopExecution ( keyboard interrupt ) seams ineffetive\n    let res = confirm(\"**WORK IN PROGRESS**\\nPurtroppo qualcosa è andato storto con le API e pyodide è rimasto appeso.\\nPer il momento mi tocca fare il reload della pagina.\")\n    if(res){ window.location.reload() }\n\n    return resultPromise;\n  }\n\n  public subscribeNotify(enable=true, onNotify?:notifyCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeNotify,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onNotify && enable){\n      this.onNotify = (title: string, msg:string, kind:string=\"\")=>{onNotify(title,msg,kind)}\n    }else{\n      this.onNotify = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeState(enable=true, onState?:stateCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeState,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onState && enable){\n      this.onState = (state: PyodideState, content?:any)=>{onState(state,content)}\n    }else{\n      this.onState = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeStdout(enable=true, onStdout?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStdout,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStdout && enable){\n      this.onStdout = (msg:string)=>{onStdout(msg)}\n    }else{\n      this.onStdout = undefined;\n    }\n\n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public subscribeStderr(enable=true, onStderr?:stdCallback){\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SubscribeStderr,\n      args: [enable?'true':'false'],\n      contents: [],\n    }\n    if (onStderr && enable){\n      this.onStderr = (msg:string)=>{onStderr(msg)}\n    }else{\n      this.onStderr = undefined;\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public sendStdin(msg:string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.SendStdin,\n      args: [],\n      contents: [msg],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  public async createDirectory(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.CreateDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  public async readFile(fullpath: string, binary: boolean=true): Promise<string|ArrayBuffer> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadFile,\n      args: [fullpath],\n      contents: [],\n    }\n    if(binary){message.args.push('binary');}\n    let resultPromise = this.sendMessage<string|ArrayBuffer>(message);\n    return resultPromise;\n  }\n\n  public async writeFile(fullpath: string, content: string|ArrayBuffer): Promise<number> {\n    console.log(\"writeFile: \"+fullpath)\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.WriteFile,\n      args: [fullpath],\n      contents: [],\n    }\n    message.contents.push(content)\n    \n    let resultPromise = this.sendMessage<number>(message);\n    return resultPromise;\n  }\n\n  public async readDirectory(fullpath: string): Promise<FsNodeFolder | null> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ReadDirectory,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n\n  public async scanDirectory(fullpath?: string, recursive = false, parent?: FsNodeFolder): Promise<FsNodeFolder | null> {\n    if (!fullpath) { fullpath = './' }\n    \n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.ScanDirectory,\n      args: [fullpath, recursive?'recursive':'flat'],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<FsNodeFolder | null>(message);\n    return resultPromise;\n  }\n\n\n  public async delete(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Delete,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n\n  public async exists(fullpath: string): Promise<boolean> {\n    let message: PyodideMessage = {\n      uid: this.requestUID(),\n      type: PyodideMessageType.Exists,\n      args: [fullpath],\n      contents: [],\n    }\n    \n    let resultPromise = this.sendMessage<boolean>(message);\n\n    return resultPromise;\n  }\n\n  private toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  private toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n\n\n  private requestUID(): UID {\n    var timestap = new Date().getTime();\n    let seed = Math.floor(Math.random() * 100000000);\n    return 'uid-' + timestap + '-' + seed;\n  }\n}\n  ","import { Injectable } from '@angular/core';\nimport { PyodideDriver } from './pydiode-driver';\nimport { FsService } from '../fs-service/fs.service';\nimport { ProjectConfig } from '../project-manager-service/project-manager.types';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PythonCompilerService {\n  public driverName = 'pyodide';\n  public projectFolder = ProjectConfig.defaultConfig.DIR_PROJECT\n  public configName = ProjectConfig.defaultConfig.CONFIG_NAME\n  public configPath = ProjectConfig.defaultConfig.CONFIG_PATH\n  \n  public driver?: PyodideDriver;\n  \n\n  constructor( private fs:FsService) { \n    this.driver = new PyodideDriver();\n    this.fs.registerDriver(this.driverName, this.driver); \n  }\n\n  async createPythonProject(){\n    console.log(\"createPythonProject\")\n    if (!this.driver) {return false}\n\n    let writeConfig = false\n    let config = await this.readPythonConfig();\n    if (!config){\n      config = new ProjectConfig()\n      writeConfig = true\n    }\n    \n    \n    //Starter files\n    let folders = [\n      config.DIR_PROJECT,\n      config.DIR_ATTACHMENTS,\n    ]\n    if(config.CREATE_EXAMPLES){ folders.push(config.DIR_EXAMPLES)}\n    \n    for(let i = 0; i < folders.length; i++){\n      console.log(\"createPythonProject:createDirectory:\",folders[i])\n      await this.driver?.createDirectory(folders[i]);\n    }\n\n    //TODO: load from external asset bundle\n    let files: string[][] = []\n    \n    let mainContent = `print(\"Hello World!\")`;\n    let inputExample = `# Esempio che mostra come utilizzare la funzione di input in ambiente asincrono\nnome = await input(\"Ciao, come ti chiami?\")\nprint(f'Ciao {nome}, posso farti una domanda ?')    \n\nasync def main():\n  while(True):\n    lati = await input(\"quanti lati ha un triangolo?\")\n    if lati==\"3\": break;\n    print(f'No, mi dispiace non ha {lati} lati')    \n  print('Congratulazioni!')\n\nmain()`\n\n    let freesumExample = `# Example: sum -> free sum\nwhile True:\n    line = await input()\n    #print(f\"# BOT: line={line}\")\n    if line[0] == '#':   # this is a commented line (sent by the service server)\n        if '# WE HAVE FINISHED' == line:\n            exit(0)   # exit upon termination of the service server\n    else:\n        n = int(line)\n        print(f\"{n} 0\")`\n\n    let sumExample = `# Example: sfilde: somma, sovle\ncnt = int(input())\nfor i in range(cnt):\n    line = input()\n    #print(\"line:\", line)\n    nums = line.split(\" \")\n    a = int(nums[0])\n    b = int(nums[1])\n    print(a+b)`    \n    \n    if(writeConfig){ \n      let configContent = JSON.stringify(config, null, 4)\n      files.unshift([config.CONFIG_PATH, configContent])\n    }\n\n    files.push([config.RUN, mainContent])\n    \n\n    let examples = [\n      [config.DIR_EXAMPLES + 'input.py', inputExample],\n      [config.DIR_EXAMPLES + 'freesum.py', freesumExample],\n      [config.DIR_EXAMPLES + 'sum.py', sumExample],\n    ]\n    if(config.CREATE_EXAMPLES){ files = files.concat(examples) }\n\n    \n    \n    \n    for(let i=0; i < files.length; i++){\n      let path = files[i][0]\n      let content = files[i][1]\n      console.log(\"createPythonProject:files:\", path, content)\n      if(await this.driver.exists(path)){\n        console.log(\"createPythonProject:files:SKIP:\", path)\n        continue;\n      }\n      await this.driver?.writeFile(path, content);  \n    }\n\n    return true\n  }\n\n  async readPythonConfig(){\n    if (!this.driver) {return null}\n\n    let defaultConfig = new ProjectConfig()\n    if (!await this.driver.exists(defaultConfig.CONFIG_PATH)){\n      console.log(\"readPythonConfig: config file doesn't exisit!\")\n      return null;\n    }\n    \n    let configContent = await this.driver?.readFile(defaultConfig.CONFIG_PATH, false ) as string;\n    let config = JSON.parse(configContent) as ProjectConfig\n    return config\n  }\n\n  \n  async runProject(){\n    let config = await this.readPythonConfig()\n    if (!config){return null;}\n    await this.driver?.installPackages(config.PIP_PACKAGES)\n    let result = await this.driver?.executeFile(config!.RUN)\n    console.log(result)\n    return result    \n  }\n\n  async installPackages(packages:string[]){\n    this.driver?.installPackages(packages)\n  }\n\n  async executeFile(fullpath:string){\n    this.driver?.executeFile(fullpath)\n  }\n\n}\n\n\nexport enum PyodideState {\n  Unknown = 'Unknown',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Error = 'Error',\n}\n\n\nexport interface PythonCompiler{\n  installPackages(packages: string[]): Promise<string>;\n  executeCode(code: string): Promise<string>;\n  executeFile(fullpath: string): Promise<string>;\n  stopExecution(signal?: number): Promise<boolean>;\n  subscribeNotify(enable?:boolean, onNotify?:(title:string, msg:string, kind:string)=>void ): Promise<boolean>;\n  subscribeState(enable?:boolean, onState?:(state:PyodideState, content?:string)=>void ): Promise<boolean>;\n  subscribeStdout(enable?:boolean, onStdout?:(data:string)=>void): Promise<boolean>;\n  subscribeStderr(enable?:boolean, onStderr?:(data:string)=>void): Promise<boolean>;\n  sendStdin(msg:string): Promise<boolean> ;\n}\n\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport enum AppTheme {\n  light = \"light-theme.css\",\n  dark = \"dark-theme.css\",\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  public themeChanged: Subject<AppTheme> = new Subject<AppTheme>();\n\n  constructor(@Inject(DOCUMENT) private document: Document) {\n    const storedTheme: AppTheme = localStorage.getItem('theme') as AppTheme || AppTheme.light;\n    this.setTheme(storedTheme);\n  }\n\n  public get currentTheme(): AppTheme {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    return storedTheme as AppTheme;\n  }\n\n  public setTheme(theme: AppTheme): void {\n    if (theme === AppTheme.light || theme === AppTheme.dark) {\n      let themeLink = this.document.getElementById('app-theme') as HTMLLinkElement;\n\n      if (themeLink) {\n        localStorage.setItem('theme', theme);\n        themeLink.href = theme;\n        this.themeChanged.next(theme);\n      }\n    }\n  }\n\n  public toggleTheme(): void {\n    const storedTheme: string = localStorage.getItem('theme') || AppTheme.light;\n    const newTheme: AppTheme = storedTheme === AppTheme.light ? AppTheme.dark : AppTheme.light;\n    this.setTheme(newTheme);\n  }\n\n  public themeName(): string {\n    switch (this.currentTheme) {\n      case AppTheme.dark:\n        return \"vs-dark\";\n      default:\n        return \"vs\";\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-connect-view',\n  templateUrl: './connect-view.component.html',\n  styleUrls: ['./connect-view.component.scss']\n})\nexport class ConnectViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Connettiti ad un server</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-form-input\">\n      <label for=\"serverurl\">Server Url</label>\n      <input name=\"serverurl\" input type=\"text\" pInputText placeholder=\"https://...\" />\n    </div>\n    <p class=\"tal-error\">\n      <i class=\"pi pi-times-circle\"></i>\n      <span>Questo è un errore</span>\n    </p>\n    <button  pButton>Connetti</button>\n  </div>\n\n</div>\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ApiService, Meta } from 'src/app/services/api-service/api.service';\nimport { Commands } from 'src/app/services/api-service/api.commands';\n\n@Component({\n  selector: 'app-demo-view',\n  templateUrl: './demo-view.component.html',\n  styleUrls: ['./demo-view.component.scss']\n})\nexport class DemoViewComponent implements OnInit {\n  public output = \"\";\n  public cmdConnect?:Commands.Connect;\n\n  constructor(\n    private zone: NgZone,\n    private api: ApiService\n    ) {}\n\n  ngOnInit(): void {\n    //api.problemList((problemList: any) => {console.log(problemList)});\n\n    /*\n    api.getAttachment(\n      \"piastrelle\",\n      ()=>{console.log(\"Attachment packet received\")},\n      (onAttachmentInfo: any) => {console.log(onAttachmentInfo)},\n      (data: ArrayBuffer) => {\n        console.log(\"ArrayBuffer received\");\n\n        const arrayBufferToFile = (buffer:any, filename:any) => {\n          const blob = new Blob([buffer], { type: 'application/octet-stream' });\n          return new File([blob], filename, { type: 'application/octet-stream' });\n        };\n\n        let file = arrayBufferToFile(data, \"/home/michele/piastrelle.tar\");\n        console.log(file);\n      }\n    );\n    \n\n    api.Connect(\n      \"sum\", \n      \"synopsis\", \n      {\"service\":\"free_sum\"}, \n      undefined,\n      undefined,\n      undefined,\n      (onConnectionBegin: any) => {console.log(\"Connection Begin -> \" + onConnectionBegin); },\n      () => {console.log(\"Connection Start\")},\n      (onConnectionClose: any) => {console.log(onConnectionClose)},\n      (onData: any) => {console.log(onData)},\n      (onError: any) => {alert(onError)},\n    );\n\n    */\n    \n  }\n  //API Test\n    \n  async onApiError(message: string){\n    alert(\"Error: \"+message)\n  }\n\n  public refreshOutput() {\n    this.zone.run(() => this.output += \"\")\n  }\n\n  async apiProblemList() {\n    let onSuccess = (problemList:Map<string, Meta>)=>{ \n      console.log(problemList);\n      this.refreshOutput();\n    }\n    let req = this.api.problemList( onSuccess );\n    req.onError = this.onApiError;\n  }\n\n  async apiGetAttachment() {\n    let problem_name = \"piastrelle\";\n\n    let onAttachment = ()=>{console.log(\"Attachment packet received\")};\n    let onAttachmentInfo = (onAttachmentInfo: any) => {console.log(onAttachmentInfo)};\n    \n    let onData = (data: ArrayBuffer)=>{\n      console.log(data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.GetAttachment(problem_name, onAttachment, onAttachmentInfo, onData);\n    req.onError = this.onApiError;\n\n  }\n  \n\n  async apiConnect() {\n    let problem_name = \"sum_testAPI\";\n    let service = \"free_sum\";\n\n    let onConnectionBegin = (onConnectionBegin: string[]) => {console.log(\"Connection Begin -> \" + onConnectionBegin); };\n    let onConnectionStart = () => {console.log(\"Connection Start\")};\n    let onConnectionClose = (onConnectionClose: string[]) => {console.log(onConnectionClose)};\n    \n    let onData = (data: string)=>{\n      this.output += ''+data\n      console.log(\"Binary data: \"+data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.Connect(problem_name, service, undefined, undefined, undefined, undefined, onConnectionBegin, onConnectionStart, onConnectionClose, onData);\n    req.onError = this.onApiError;\n\n    this.cmdConnect = req;\n\n    this.sendBinary();\n  }\n\n\n\n\n\n\n  //OLD\n\n  async apiConnectOld() {\n    let problem_name = \"sum_testAPI\";\n    let service = \"free_sum\";\n\n    let onConnectionBegin = (onConnectionBegin: string[]) => {console.log(\"Connection Begin -> \" + onConnectionBegin); };\n    let onConnectionStart = () => {console.log(\"Connection Start\")};\n    let onConnectionClose = (onConnectionClose: string[]) => {console.log(onConnectionClose)};\n    \n    let onData = (data: string)=>{\n      this.output += ''+data\n      console.log(\"Binary data: \"+data);\n      this.refreshOutput();\n    };\n\n    let req = this.api.Connect(problem_name, service, undefined, undefined, undefined, undefined, onConnectionBegin, onConnectionStart, onConnectionClose, onData);\n    req.onError = this.onApiError;\n\n    this.cmdConnect = req;\n\n    this.sendBinary();\n  }\n\n  async sendBinary() {\n    setTimeout(() => {this.cmdConnect?.sendBinary(\"100 0\\n\");}, 1500);\n    //setTimeout(() => {this.cmdConnect?.sendConnectStop();}, 2500);\n    /*\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 2500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 3500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 4500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 5500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 6500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 7500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 8500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 9500);\n    setTimeout(async () => {this.cmdConnect?.sendBinary(\"100 0\");}, 10500);\n    */\n\n    setTimeout(() => {console.log(\"this.cmdConnect!.tal.isOpen()\");\n    console.log(this.cmdConnect!.tal.isOpen());}, 2500);\n  }\n\n\n}\n","<div style=\"display:flex; flex-direction: row\">\n    <div>\n        <div>\n            API Demo\n        </div>\n        <div>\n            <button (click)=\"apiProblemList()\">Problem List</button>\n            <button (click)=\"apiGetAttachment()\">Get Attachment</button>\n            <button (click)=\"apiConnectOld()\">Connect Old</button>\n            <button (click)=\"apiConnect()\">Connect</button>\n        </div>\n    </div>\n    \n    \n    <div>\n        <pre>{{output}}</pre>\n    </div>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CodeEditorComponent } from 'src/app/widgets/code-editor/code-editor/code-editor.component';\n\n\n@Component({\n  selector: 'tal-home-view',\n  templateUrl: './home-view.component.html',\n  styleUrls: ['./home-view.component.scss']\n})\nexport class HomeViewComponent implements OnInit {\n  \n  @ViewChild(\"codeEditor\") public codeEditor!: CodeEditorComponent;\n\n  constructor(\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-home-container\">\n  <div class=\"tal-home-editor\">\n    <tal-code-editor #codeEditor></tal-code-editor>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tal-select-problem-view',\n  templateUrl: './select-problem-view.component.html',\n  styleUrls: ['./select-problem-view.component.scss']\n})\nexport class SelectProblemViewComponent implements OnInit {\n\n  public problems: any[] = [\n    {\n      id: 1, name: 'Problem 1',\n    },\n    {\n      id: 2, name: 'Problem 2',\n    },\n    {\n      id: 3, name: 'Problem 3',\n    },\n    {\n      id: 4, name: 'Problem 4',\n    },\n  ];\n\n  public selectedProblem: any = null;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"tal-center-page\">\n  <h1>Seleziona un problema da risolvere</h1>\n  <div class=\"tal-center-form\">\n    <div class=\"tal-problems-list\">\n      <ng-container *ngFor=\"let problem of problems\">\n        <div class=\"tal-problem\" (click)=\"selectedProblem=problem.id\">\n          <p-radioButton name=\"groupname\" [value]=\"problem.id\" [(ngModel)]=\"selectedProblem\">\n          </p-radioButton>\n          <div class=\"tal-problem-details\">\n            <p>{{problem.name}}</p>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n    <button pButton>Inizia</button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileExplorerWidgetComponent } from './file-explorer-widget/file-explorer-widget.component';\nimport { CodeEditorComponent } from './code-editor/code-editor.component';\nimport { MonacoEditorModule } from 'ngx-monaco-editor-v2';\nimport { FormsModule } from '@angular/forms';\nimport { ConfirmationService, SharedModule } from 'primeng/api';\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { SplitterModule } from 'primeng/splitter';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { FileEditorWidgetComponent } from './file-editor-widget/file-editor-widget.component';\nimport { ExecbarWidgetComponent } from './execbar-widget/execbar-widget.component';\nimport { ProblemWidgetComponent } from './problem-widget/problem-widget.component';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MonacoEditorWidgetComponent } from './monaco-editor-widget/monaco-editor-widget.component';\nimport { OutputWidgetComponent } from './output-widget/output-widget.component';\nimport {TabViewModule} from 'primeng/tabview';\nimport {ScrollPanelModule} from 'primeng/scrollpanel';\n\n@NgModule({\n  declarations: [\n    FileExplorerWidgetComponent,\n    FileEditorWidgetComponent,\n    CodeEditorComponent,\n    ExecbarWidgetComponent,\n    ProblemWidgetComponent,\n    MonacoEditorWidgetComponent,\n    OutputWidgetComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MonacoEditorModule,\n    ConfirmDialogModule,\n    OverlayPanelModule,\n    SplitterModule,\n    SharedModule,\n    TooltipModule,\n    DropdownModule,\n    TabViewModule,\n    ScrollPanelModule,\n  ],\n  exports: [\n    FileExplorerWidgetComponent,\n    CodeEditorComponent\n  ],\n  providers: [ ConfirmationService ],\n})\nexport class CodeEditorModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Commands } from 'src/app/services/api-service/api.commands';\nimport { ApiService } from 'src/app/services/api-service/api.service';\n\nimport { FsService, FsNodeFile, Tar, FsNodeFolder, FsNodeList } from 'src/app/services/fs-service/fs.service';\nimport { NotificationManagerService, NotificationType } from 'src/app/services/notification-mananger-service/notification-manager.service';\nimport { ProblemDescriptor, ServiceDescriptor } from 'src/app/services/problem-manager-service/problem-manager.types';\n\nimport { ProjectManagerService } from 'src/app/services/project-manager-service/project-manager.service';\nimport { ProjectEnvironment } from 'src/app/services/project-manager-service/project-manager.types';\n\nimport { PyodideState, PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\nimport { FileExplorerWidgetComponent } from 'src/app/widgets/code-editor/file-explorer-widget/file-explorer-widget.component';\nimport { ExecbarWidgetComponent } from '../execbar-widget/execbar-widget.component';\nimport { FileEditorWidgetComponent } from '../file-editor-widget/file-editor-widget.component';\nimport { OutputType, OutputWidgetComponent } from '../output-widget/output-widget.component';\nimport { ProblemWidgetComponent } from '../problem-widget/problem-widget.component';\n\n@Component({\n  selector: 'tal-code-editor',\n  templateUrl: './code-editor.component.html',\n  styleUrls: ['./code-editor.component.scss']\n})\nexport class CodeEditorComponent implements OnInit {\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  public cmdConnect?:Commands.Connect;\n  \n  public currentProject?:ProjectEnvironment;\n\n  public selectedFile?: FsNodeFile;\n  public selectedProblem?: ProblemDescriptor;\n  public selectedService?: ServiceDescriptor;\n  public driver;\n  public pyodideState = PyodideState.Unknown\n  public pyodideStateContent? = \"\"\n\n  public fsroot = FsService.EmptyFolder;\n  public fslist: FsNodeList = [];\n  public fslistfile: FsNodeFile[] = [];\n\n  @ViewChild(\"fileExplorer\") public fileExplorer!: FileExplorerWidgetComponent;\n  @ViewChild(\"fileEditor\") public fileEditor!: FileEditorWidgetComponent;\n  @ViewChild(\"execBar\") public execBar!: ExecbarWidgetComponent;\n  @ViewChild(\"problemWidget\") public problemWidget!: ProblemWidgetComponent;\n  @ViewChild(\"outputWidget\") public outputWidget!: OutputWidgetComponent;\n  \n  constructor(\n    private fs: FsService,\n    private python:PythonCompilerService,\n    private api:ApiService,\n    private nm: NotificationManagerService,\n    private pm: ProjectManagerService,\n  ) {\n    if(!pm.currentProject ){\n      let project = pm.createProject('My Solution', '/mnt','/');\n      pm.currentProject = project;\n    }\n\n    this.driver = python.driver\n  }\n\n  ngOnInit(): void {\n    this.python.driver?.subscribeNotify(true,(msg)=>{this.didNotify(msg)})\n    this.python.driver?.subscribeState(true,(state:PyodideState,content?:string)=>{this.didStateChange(state,content)})\n    this.python.driver?.subscribeStdout(true,(msg)=>{this.didStdout(msg)})\n    this.python.driver?.subscribeStderr(true,(msg)=>{this.didStderr(msg)})\n  }\n\n  ngAfterViewInit(){\n    this.outputWidget.enableStdin(false); \n  }\n\n  public onUpdateRoot(fsroot:FsNodeFolder){\n    this.fsroot = fsroot;\n    this.fslist = this.fs.treeToList(fsroot);\n    this.fslistfile = this.fslist.filter( item=>\"content\" in item ) as FsNodeFile[]\n    let filePathList = new Array<{path:string}>()\n    this.fslistfile.forEach(item=>filePathList.push({path:item.path}))\n    this.problemWidget.filePathList = filePathList\n  }\n  \n  public didNotify(data:string){\n    console.log(\"didNotify:\")\n    this.outputWidget!.print(data);\n    //TODO: if API connect then:\n    if(!this.cmdConnect){return;}\n    this.cmdConnect.sendBinary(data + \"\\n\"); //lo \\n va aggiunto all'output del bot python\n  }\n\n  public didStateChange(state:PyodideState,content?:string){\n    console.log(\"didStateChange:\")\n    //this.outputWidget!.print(state,OutputType.SYSTEM);\n    this.pyodideState=state\n    this.pyodideStateContent=content\n    this.outputWidget.didStateChange(state,content)\n  }\n\n  public didStdout(data:string){\n    console.log(\"onStdout:\")\n    this.outputWidget!.print(data);\n    //TODO: if API connect then:\n    if(!this.cmdConnect){return;}\n    this.cmdConnect.sendBinary(data + \"\\n\"); //lo \\n va aggiunto all'output del bot python\n  }\n\n  public didStderr(data:string){\n    console.log(\"onStderr:\")\n    //alert(\"STDERR: \"+data)\n    this.nm.sendNotification(\"ERROR:\",data,NotificationType.Error)\n    this.outputWidget.print(data, OutputType.STDERR)\n  }\n\n  public sendStdin(msg:string, fromAPI=false){\n    console.log(\"sendStdin:\")\n    let msgs = msg.split(\"\\n\");\n    if(msgs[msgs.length - 1] === \"\") {msgs.pop();}\n    console.log(\"sendStdin:split: \", msgs)\n\n    for(let i = 0; i < msgs.length; i++){\n      this.outputWidget.print(msgs[i],fromAPI?OutputType.STDINAPI:OutputType.STDIN)\n      this.python.driver?.sendStdin(msgs[i])\n    }\n    if (fromAPI || this.pyodideState != PyodideState.Stdin ){\n      this.outputWidget.enableStdin(false)\n    }\n  }\n\n  public onProblemChanged(selectedProblem: ProblemDescriptor){\n    console.log(\"onProblemChanged:\",selectedProblem)\n    this.selectedProblem=selectedProblem;\n    this.selectedService=undefined;\n  }\n\n  public onServiceChanged(selectedService: ServiceDescriptor){\n    console.log(\"onServiceChanged:\",selectedService)\n    this.selectedService=selectedService;\n\n  }\n\n  async onAttachments(data: ArrayBuffer){\n    console.log(\"onAttachments:\",data)\n    if(!this.selectedProblem){return;}\n    console.log(\"onAttachments:selectedProblem:\",this.selectedProblem)\n    if (!(data instanceof ArrayBuffer ) ) {return;}\n    console.log(\"onAttachments:data:\",data)\n\n    console.log(\"extractTar:unpack:\")\n    Tar.unpack(data, async (files,folders) => {\n      console.log(\"extractTar:unpack:folders\",folders)\n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = '/data/' + folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n\n\n      console.log(\"extractTar:unpack:files\",files)\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = '/data/' + file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      \n      \n      this.fileExplorer.refreshRoot()\n    });\n    \n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.selectedFile = file;\n    this.execBar.selectedFile = this.selectedFile\n    this.fileEditor.selectedFile = this.selectedFile \n  }\n\n  public editorDidChange(file: FsNodeFile){\n    console.log(\"editorDidChange:\")\n    this.saveFile()\n  }\n\n  public editorDidInput(event: InputEvent){\n    console.log(\"Input: \", this.fileEditor)\n    this.saveFile()\n  }\n\n  public saveFile(){\n    if ( this.selectedFile ){ \n      console.log(\"saveFile:\", this.selectedFile.path, this.fileEditor)\n      this.driver?.writeFile(this.selectedFile.path, this.selectedFile.content)\n    } else {\n      console.log(\"saveFile:failed\")\n    }\n  }\n\n  async stopAll(){\n    console.log(\"stopAll:\")\n\n    if(this.cmdConnect){this.cmdConnect.tal.closeConnection()}\n    console.log(\"stopAll:cmdConnect:DONE\")\n    await this.driver?.stopExecution()\n    console.log(\"stopAll:cmdConnect:DONE\")\n  }\n  \n  //-------------- API CONNECT\n  public async runProject(useAPI = false){\n    console.log(\"runProject:\")\n    this.outputWidget.clearOutput()\n    \n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n    console.log(\"runProject:config:ok\")\n\n\n    console.log(\"runProject:main:\", config!.RUN)\n    let mainFile = this.fslistfile.find( item => item.path == config!.RUN)\n    if (!mainFile){return false}\n    console.log(\"runProject:main:ok\")\n    this.fileExplorer.selectFile(mainFile)\n\n    this.outputWidget.print(\"RUN: \"+config.RUN, OutputType.SYSTEM)\n    this.saveFile();\n    \n    await this.python.runProject()\n    return true\n  }\n\n\n  public async runConnectAPI(){\n    this.outputWidget.clearOutput()\n    this.saveFile();\n    \n    \n    this.apiConnect().then(()=>{\n      //TODO: on success, new files are downloaded \n      //this.fileExplorer.refreshRoot()\n    })\n  }\n  \n  \n  async apiConnect(){\n    console.log(\"apiConnect\")\n\n    if(!this.selectedService){\n      this.outputWidget.print(\"No problem selected\", OutputType.STDERR)\n      return false\n    }\n    console.log(\"apiConnect:service:ok\")\n\n    let config = await this.python.readPythonConfig()\n    if (!config){return false}\n    console.log(\"apiConnect:config:ok\")\n    \n    let problem = this.selectedService.parent.name;\n    let service = this.selectedService.name;\n    let args = this.selectedService.exportArgs();\n    let tty = undefined\n    let token = undefined\n    let filePaths = this.selectedService.exportFilesPaths();\n    let files =  new Map<string,string>();\n\n    filePaths.forEach((fileArgPath, fileArgName)=>{\n      console.log(\"apiConnect:params:problem:path:\", fileArgName, fileArgPath)\n      let found = this.fslistfile.find(item => item.path == fileArgPath)\n      console.log(\"apiConnect:params:problem:found:\", found)\n      if(!found){return}\n      let content = found.content\n      if(content instanceof ArrayBuffer){\n        content = this.binDecoder.decode(content)\n      }\n      files.set(fileArgName, content)\n    })\n\n    \n    console.log(\"apiConnect:params:problem\",problem)\n    console.log(\"apiConnect:params:service\",service)\n    console.log(\"apiConnect:params:args\",args)\n    console.log(\"apiConnect:params:tty\",tty)\n    console.log(\"apiConnect:params:token\",token)\n    console.log(\"apiConnect:params:files\",files)\n\n    \n    let onConnectionStart = () => {this.didConnectStart()};\n    let onConnectionBegin = (msg: string[]) => {this.didConnectBegin(msg)};\n    let onConnectionClose = (msg: string[]) => {this.didConnectClose(msg)};\n    let onData = (data: string)=>{ this.didConnectData(data)};\n\n    this.cmdConnect = await this.api.Connect(\n      problem, \n      service, \n      args,\n      tty,\n      token,\n      files,\n      onConnectionBegin,\n      onConnectionStart,\n      onConnectionClose,\n      onData\n    );\n    this.cmdConnect.onError = (error)=>{this.didConnectError(error)};\n    console.log(\"apiConnect:DONE\")\n\n    console.log(\"apiConnect:runProject\")\n    this.saveFile();\n    await this.python.runProject()\n    this.outputWidget.print(\"API: \"+config.RUN, OutputType.SYSTEM)\n    console.log(\"apiConnect:runProject:running\")\n\n    return true\n  }\n\n  async didConnectError(error: string){\n    console.log(\"apiConnect:didConnectError:\", error)\n    this.outputWidget.print(\"API Error: \"+error,OutputType.STDERR)\n    this.cmdConnect = undefined\n    this.outputWidget.enableStdin(false)\n\n    \n    this.python.driver?.stopExecution()\n    \n    \n  }\n\n  async didConnectStart(){\n    console.log(\"apiConnect:didConnectStart\")\n  }\n\n  async didConnectBegin(message: string[]){\n    console.log(\"apiConnect:didConnectBegin:\", message)\n  }\n\n  async didConnectClose(message: string[]){\n    console.log(\"apiConnect:didConnectionClose:\",message)\n    this.cmdConnect = undefined\n  }\n\n  async didConnectData(data: string){\n    console.log(\"apiConnect:didConnectData:\", data)\n    this.sendStdin(data, true)\n  }\n}\n","\n<div class=\"tal-editor\">\n  <p-splitter [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50,35]\" [minSizes]=\"[12,20,20]\">\n\n\n    \n    <ng-template pTemplate>\n      <div class=\"tal-editor-files\">\n        <tal-file-explorer-widget #fileExplorer \n          (onUpdateRoot)=\"onUpdateRoot($event)\"\n          (onSelectFile)=\"selectFile($event)\">\n        </tal-file-explorer-widget>\n      </div>\n    </ng-template>\n\n\n\n    <ng-template pTemplate>\n      \n        <div class=\"tal-code-editor-container\">\n\n          <div class=\"tal-code-editor-header\">\n            <tal-execbar-widget #execBar \n              (onStop)=\"stopAll()\"\n              (onRun)=\"runProject()\"\n              (onConnect)=\"runConnectAPI()\"\n              [selectedFile]=\"selectedFile\">\n            </tal-execbar-widget>\n          </div>\n\n          <div class=\"tal-code-editor\">\n            <tal-file-editor-widget #fileEditor\n              (onChange)=\"editorDidChange($event)\">\n            </tal-file-editor-widget>\n          </div>\n\n        </div>\n      \n    </ng-template>\n\n\n    <ng-template pTemplate>\n      <p-splitter id=\"tal-problem-column\" [style]=\"{'height': '100%'}\" [panelSizes]=\"[15,50]\" [minSizes]=\"[12,20]\" layout=\"vertical\">\n\n        <ng-template pTemplate>\n          <tal-problem-widget #problemWidget \n            (onAttachments)=\"onAttachments($event)\"\n            (onProblemChanged)=\"onProblemChanged($event)\"\n            (onServiceChanged)=\"onServiceChanged($event)\">\n          </tal-problem-widget>\n        </ng-template>\n\n        <ng-template pTemplate>\n          <tal-output-widget #outputWidget \n            (onStdin)=\"sendStdin($event)\">\n          </tal-output-widget>\n        </ng-template>\n        \n      </p-splitter>\n    </ng-template>\n\n  </p-splitter>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FsNodeFile, FsNodeFolder } from 'src/app/services/fs-service/fs.service';\n\n@Component({\n  selector: 'tal-execbar-widget',\n  templateUrl: './execbar-widget.component.html',\n  styleUrls: ['./execbar-widget.component.scss']\n})\nexport class ExecbarWidgetComponent implements OnInit {\n  @Input('selectedFile') selectedFile?:FsNodeFile\n\n  @Output('onStop') public onStop = new EventEmitter<void>();\n  @Output('onRun') public onRun = new EventEmitter<FsNodeFile>();\n  @Output('onConnect') public onConnect = new EventEmitter<FsNodeFile>();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onStopClick(){\n    this.onStop.emit()\n  }\n\n  public onRunClick(){\n    this.onRun.emit(this.selectedFile)\n  }\n\n  public onConnectClick(){\n    this.onConnect.emit(this.selectedFile)\n  }\n\n}\n","<div class=\"tal-code-editor-execbar\">\n    <div class=\"tal-code-editor-execbar-left\">\n        <h3>{{selectedFile?.name}}</h3>\n    </div>\n    \n    <div class=\"tal-code-editor-execbar-right\">\n        <button pButton icon=\"pi pi-stop\" class=\"tal-square-button\" (click)=\"onStopClick()\" title=\"Stop Pyodide\"></button>\n        <button pButton icon=\"pi pi-play\" class=\"tal-square-button\" (click)=\"onRunClick()\" title=\"Run locally\"></button>\n        <button pButton icon=\"pi pi-cloud-upload\" class=\"tal-square-button\" (click)=\"onConnectClick()\" title=\"Verify solution with TALight server\"></button>\n    </div>\n</div>","import { Component, ElementRef, EventEmitter, Input,  OnInit, Output, ViewChild } from '@angular/core';\nimport { encode } from 'base64-arraybuffer';\nimport { marked } from 'marked';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\nimport { MonacoEditorWidgetComponent } from '../monaco-editor-widget/monaco-editor-widget.component';\n\n// Editor UI\nexport enum EditorType{\n  None,\n  Code,\n  Archive,\n  Markdown,\n  Image,\n  Browser,\n  Unknown,\n  Default = Browser,\n}\n\nexport enum MatchMethod{\n  Auto,\n  Exact,\n  Glob,\n  Regex,\n  Default = Auto,\n}\nexport enum MatchType{\n  Auto,\n  Extension,\n  Mime, //TODO: \n  Default = Auto,\n}\n\n//Editor Options\nexport class EditorOptions{}\nexport class EditorOptionsMonaco extends EditorOptions{\n  constructor(\n    public language = \"python\",\n  ){super()}\n}\nexport class EditorOptionsBrowser extends EditorOptions{\n  constructor(\n    public embedded = true,\n    public mime = 'application/octet'\n  ){super()}\n}\n\n\n//File Assoc\nexport class FileAssociation{\n  constructor(\n    public pattern=\".*\",\n    public editorType = EditorType.None,\n    public editorOption?: EditorOptions,\n    public priority=0,\n    public matchMethod = MatchMethod.Auto, \n    public matchType = MatchType.Auto, \n  ){}\n  \n  match(file:FsNodeFile){\n    let parts = file.name.split(\".\")\n    console.log('FileAssociation:match:',parts)\n    if (parts.length > 1){\n      let ext = parts.splice(-1)[0]\n      console.log('FileAssociation:ext:',ext)\n      if(this.pattern==ext) { return true } \n      if(ext.match(this.pattern)){ return true } \n    } else {\n      //TODO: mime-magic matching\n    }\n\n    return false; //No match\n  }\n\n  static matchAll(file:FsNodeFile, associations:FileAssociation[]){\n    let matches:FileAssociation[] = []\n    associations.forEach((association)=>{\n      if(association.match(file)){\n        matches.push(association)\n      }\n    })\n\n    matches = matches.sort((a,b)=>{\n      return b.priority-a.priority\n    })\n\n    return matches;\n  }\n}\n\n\nexport class FileAssociationChoiceList{\n  public associations: FileAssociation[]\n  constructor(items: FileAssociation[]){ \n    this.associations = Array.from(items)\n  }\n  add(item: FileAssociation){ \n    if(this.associations.includes(item)){return;}\n    this.associations.push(item)\n  }\n  match(file:FsNodeFile){\n    let matches = FileAssociation.matchAll(file, this.associations)\n    console.log('FileAssociationChoiceList:match:',matches)\n    if(matches.length == 0){return null}\n    let bestMatch = matches[0]\n    return bestMatch;\n  }\n}\n\n\n\n@Component({\n  selector: 'tal-file-editor-widget',\n  templateUrl: './file-editor-widget.component.html',\n  styleUrls: ['./file-editor-widget.component.scss']\n})\nexport class FileEditorWidgetComponent implements OnInit {\n\n  EditorType = EditorType\n  public editorType = EditorType.None\n  public editorOption?:EditorOptions\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n\n  fileAssocList = new FileAssociationChoiceList([\n    //Code\n    new FileAssociation('py', EditorType.Code, new EditorOptionsMonaco('python')),\n    new FileAssociation('csv', EditorType.Code, new EditorOptionsMonaco('csv')),\n    new FileAssociation('json', EditorType.Code, new EditorOptionsMonaco('json')),\n    new FileAssociation('txt', EditorType.Code, new EditorOptionsMonaco('text')),\n    new FileAssociation('js', EditorType.Code, new EditorOptionsMonaco('javascript')),\n    new FileAssociation('yaml', EditorType.Code, new EditorOptionsMonaco('yaml')),\n    \n    //Markdown\n    new FileAssociation('md', EditorType.Markdown, new EditorOptionsMonaco('markdown')),\n\n    //Archive\n    new FileAssociation('tar', EditorType.Archive),\n    new FileAssociation('zip', EditorType.Archive),\n\n    //PDF\n    new FileAssociation('pdf', EditorType.Browser, new EditorOptionsBrowser(true,'application/pdf')),\n\n    //Images\n    new FileAssociation('png', EditorType.Browser, new EditorOptionsBrowser(true,'image/png')),\n    new FileAssociation('jpg', EditorType.Browser, new EditorOptionsBrowser(true,'image/jpg')),\n\n    //Other\n    new FileAssociation('.*', EditorType.Browser, new EditorOptionsBrowser(true),-10),\n  ])\n  \n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @ViewChild(\"monacoEditor\") public monacoEditor!: MonacoEditorWidgetComponent;\n  @ViewChild(\"browserEditor\") public browserEditor!: ElementRef;\n  @ViewChild(\"imageViewer\") public imageViewer!: ElementRef;\n  @ViewChild(\"markdownPreview\") public markdownPreview!: ElementRef;\n  \n\n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n\n  constructor(\n    private readonly themeService: ThemeService, \n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    console.log('selectedFile:',selectedFile)\n    this.selectEditor()\n  }\n\n  public selectEditor(){\n    if(!this._selectedFile) { \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    \n    let bestMatch = this.fileAssocList.match(this._selectedFile)\n    if(!bestMatch){ \n      this.editorType = EditorType.None\n      this.openEditor()\n      return\n    }\n    this.editorType = bestMatch.editorType\n    this.editorOption = bestMatch.editorOption\n\n    console.log(\"selectEditor:\",this.editorType)\n    console.log(\"selectEditor:editorOption:\",this.editorOption)\n    \n    this.openEditor()\n  }\n\n  public async openEditor(){\n    if (!this.selectedFile){return}\n    console.log('openEditor:', this.editorType.toString())\n    switch(this.editorType){\n      case EditorType.Markdown:\n        let markdownBox = this.markdownPreview.nativeElement as HTMLDivElement;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        markdownBox.innerHTML = await marked( this.selectedFile.content )\n        break;\n      case EditorType.Code: \n        let monacoOptions = this.editorOption as EditorOptionsMonaco;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          this.selectedFile.content = this.binDecoder.decode(this.selectedFile.content)\n        }\n        this.monacoEditor.selectedFile = this.selectedFile\n        this.monacoEditor.language = monacoOptions.language;\n        this.monacoEditor.updateEditorOptions()\n        break;\n      case EditorType.Browser: \n        let browserOptions = this.editorOption as EditorOptionsBrowser;\n        let iframe = this.browserEditor.nativeElement as HTMLIFrameElement;\n        let header = 'data:'+browserOptions.mime+';'\n        let body;\n        if(this.selectedFile.content instanceof ArrayBuffer){\n          console.log('openEditor:Browser:',Array.from(new Uint8Array(this.selectedFile.content) ) )\n          body = encode(this.selectedFile.content)\n        }else{\n          body = btoa(this.selectedFile.content)\n        }\n        let daraurl = header + 'base64,' + body\n\n        /*\n        let id = 'doclink'\n        let filename = this.selectedFile.name\n        let link = `<a id=\"${id}\" download=\"${filename}\" href=\"${daraurl}\"></a>`\n        let script = `<script>document.getElementById('${id}').click()</script>`\n        let template = `<html><body>${link}${script}</body></html>`\n        */\n        \n        iframe.src = daraurl\n        \n        break;\n    }\n  }\n\n  public shouldHide(editorType: EditorType){\n    return this.editorType !== editorType;\n  }\n\n  \n\n  //MonacoEditor\n\n  public monacoEditorDidChange(file:FsNodeFile){\n    this.onChange.emit(file)\n  }\n\n}\n","<div class=\"tal-file-editor-switch\">\n\n    <div [hidden]=\"shouldHide(EditorType.Unknown)\" class=\"tal-file-editor-case-unknown tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Formato file sconosciuto.</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.None)\" class=\"tal-file-editor-case-none tal-file-editor-case \">\n        <div class=\"tal-center-page\">\n            <p class=\"tal-placeholder-message\">Seleziona o crea un file</p>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Image)\" class=\"tal-file-editor-case-image tal-file-editor-case \">\n        <div class=\"tal-file-editor-image\">\n            <img #imageViewer/>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Code)\" class=\"tal-file-editor-case-code tal-file-editor-case \">\n        <div class=\"tal-file-editor-code\">\n            <tal-monaco-editor-widget class=\"tal-file-editor-monaco-widget\"\n                #monacoEditor\n                (onChange)=\"monacoEditorDidChange($event)\">\n            </tal-monaco-editor-widget>\n        </div>\n    </div>\n\n    <div [hidden]=\"shouldHide(EditorType.Markdown)\" class=\"tal-file-editor-case-markdown tal-file-editor-case \">\n        <div class=\"tal-markdown-preview\">\n            <div #markdownPreview class=\"tal-markdown-preview-content\" ></div>\n        </div>\n    </div>\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Browser)\" class=\"tal-file-editor-case-browser tal-file-editor-case \">\n        <div class=\"tal-browser-viewer\">\n            <iframe #browserEditor class=\"tal-browser-viewer-iframe\" ></iframe>\n        </div>\n    </div>\n\n    \n\n    <div [hidden]=\"shouldHide(EditorType.Archive)\" class=\"tal-file-editor-case-archive tal-file-editor-case \">\n        <div class=\"tal-archive-viewer tal-center-page\">\n            <div class=\"tal-placeholder-message\">{{selectedFile?.name}}</div>\n            <div class=\"tal-placeholder-message\">\n                TODO: file preview\n                <ul>\n                    <li>fileA.zip</li>\n                    <li>main.py</li>\n                    <li>.talight/talight.json</li>\n                </ul>\n                \n            </div>\n            <div class=\"tal-placeholder-message\">\n                <button #untarButton pButton \n                    class=\"tal-square-button\"\n                    label=\"Decompress\"\n                    [title]=\"'Untar: '+selectedFile?.name\"\n                    onclick=\"alert('TODO: Decompress')\"\n                    ></button>\n            </div>\n        </div>\n    </div>\n\n    \n</div>\n\n\n","import { Component, ElementRef, EventEmitter, Input, NgZone, OnInit, Output, QueryList, ViewChild, ViewChildren } from '@angular/core';\n\nimport { ConfirmationService } from 'primeng/api';\nimport { OverlayPanel } from 'primeng/overlaypanel';\nimport { FsNodeFile, FsNodeFolder, FsService, FsServiceDriver, Tar } from 'src/app/services/fs-service/fs.service';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\n\n\n@Component({\n  selector: 'tal-file-explorer-widget',\n  templateUrl: './file-explorer-widget.component.html',\n  styleUrls: ['./file-explorer-widget.component.scss']\n})\nexport class FileExplorerWidgetComponent implements OnInit {\n  public driver?: FsServiceDriver;\n  public rootDir = \"/\"\n  public driverName = 'pyodide'\n  public showHidden = false\n  public fsroot = FsService.EmptyFolder\n  \n  public editingValue: string = \"\";\n  public editingItem: FsNodeFile | FsNodeFolder | null = null;\n  public editingItemFolder: FsNodeFolder | null = null;\n  public editingItemError: boolean = false;\n\n  public newItemValue: string = \"\";\n  public newItemType: \"file\" | \"folder\" = \"file\";\n  public newItemFolder: FsNodeFolder | null = null;\n  public newItemError: boolean = false;\n\n  public selectedFile: FsNodeFile | null = null;\n  public selectedFolder: FsNodeFolder | null = null;\n  \n\n  @ViewChild(\"nameEditing\") public nameEditingElement?: ElementRef;\n  @ViewChild(\"newItemName\") public newItemNameElement?: ElementRef;\n\n  @ViewChildren(OverlayPanel) public panels?: QueryList<OverlayPanel>;\n\n  @Output(\"onUpdateRoot\") public onUpdateRoot = new EventEmitter<FsNodeFolder>();\n\n  @Output(\"onSelectFile\") public onSelectFile = new EventEmitter<FsNodeFile>();\n  \n  \n  @Output(\"showHiddenChanged\") public showHiddenChanged = new EventEmitter<boolean>(); \n\n  constructor(\n    private confirmationService: ConfirmationService, \n    private fs:FsService,\n    private python: PythonCompilerService,\n    private zone: NgZone\n    ) {\n    //this.driver = fs.getDriver('pyodide');\n    this.driver = fs.getDriver(this.driverName);\n    //alert(this.driver)\n    //this.driver?.writeFile(this.editingItem.path,this.editingItem)\n   }\n\n  ngOnInit() {\n    this.bindCollapseEvent();\n    //alert('init!');\n\n    //this.rootDir = this.driver?.rootDir ?? this.rootDir;\n    this.driver?.ready().then((ready)=>{\n      //alert('ready!');\n      \n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      })\n    })\n  }\n\n  refreshRoot(onDone?:()=>void){\n    this.driver?.scanDirectory(this.rootDir).then((folder)=>{\n      this.fsroot = folder ?? FsService.EmptyFolder\n\n      this.bindCollapseEvent();\n      this.onUpdateRoot?.emit(this.fsroot);\n      if(onDone){onDone()}\n    });\n    \n  }\n\n  private bindCollapseEvent() {\n    setTimeout(() => {\n      const rows = document.getElementsByClassName(\"collapse-toggle\");\n      for (let i = 0; i < rows.length; i++) {\n        if (!rows[i].classList.contains(\"bound\")) {\n          let row = rows[i];\n          row.addEventListener(\"click\", (event) => { this.handleClickEvent(event) });\n          row.classList.add(\"bound\");\n        }\n      }\n    }, 0);\n  }\n\n  public handleClickEvent(event:Event){\n    event.preventDefault();\n    event.stopPropagation();\n    const row = event.target as HTMLElement;\n    let newParent: HTMLElement = row;\n    let safeCount = 0;\n    do {\n      newParent = newParent.parentElement as HTMLElement;\n      safeCount++;\n    } while (!newParent.classList.contains(\"tal-folder-subtree\") && safeCount < 10);\n\n    if (safeCount < 10) {\n      newParent.classList.toggle(\"collapsed\");\n    }\n  }\n\n  public closeAllContextMenus(event: Event) {\n    event.preventDefault();\n    if (this.panels) {\n      this.panels.forEach(p => p.hide());\n    }\n  }\n\n  public selectFile(file: FsNodeFile) {\n    console.log('selectFile',file)\n    this.driver?.readFile(file.path).then((content)=>{\n      file.content = content ?? \"\";\n      this.selectedFile = file;\n      this.onSelectFile?.emit(file);\n    })\n    \n  }\n\n  public selectFolder(folder: FsNodeFolder) {\n    if (this.selectedFolder == folder){\n      this.selectedFolder == null;\n    }\n  }\n\n  public openSettings(){\n    if(!this.showHidden){\n      this.showHidden = true\n      this.refreshRoot(()=>{this.openSettings()})\n    }\n\n    console.log(\"openSettings\")\n    let projectFolder = this.fsroot.folders.find((item)=>{\n      return item.path + \"/\" == this.python.projectFolder\n    })\n    if(!projectFolder){return}\n    console.log(\"openSettings:projectFolder:\",projectFolder)\n    let configFile = projectFolder.files.find((file)=>{\n      return file.path == this.python.configPath\n    })\n    if(!configFile){return}\n    console.log(\"openSettings:configFile:\",configFile)\n        \n    this.selectFile(configFile);\n        \n  }\n  \n\n  public toggleHidden(){\n    this.showHidden = !this.showHidden;\n    this.refreshRoot()\n  }\n\n  public isVisibile(fsitem: FsNodeFile|FsNodeFolder){\n    let isHidden = fsitem.name.startsWith('.');\n    return this.showHidden || ( !this.showHidden && !isHidden ) \n  }\n\n  /** EDITING METHODS  **/\n  public startEditing(folder: FsNodeFolder, item: FsNodeFile | FsNodeFolder) {\n    this.editingItem = item;\n    this.editingValue = item.name;\n    this.editingItemFolder = folder;\n    this.editingItemError = false;\n\n    setTimeout(() => {\n      if (this.nameEditingElement) {\n        this.nameEditingElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public saveEditing() {\n    if (!this.editingItemError) {\n      if (this.editingItem) {\n        this.editingValue = this.editingValue.trim();\n        if (this.editingValue.length > 0) {\n          this.editingItem.name = this.editingValue;\n          this.onUpdateRoot?.emit(this.fsroot);\n        }\n      }\n    }\n    this.cancelEditing();\n  }\n\n  public cancelEditing() {\n    this.editingItem = null;\n    this.editingValue = \"\";\n    this.editingItemFolder = null;\n  }\n\n  public editItemChange() {\n    this.editingItemError = false;\n\n    if (this.editingItemFolder) {\n      const existingFile = this.editingItemFolder.files.find(f => f.name === this.editingValue);\n      const existingFolder = this.editingItemFolder.folders.find(f => f.name === this.editingValue);\n      if (existingFile || existingFolder) {\n        this.editingItemError = true;\n      }\n    }\n  }\n  /***************/\n\n  /** DELETE METHODS **/\n  public deleteFileClick(event: Event, file: FsNodeFile) {\n    if(!this.fsroot){return}\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questo file?',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFile(this.fsroot, file);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFile(currentFolder: FsNodeFolder, file: FsNodeFile) {\n    this.driver?.delete(file.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.files.indexOf(file) >= 0) {\n      currentFolder.files.splice(currentFolder.files.indexOf(file), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const folder: TalFolder = currentFolder.folders[i];\n        this.deleteFile(folder, file);\n      }\n    }\n    */\n  }\n\n  public deleteFolderClick(event: Event, folder: FsNodeFolder) {\n    if (event.target) {\n      this.confirmationService.confirm({\n        target: event.target,\n        message: 'Sei sicuro di voler eliminare questa cartella? Tutti i file e le cartelle contenute verranno eliminate.',\n        icon: 'pi pi-exclamation-triangle',\n        accept: () => {\n          //confirm action\n          this.deleteFolder(this.fsroot, folder);\n        },\n        reject: () => {\n          //reject action\n        }\n      });\n    }\n  }\n\n  private deleteFolder(currentFolder: FsNodeFolder, folder: FsNodeFolder) {\n    this.driver?.delete(folder.path).then(()=>{\n      this.refreshRoot();\n    })\n    /*\n    if (currentFolder.folders.indexOf(folder) >= 0) {\n      currentFolder.folders.splice(currentFolder.folders.indexOf(folder), 1);\n      this.change?.emit(this.root);\n    } else {\n      for (let i = 0; i < currentFolder.folders.length; i++) {\n        const subFolder: TalFolder = currentFolder.folders[i];\n        this.deleteFolder(subFolder, folder);\n      }\n    }\n    */\n  }\n  /***************/\n\n  /** CREATE METHODS **/\n  public syncFilesystem(folder: FsNodeFolder) {\n    setTimeout(() => { \n      //this.refreshRoot();\n      this.python.createPythonProject().then(()=>{\n        this.refreshRoot();\n        //alert('ready!');\n      });\n    }, 0);\n  }\n\n\n  public addNewItem(folder: FsNodeFolder, type: \"file\" | \"folder\") {\n    this.newItemValue = \"\";\n    this.newItemFolder = folder;\n    this.newItemType = type;\n    this.newItemError = false;\n\n    setTimeout(() => {\n      if (this.newItemNameElement) {\n        this.newItemNameElement.nativeElement.focus();\n      }\n    }, 0);\n  }\n\n  public cancelNewItem() {\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public saveNewItem() {\n    if (!this.newItemError) {\n      this.newItemValue = this.newItemValue.trim();\n      if (this.newItemValue.length > 0) {\n        if (this.newItemFolder) {\n          if (this.newItemType === \"file\") {\n            let path = this.newItemFolder.path + \"/\" + this.newItemValue\n            this.driver?.writeFile(path, \"\").then(()=>{\n              this.refreshRoot()\n            })\n            /*\n            this.newItemFolder.files.push({\n              name: this.newItemValue,\n              content: \"\"\n            } as TalFile );\n            */\n          } else {\n            this.driver?.createDirectory(\"./\"+this.newItemValue).then(()=>{\n              this.refreshRoot()\n            })\n            \n            this.newItemFolder.folders.push({\n              name: this.newItemValue,\n              path: \"./\"+this.newItemValue,\n              files: [],\n              folders: []\n            });\n\n            //this.bindCollapseEvent();\n          }\n          //this.refreshRoot()\n          //this.change?.emit(this.root);\n        }\n      }\n    }\n\n    this.newItemValue = \"\";\n    this.newItemFolder = null;\n  }\n\n  public newItemChange() {\n    this.newItemError = false;\n\n    if (this.newItemFolder) {\n      const existingFile = this.newItemFolder.files.find(f => f.name === this.newItemValue);\n      const existingFolder = this.newItemFolder.folders.find(f => f.name === this.newItemValue);\n      if (existingFile || existingFolder) {\n        this.newItemError = true;\n      }\n    }\n  }\n  /***************/\n  async upload(event:Event) {\n    if (!( event.target instanceof HTMLInputElement )){ return false; }\n    let target = event.target as HTMLInputElement\n    if(!target.files || target.files.length == 0){ return false; }\n\n    if(target.files.length == 1 && target.files[0].name.endsWith('.tal.tar') ){\n      let content = await target.files[0].arrayBuffer();\n      await this.importProject(content)\n    }else{\n      for(let i = 0; i<target.files.length; i++){\n        let file = target.files[i]\n        let content = await file.arrayBuffer();\n        console.log(\"upload:content:\", new Uint8Array(content))\n        let path = (!this.selectedFolder?\"/\":this.selectedFolder.path) + file.name\n        console.log('upload:', path, content)\n        await this.driver?.writeFile(path, content)\n      }\n    }\n    this.refreshRoot()\n    return true;\n  }\n\n  async importProject(tarball:ArrayBuffer) {\n    Tar.unpack(tarball, async (files, folders)=>{\n      console.log(\"extractTar:unpack:files\",files)\n      console.log(\"extractTar:unpack:folders\",folders)\n  \n      for(var idx in folders){\n        console.log(\"extractTar:createDirectory:\")\n        let folder = folders[idx]\n        let path = folder.path\n        console.log(\"extractTar:createDirectory:\",path)\n        await this.driver?.createDirectory(path)\n      }\n      console.log(\"extractTar:createDirectory:DONE\")\n      for(var idx in files){\n        console.log(\"extractTar:writeFile:\")\n        let file = files[idx]\n        let path = file.path\n        let content = file.content\n        console.log(\"extractTar:writeFile:\",path,content)\n        await this.driver?.writeFile(path, content)\n      }\n      console.log(\"extractTar:writeFile:DONE\")\n      this.refreshRoot()\n    })\n    console.log(\"import:data:\",tarball)\n        \n    return true\n  }\n\n  public export() {\n    let items = this.fs.treeToList(this.fsroot)\n    if(items.length == 0 ) {\n      console.log(\"export: No files found to be exported\")\n    }\n\n    console.log(\"export:items:\",items)\n    Tar.pack(items, (tarball:ArrayBuffer)=>{\n      let tarname = \"tal-project-\"+ Date.now()+\".tal.tar\"\n      console.log('export:tarball:',tarname,tarball)\n      this.triggerDownload(tarname, tarball, \"application/x-tar\")\n    })\n  }\n\n  public triggerDownload(filename:string, content:ArrayBuffer|string, mime=\"application/octet-stream\"){\n    let a = document.createElement(\"a\");\n    \n    const blob = new Blob([content], {type: mime});\n    let url = window.URL.createObjectURL(blob);\n    \n    a.style.display = \"none\";\n    a.download = filename;\n    a.href = url;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    window.URL.revokeObjectURL(url);\n  }\n}","<div class=\"tal-editor-files-tree\">\n  <div class=\"tal-editor-files-header\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton icon=\"pi pi-file\" class=\"tal-square-button\" title=\"Nuovo file\"\n        (click)=\"closeAllContextMenus($event); addNewItem(fsroot, 'file')\" pTooltip=\"Nuovo file\"></button>\n      <button pButton icon=\"pi pi-folder\" class=\"tal-square-button\" title=\"Nuova cartella\"\n        (click)=\"closeAllContextMenus($event); addNewItem(fsroot, 'folder')\" pTooltip=\"Nuova cartella\"></button>\n    </div>\n    <div class=\"tal-editor-files-right-bar\">\n      <button pButton icon=\"pi pi-sync\" class=\"tal-square-button\" title=\"Refresh\" (click)=\"closeAllContextMenus($event); syncFilesystem(fsroot)\"\n        pTooltip=\"Aggiorna\"></button>    \n    </div>\n  </div>\n\n\n  <div class=\"tal-editor-files-body\">\n    <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: fsroot }\"></ng-container>\n  </div>\n\n\n  <div class=\"tal-editor-files-footer\">\n    <div class=\"tal-editor-files-left-bar\">\n      <button pButton class=\"p-button-secondary tal-square-button\" icon=\"pi pi-save\" title=\"Salva/Esporta\"\n        (click)=\"closeAllContextMenus($event); export()\" pTooltip=\"Esporta\"></button>\n      \n      <button pButton class=\"p-button-secondary tal-square-button\" icon=\"pi pi-upload\" title=\"Upload/Importa\"\n        (click)=\"fileUpload.click()\" pTooltip=\"Upload/Import\"></button>\n      <input #fileUpload type=\"file\" style=\"display: none;\" (change)=\"upload($event)\"/>\n    </div>\n\n    <div class=\"tal-editor-files-right-bar\">\n\n      <button pButton icon=\"pi pi-eye\" class=\"tal-square-button\" *ngIf=\"showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Mostra file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-eye-slash\" class=\"tal-square-button\" *ngIf=\"!showHidden\" title=\"Toggle show hidden files\"\n        (click)=\"closeAllContextMenus($event); toggleHidden()\" pTooltip=\"Nascondi file nascosti\"></button>\n\n      <button pButton icon=\"pi pi-cog\" class=\"tal-square-button\" title=\"Settings\"\n        (click)=\"closeAllContextMenus($event); openSettings()\" pTooltip=\"Settings\"></button>\n      \n    </div>\n\n    \n  </div>\n\n\n\n</div>\n\n<ng-template #TalFolder let-folder>\n  <div class=\"tal-folder\">\n    <ng-container *ngFor=\"let subfolder of folder.folders\">\n      <div *ngIf=\"isVisibile(subfolder)\" class=\"tal-folder-subtree\">\n        <div class=\"tal-folder-row\" (contextmenu)=\"closeAllContextMenus($event); folderOverlayPanel.show($event)\" [class.opened]=\"subfolder===selectedFolder\">\n          <div class=\"tal-folder-title collapse-toggle\" (click)=\"closeAllContextMenus($event); selectFolder(subfolder)\"\n            (dblclick)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n            <i class=\"pi pi-chevron-down\"></i>\n            <ng-container *ngIf=\"editingItem!=subfolder;else ItemEditingTemplate\">\n              <i class=\"pi pi-folder\"></i>\n              <p>{{subfolder.name}}</p>\n            </ng-container>\n          </div>\n          <div class=\"tal-row-settings\" *ngIf=\"editingItem!=subfolder\">\n            <div class=\"tal-row-button\" (click)=\"folderOverlayPanel.show($event)\">\n              <i class=\"pi pi-ellipsis-h\"></i>\n            </div>\n          </div>\n\n          <p-overlayPanel #folderOverlayPanel>\n            <ng-template pTemplate>\n              <div class=\"tal-contextmenu-container\">\n                <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'file')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuovo file</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); addNewItem(subfolder, 'folder')\">\n                  <i class=\"pi pi-plus\"></i>\n                  <p>Nuova cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); startEditing(folder, subfolder)\">\n                  <i class=\"pi pi-pencil\"></i>\n                  <p>Rinomina cartella</p>\n                </div>\n                <div class=\"tal-contextmenu-item\"\n                  (click)=\"closeAllContextMenus($event); deleteFolderClick($event, subfolder)\">\n                  <i class=\"pi pi-trash\"></i>\n                  <p>Elimina cartella</p>\n                </div>\n              </div>\n            </ng-template>\n          </p-overlayPanel>\n\n        </div>\n        <div class=\"tal-subfolder\">\n          <ng-container *ngTemplateOutlet=\"TalFolder; context: { $implicit: subfolder }\"></ng-container>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"newItemFolder === folder\">\n      <ng-container *ngTemplateOutlet=\"NewItemTemplate\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngFor=\"let file of folder.files\">\n      <div *ngIf=\"isVisibile(file)\" class=\"tal-file\"\n        (contextmenu)=\"closeAllContextMenus($event); fileOverlayPanel.show($event)\" [class.opened]=\"file===selectedFile\">\n        <div class=\"tal-file-title\" (click)=\"closeAllContextMenus($event); selectFile(file)\"\n          (dblclick)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n          <ng-container *ngIf=\"editingItem!=file;else ItemEditingTemplate\">\n            <p>{{file.name}}</p>\n          </ng-container>\n        </div>\n        <div class=\"tal-row-settings\" *ngIf=\"editingItem!=file\">\n          <div class=\"tal-row-button\" (click)=\"fileOverlayPanel.show($event)\">\n            <i class=\"pi pi-ellipsis-h\"></i>\n          </div>\n        </div>\n\n        <p-overlayPanel #fileOverlayPanel>\n          <ng-template pTemplate>\n            <div class=\"tal-contextmenu-container\">\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); startEditing(folder, file)\">\n                <i class=\"pi pi-pencil\"></i>\n                <p>Rinomina file</p>\n              </div>\n              <div class=\"tal-contextmenu-item\" (click)=\"closeAllContextMenus($event); deleteFileClick($event, file)\">\n                <i class=\"pi pi-trash\"></i>\n                <p>Elimina file</p>\n              </div>\n            </div>\n          </ng-template>\n        </p-overlayPanel>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>\n\n<ng-template #ItemEditingTemplate>\n  <input #nameEditing class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"editingValue\" (blur)=\"saveEditing()\"\n    (keyup.enter)=\"saveEditing()\" (keyup.esc)=\"cancelEditing()\" (input)=\"editItemChange()\"\n    [class.error]=\"editingItemError\">\n</ng-template>\n\n<ng-template #NewItemTemplate>\n  <div class=\"tal-new-item\">\n    <input #newItemName class=\"tal-item-input\" type=\"text\" [(ngModel)]=\"newItemValue\" (blur)=\"saveNewItem()\"\n      (keyup.enter)=\"saveNewItem()\" (keyup.esc)=\"cancelNewItem()\" (input)=\"newItemChange()\"\n      [class.error]=\"newItemError\">\n  </div>\n</ng-template>\n\n<p-confirmDialog acceptLabel=\"Elimina\" acceptIcon=\"pi pi-trash\" rejectLabel=\"Annulla\">\n</p-confirmDialog>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { EditorComponent } from 'ngx-monaco-editor-v2';\nimport { noop } from 'rxjs';\nimport { FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ThemeService } from 'src/app/services/theme-service/theme.service';\n\n@Component({\n  selector: 'tal-monaco-editor-widget',\n  templateUrl: './monaco-editor-widget.component.html',\n  styleUrls: ['./monaco-editor-widget.component.scss']\n})\nexport class MonacoEditorWidgetComponent implements ControlValueAccessor, OnInit, OnChanges {\n  @ViewChild(\"monacoEditor\") public monacoEditor!: EditorComponent;\n  public editorOptions: any;\n  \n  \n  @Input(\"selectedFile\") private _selectedFile: FsNodeFile | null = null;\n  @Input(\"language\") public language: string = \"\";\n  //Code\n  \n  \n  \n  @Output('onChange') public onChange = new EventEmitter<FsNodeFile>();\n  \n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  constructor(\n    private readonly themeService: ThemeService,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.themeService.themeChanged.subscribe((theme) => {\n      this.updateEditorOptions();\n    });\n    \n    \n    this.updateEditorOptions();\n  }\n\n\n  ngAfterViewInit() {\n    //this.monacoEditor.registerOnChange((event:any)=>{ this.change(event) })\n    //this.monacoEditor.registerOnTouched((event:any)=>{ this.input(event) })\n\n    // this returns null\n  }\n  \n  ngOnChanges(): void {\n    this.updateEditorOptions();\n  }\n\n  public get selectedFile():FsNodeFile|null{\n    return this._selectedFile;\n  }\n\n  public set selectedFile(selectedFile:FsNodeFile|null){\n    this._selectedFile = selectedFile\n    if(!this._selectedFile) {\n      this.value = \"\"; \n      return; \n    }\n    let content = this._selectedFile.content; \n    if(typeof content === 'string' )\n    { \n      this.value = content\n    }\n\n  }\n\n  // CodeEditorControls\n  private onTouchedCallback: (_?: any) => void = noop;\n  private onChangeCallback: (_?: any) => void = noop;\n\n  public getFileContent():string{\n    if(!this._selectedFile){return \"\"}\n    let content = this._selectedFile.content\n    if (content instanceof ArrayBuffer){\n      content = this.binDecoder.decode(content)\n      this._selectedFile.content = content\n    }\n    return content\n  }\n\n  public setFileContent(text:string){\n    if(!this._selectedFile){return;}\n    this._selectedFile.content = text\n  }\n\n  \n\n\n  // get accessor\n  public get value(): string {\n    console.log(\"MonacoEditor:value:get\")\n    return this.getFileContent(); \n  }\n\n  // Set accessor including call the onchange callback\n  public set value(text: string) {\n    console.log(\"MonacoEditor:value:set\")\n    if(!this._selectedFile){return;}\n    let content=this.getFileContent()\n    console.log(\"MonacoEditor:value:old:new\",content,text)\n    if (text !== content) {\n      console.log(\"MonacoEditor:value:set:changed\")\n      this.setFileContent(text);\n      this.didChange()\n      \n    }\n  }\n  // From ControlValueAccessor interface\n  public writeValue(text: any) {\n    console.log(\"MonacoEditor:value:writeValue\")\n    if (text !== this.value) {\n      this.value = text;\n    }\n  }\n\n  \n  public didChange(): void {\n    console.log(\"monacoEditor:didChange\")\n    this.onChangeCallback();\n    this.onTouchedCallback();\n    if(!this.selectedFile){return;}\n    this.onChange.emit(this.selectedFile);\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // From ControlValueAccessor interface\n  public registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n\n\n  public updateEditorOptions(): void {\n    console.log(this.language);\n    this.editorOptions = {\n      language: this.language,\n      theme: this.themeService.themeName(),\n      automaticLayout: true\n    }\n  }\n    \n}\n","<div class=\"tal-monaco-editor\">\n    <ngx-monaco-editor class=\"tal-monaco-editor-ngx\"\n        #monacoEditor \n        [lang]=\"language\" \n        [options]=\"editorOptions\" \n        [(ngModel)]=\"value\">\n    </ngx-monaco-editor>\n</div>\n    ","import { Component, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport { PyodideState } from 'src/app/services/python-compiler-service/python-compiler.service';\n\nexport class OutputMessage{\n  constructor(\n    public content: string,\n    public type: OutputType,\n    public index: number = -1,\n    public timestamp: number = Date.now()\n  ){}\n}\n\nexport enum OutputType{\n  STDIN='stdin',\n  STDINAPI='stdinapi',\n  STDOUT='stdout',\n  STDERR='stderr',\n  SYSTEM='system',\n}\n\ntype TimeoutID=number;\n\n@Component({\n  selector: 'tal-output-widget',\n  templateUrl: './output-widget.component.html',\n  styleUrls: ['./output-widget.component.scss'],\n})\nexport class OutputWidgetComponent {\n  @Output('onInput') public onInput = new EventEmitter<InputEvent>();\n  @Output('onStdin') public onStdin = new EventEmitter<string>(); \n\n  @ViewChild(\"output\") public output!: ElementRef;\n  @ViewChild(\"sdtinInput\") public sdtinInput!: ElementRef;\n  @ViewChild(\"sdtinButton\") public sdtinButton!: ElementRef;\n  @ViewChild(\"pyodideIcon\") public pyodideIcon!: ElementRef;\n\n  public outputLines = new Array<OutputMessage>();\n  public pyodideState = PyodideState.Unknown\n  public pyodideStateIcon = \"pi-circle\"\n  public pyodideStateColor = \"\" //default: lightgray\n  public pyodideStateTooltip = \"State: Unknown\"\n  public stdinHighlight?:TimeoutID;\n  \n  constructor( public zone: NgZone){}\n  \n  ngOnInit() {}\n\n  ngOnDestroy() {}\n  \n  clearOutput() {\n    this.zone.run(() => this.outputLines = [])\n  }\n  \n  public print(content: string, outputType = OutputType.STDOUT) {\n    let msg = new OutputMessage(content, outputType, this.outputLines.length)\n    this.zone.run(() => this.outputLines.push(msg));\n    this.scrollToBottom()\n  }\n\n  public iconForType(message: OutputMessage){\n    let icon=''\n    let idx = message.index\n    if( idx > 0 && this.outputLines[idx-1].type == message.type){return icon;}\n    switch(message.type){\n      default:\n      case OutputType.STDIN:     icon='pi-angle-left'; break;\n      case OutputType.STDINAPI:  icon='pi-cloud-download'; break;\n      case OutputType.STDOUT:    icon='pi-angle-right'; break;\n      case OutputType.STDERR:    icon='pi-exclamation-triangle'; break;\n      case OutputType.SYSTEM:    icon='pi-info-circle'; break;\n    }\n    return icon;\n  }\n\n  public didStateChange(state:PyodideState,content?:string){\n    console.log(\"didStateChange:\")\n    this.pyodideState=state\n    this.pyodideStateTooltip = 'State: '+ this.pyodideState\n    \n    switch(state){\n      default:\n      case PyodideState.Unknown: \n        this.pyodideStateIcon=\"pi-circle\"\n        this.pyodideStateColor=\"\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Loading: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"orange\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Ready: \n        this.pyodideStateIcon=\"pi-circle\"\n        this.pyodideStateColor=\"green\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Run: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"green\"\n        this.enableStdin(false)\n        break;\n      case PyodideState.Stdin: \n        this.pyodideStateIcon=\"pi-spin pi-spinner\"\n        this.pyodideStateColor=\"orange\"\n        this.enableStdin(); \n        break;\n      case PyodideState.Error: \n        this.pyodideStateIcon=\"pi-circle-fill\"\n        this.pyodideStateColor=\"darkred\"\n\n        this.print(\"END: Error\", OutputType.STDERR)\n        this.print(content ?? \"Uknown error\", OutputType.STDERR)\n        this.enableStdin(false)\n        break;\n      case PyodideState.Success: \n        this.pyodideStateIcon=\"pi-circle-fill\"\n        this.pyodideStateColor=\"green\"\n        this.print(\"END: Success\", OutputType.SYSTEM)\n        if(content){\n          this.print(content, OutputType.SYSTEM)\n        }\n        this.enableStdin(false)\n      break;\n    }\n\n  }\n\n  public enableStdin(enable=true){\n    let btn = this.sdtinButton.nativeElement as HTMLButtonElement\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    btn.disabled = !enable\n    ipt.disabled = !enable\n    this.enableHighlight(enable)\n  }\n  \n  public enableHighlight(enable=true, color?:string){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n\n    let toggleColor = (clear?:boolean)=>{\n      if (clear) { ipt.style.borderColor == \"\" }\n      else {\n        ipt.style.borderColor = ipt.style.borderColor == \"\" ? color ?? \"orange\" : \"\"\n      }\n    }\n\n    if(enable && this.stdinHighlight){ return; }\n    if(!enable && !this.stdinHighlight){ return; }\n    if(enable){\n      this.stdinHighlight = window.setInterval(toggleColor,1000) //window.setInterval -> number; setInterval -> strange object\n    }else{\n      clearInterval(this.stdinHighlight);\n      this.stdinHighlight=undefined\n      setTimeout(()=>{toggleColor(true)})\n    }\n  }\n  \n\n  public focusStdin(){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    ipt.style.backgroundColor = \"\"\n    this.enableHighlight(false)\n  }\n\n  public blurStdin(){\n    let ipt = this.sdtinInput.nativeElement as HTMLInputElement\n    ipt.style.backgroundColor = \"\"\n    let shouldHighlight = this.pyodideState==PyodideState.Stdin\n    this.enableHighlight(shouldHighlight)\n  }\n\n  public sendStdin() {\n    let msg = this.sdtinInput.nativeElement.value ?? \"\"\n    msg = msg.trim()\n    console.log(\"sendStdin:\", this.sdtinInput)\n    console.log(\"sendStdin:msg\", msg)\n    if (msg == \"\") { return }\n\n    this.sdtinInput.nativeElement.value = \"\"\n    this.onStdin.emit(msg+\"\\n\");\n  }\n\n  public sendOnEnter(event: KeyboardEvent) {\n    if (event.key == 'Enter') { this.sendStdin(); }\n  }\n\n\n  public scrollToBottom(){\n    // Scroll #console-bottom-scroll to bottom\n    setTimeout(() => {\n      const scrollEl = document.getElementById(\"tal-output-widget-scroll-id\");\n      if (scrollEl) {\n        scrollEl.scrollTop = scrollEl.scrollHeight;\n        console.log(scrollEl.scrollTop, scrollEl.scrollHeight)\n      }\n    });\n  }\n}\n\n\n","\n<div class=\"tal-output-widget\">\n    <div class=\"tal-output-widget-row tal-output-widget-title\">\n        <div class=\"tal-output-widget-row-label\">Output</div>\n        <div class=\"tal-output-widget-row-icon\">\n            <i #pyodideIcon class=\"pi {{pyodideStateIcon}}\" [pTooltip]=\"pyodideStateTooltip\" [style]=\"'font-size:100%; color:' + pyodideStateColor\"></i>\n        </div>\n    </div>\n\n  <div class=\"tal-output-widget-row tal-output-widget-row-scroll\">\n      <p-scrollPanel class=\"tal-output-widget-pscroll\" id=\"tal-output-widget-scroll-id\">\n          <div class=\"tal-output-widget-inner-row tal-output-widget-inner-row-{{line.type}}\" *ngFor=\"let line of outputLines\">\n              <div class=\"tal-output-widget-icon\">\n                  <i class=\"pi {{iconForType(line)}}\"></i>\n              </div>\n              <div class=\"tal-output-widget-text\">{{line.content}}</div>\n          </div>\n      </p-scrollPanel>\n  </div>\n\n  <div class=\"tal-output-widget-row tal-output-widget-row-stdin\">\n      <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-trash\" (click)=\"clearOutput()\" title=\"Clear output\"\n        pTooltip=\"Pulisci output\"></button>\n      <input pInput #sdtinInput \n             class=\"tal-output-widget-stdin-input\" \n             (focus)=\"focusStdin()\"\n             (blur)=\"blurStdin()\"\n             (keydown)=\"sendOnEnter($event)\"\n             placeholder=\"Input del programma\" />\n      <button pButton #sdtinButton icon=\"pi pi-send\" class=\"tal-output-widget-stdin-button  tal-square-button\" (click)=\"sendStdin()\" title=\"Send\" pTooltip=\"Invia\"></button>\n  </div>\n\n</div>\n\n","import { Component, EventEmitter, Output, NgZone, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ApiService } from 'src/app/services/api-service/api.service';\nimport { FsNodeFolder, FsNodeFile } from 'src/app/services/fs-service/fs.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { PyodideDriver } from 'src/app/services/python-compiler-service/pydiode-driver';\nimport { PythonCompilerService } from 'src/app/services/python-compiler-service/python-compiler.service';\nimport { OverlayOptions } from 'primeng/api';\nimport { ServiceDescriptor, ProblemDescriptor, ArgsMap, FilesMap, FileDescriptor, ArgDescriptor } from 'src/app/services/problem-manager-service/problem-manager.types';\nimport { Dropdown } from 'primeng/dropdown';\n\n\nexport class ServiceMenuEntry {\n  constructor(\n    public name = \"\",\n    public descriptor: ServiceDescriptor,\n  ){}\n}\n\n\nexport class ProblemMenuEntry {\n  constructor(\n    public name = \"\",\n    public descriptor: ProblemDescriptor,\n  ){}\n}\n\n@Component({\n  selector: 'tal-problem-widget',\n  templateUrl: './problem-widget.component.html',\n  styleUrls: ['./problem-widget.component.scss'],\n})\nexport class ProblemWidgetComponent {\n  @Output('onProblemChanged') public onProblemSelected = new EventEmitter<ProblemDescriptor>();\n  @Output('onServiceChanged') public onServiceSelected = new EventEmitter<ServiceDescriptor>();\n  @Output('onAttachments') public onAttachments = new EventEmitter<ArrayBuffer>();\n  \n  @ViewChild(\"problemDropdown\") public problemDropdown!: ElementRef\n  @ViewChild(\"serviceDropdown\") public serviceDropdown!: ElementRef\n  public dropdownOptions: OverlayOptions;\n\n  problemsMenu = new Array<ProblemDescriptor>();\n  servicesMenu = new Array<ServiceDescriptor>();\n\n  selectedProblem?: ProblemDescriptor;\n  selectedService?: ServiceDescriptor;\n  selectedArgs?: ArgsMap;\n  selectedFiles?: FilesMap;\n  selectedFile?: FileDescriptor;\n\n  filePathList = new Array<{path:string}>();\n\n  driver?:PyodideDriver\n  \n  regexFormat = true;\n  showRegex = true;\n  loading = false\n\n  problemSub: Subscription\n\n  constructor( public zone: NgZone,\n               public api: ApiService,\n               public pm: ProblemManagerService,\n               public python: PythonCompilerService,)\n  {\n    this.driver = python.driver;\n    this.problemSub = this.pm.onProblemsChanged.subscribe((clear:boolean)=>{ this.problemsDidChange(clear) })\n\n    // https://primefaces.org/primeng/overlay\n    //this.dropdownOptions = {appendTo:'body', mode: 'modal'}\n    this.dropdownOptions = {appendTo:'body'}\n  }\n  \n  ngOnInit() {\n    this.reloadProblemList();\n  }\n\n  ngOnDestroy() {\n    this.problemSub?.unsubscribe()\n  }\n\n  isLoading(){\n    return this.loading;\n  }\n\n  refreshFilePathList(){\n    this.filePathList = [...this.filePathList]\n  }\n\n//args\n  clenupRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\((.*)\\)/,'$1')\n    text = text.replace(/\\|/g,' OR ')\n    return text;\n  }\n\n  cleanupName(name:string){\n    var pattern = new RegExp('[-_. ]+','g');\n    name = name.replace(pattern, \" \")\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    return name\n  }\n\n  readableRegex(re:RegExp){\n    let text = re+\"\"\n    text = text.replace(/\\/(.*)\\//,'$1')\n    text = text.replace(/\\^(.*)\\$/,'$1')\n    text = text.replace(/\\[([^\\]]*)\\]/, (match:string, content:string)=>{\n      if ( content.startsWith('^') ){\n        return ' invalid('+content.slice(1)+') '\n      }\n      return ' valid('+content.slice(1)+') '\n    })\n    text = text.replace(/\\(([^|]+|)*([^|]+)*\\)/g,(match:string, options:string, last:string)=>{\n      console.log('OROR:',match, options, last)\n      return text.replace(/\\((.*)\\)/,'$1').replace(/\\|/g,' OR ')\n    })\n    return text\n  }\n\n  async argDidFocus(arg:ArgDescriptor,event:Event){\n    console.log('argDidFocus:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n    console.log('argDidFocus:show!')\n    panel.style.display = \"flex\"\n    if(regex.style.color == \"red\"){\n      regex.style.color = \"orange\"\n    }else{\n      regex.style.color = \"\"\n    }\n    \n  }\n\n  async argDidChange(arg:ArgDescriptor,event:Event){\n    console.log('argDidChange:',arg,event)\n    let idPanel = 'args-regex-panel-' + arg.key\n    let idRegex = 'args-regex-' + arg.key\n    \n    let panel = document.getElementById(idPanel)\n    let regex = document.getElementById(idRegex)\n    \n    if(!(panel instanceof HTMLElement)) {return}\n    if(!(regex instanceof HTMLElement)) {return}\n\n    console.log('argDidFocus:validate')\n    let issues = this.pm.validateArg(arg)\n    if(issues !== null){\n      regex.style.color = \"red\"\n      panel.style.display = \"flex\"\n    }else if(arg.value != arg.default){\n      regex.style.color = \"green\"\n      panel.style.display = \"flex\"\n    }else{\n      regex.style.color = \"\"\n      panel.style.display = \"none\"\n    }\n  }\n\n  async argDidReset(arg:ArgDescriptor,event:Event){\n    console.log('argDidReset:',arg.key,event)\n    arg.value = arg.default ?? \"\"\n    this.argDidChange(arg,event)\n  }\n\n\n//files\n  async fileDidFocus(file:FileDescriptor,event:Event){\n    console.log('fileDidFocus:',file.key,event)\n  }\n\n  async fileDidChange(file:FileDescriptor,event:any){\n    console.log('fileDidChange:',file.key,event)\n    \n    if(!(\"value\" in event)){return;}\n    console.log('fileDidChange:value:found',event.value)\n    let path = event.value\n    \n    /*\n    if(!(\"path\" in value )){return;}\n    console.log('fileDidChange:path:found',value.path)\n    let path = value.path\n    */\n    \n    let idDropdown = 'file-dropdown-' + file.key\n    let dropdown = document.getElementById(idDropdown)\n    if(!(dropdown instanceof HTMLElement)) {return}\n    console.log('fileDidChange:dropdown:found',dropdown)\n    \n    if (path == \"\"){\n      dropdown.style.color = \"\"\n      file.value = \"\"\n      return\n    }\n\n    let pathExist = await this.driver?.exists(path)\n    console.log('fileDidChange:pathExist:',pathExist)\n    if(!pathExist){\n      dropdown.style.color = \"red\"\n      file.value = \"\"\n    }else{\n      dropdown.style.color = \"green\"\n      file.value = path\n    }\n  }\n  \n  async fileDidReset(file:FileDescriptor,event:Event){\n    console.log('fileDidReset:',file.key,event)\n    let idDropdown = 'file-dropdown-' + file.key\n    let dropdown = document.getElementById(idDropdown)\n    console.log('fileDidReset:', dropdown)\n    if(!(dropdown instanceof Dropdown)) {return}\n    dropdown.clear(event)\n    file.value = \"\"\n    \n    this.refreshFilePathList()\n  }\n\n//UI\n  async toggleShowRegex(arg:ArgDescriptor,event:Event){\n    let idPanel = 'args-regex-panel-' + arg.key\n    let panel = document.getElementById(idPanel)\n    if(!(panel instanceof HTMLElement)) {return}\n    panel.style.display = panel.style.display == 'none' ? 'flex' : 'none';\n  }\n\n  async toggleRegexFormat(arg:ArgDescriptor,event:Event){\n    let idRegex = 'args-regex-'+arg.key;\n    let regex = document.getElementById(idRegex)\n    if(!(regex instanceof HTMLElement)) {return}\n    \n    if(regex.classList.contains('format-regex-simple')){\n      regex.classList.remove('format-regex-simple')\n      regex.innerText = arg.regex + \"\"\n    }else{\n      regex.classList.add('format-regex-simple')\n      regex.innerText = this.clenupRegex(arg.regex)\n    }\n  }\n\n  async reloadProblemList(){\n    this.selectedProblem = undefined;\n    this.selectedService = undefined;\n    this.selectedArgs = undefined;\n    this.selectedFiles = undefined;\n    \n\n    this.problemsMenu = []\n    this.servicesMenu = []\n    this.loading = true\n\n\n    console.log\n    this.pm.updateProblems()\n  }\n\n  async problemsDidChange(clear:boolean) {\n\n    this.problemsMenu = []\n    this.servicesMenu = []\n    this.loading = true\n\n\n    if(clear) return\n    \n    let problemsMenu = new Array<ProblemDescriptor>(); // [...this.pm.problemList] // ez ?\n    this.pm.problemList.forEach((problemDesc)=>{      \n      problemsMenu.push(problemDesc)\n    })\n    problemsMenu = problemsMenu.sort((a,b)=>a.name.toLowerCase()>b.name.toLowerCase()?1:a.name.toLowerCase()<b.name.toLowerCase()?-1:0)\n    console.log('updateProblemsUI:problemsMenu:', problemsMenu)\n    \n    this.problemsMenu = problemsMenu\n    this.loading = false\n\n  }\n\n\n\n//API \n  async onApiError(message: string) {\n    console.log(\"API Error: \", message)\n  }\n\n  async didSelectProblem() {\n    this.selectedService = undefined;\n    this.selectedArgs = undefined;\n    this.selectedFiles = undefined;\n    \n    console.log('didSelectProblem:', this.selectedProblem)\n    if (!this.selectedProblem){return}\n    this.pm.selectProblem(this.selectedProblem)\n    \n\n    let servicesMenu = new Array<ServiceDescriptor>();\n    this.selectedProblem.services.forEach((serviceDesc)=>{\n      servicesMenu.push(serviceDesc)\n    })\n    servicesMenu = servicesMenu.sort((a,b)=>a.name.toLowerCase()>b.name.toLowerCase()?1:a.name.toLowerCase()<b.name.toLowerCase()?-1:0)\n    this.servicesMenu = servicesMenu\n    console.log('didSelectProblem:servicesMenu:', servicesMenu)\n    this.servicesMenu = servicesMenu\n    \n    this.onProblemSelected.emit(this.selectedProblem)\n  }\n\n  async didSelectService() {\n    console.log('didSelectService:', this.selectedService)\n    if (!this.selectedService){return}\n    this.pm.selectService(this.selectedService)\n    this.selectedArgs = this.selectedService.args\n    this.selectedFiles = this.selectedService.files\n    console.log('didSelectService:selectedArgs:', this.selectedArgs)\n    this.onServiceSelected.emit(this.selectedService)   \n\n    this.refreshFilePathList()\n  }\n\n  async apiDownloadAttachment() {\n    console.log('apiDownloadAttachment:', this.selectedProblem)\n    if (!this.selectedProblem) { return }\n\n    let onAttachment = () => { console.log(\"Attachment packet received\") };\n    let onAttachmentInfo = (info: any) => { console.log('apiDownloadAttachment:info:', info) };\n\n    let onData = (data: ArrayBuffer) => {\n      console.log(\"apiDownloadAttachment:onData:\", data);\n      this.onAttachments.emit(data);\n    };\n\n    let req = this.api.GetAttachment(this.selectedProblem.name, onAttachment, onAttachmentInfo, onData);\n    req.onError = (error) => { this.onApiError(error) };\n\n  }\n\n}\n\n\n","<div class=\"tal-problem-widget\">\n  <!-- ROW:title -->\n  <!--\n  <div class=\"tal-problem-widget-args-row\">\n    <div class=\"tal-problem-widget-label\">Problem</div>\n  </div>\n  -->\n\n  <!-- API: PROBLEMS and SERVICES -->\n  <div class=\"tal-problem-widget-row tal-problem-widget-row-problem\">\n    <p-dropdown #problemDropdown\n                placeholder=\"Seleziona un problema\" \n                class=\"tal-problem-widget-problem-selector\" \n                scrollHeight=\"50rem\"\n                [overlayOptions]=\"dropdownOptions\"\n                panelStyleClass=\"tal-problem-widget-problem-selector-panel\"\n                [options]=\"problemsMenu\"\n                [(ngModel)]=\"selectedProblem\" \n                optionLabel=\"name\"\n                (onChange)=\"didSelectProblem()\">\n    \n                <ng-template let-option pTemplate=\"selectedItem\">\n                  <div class=\"tal-problem-widget-problem-selected\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n                <ng-template let-option pTemplate=\"item\">\n                  <div class=\"tal-problem-widget-problem-item\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n    </p-dropdown>\n\n    <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-refresh\" title=\"Refresh\" pTooltip=\"Refresh\"\n      (click)=\"reloadProblemList()\" *ngIf=\"!isLoading()\"></button>\n\n    <button pButton class=\"p-button-danger tal-square-button\" icon=\"pi pi-spin pi-spinner\" title=\"Refresh\" pTooltip=\"Refresh\" disabled\n      *ngIf=\"isLoading()\"></button>\n  </div>\n\n  <div class=\"tal-problem-widget-row tal-problem-widget-row-problem\">\n    <p-dropdown #serviceDropdown\n                placeholder=\"Seleziona un servizio\" \n                class=\"tal-problem-widget-problem-selector\" \n                scrollHeight=\"50rem\"\n                [overlayOptions]=\"dropdownOptions\"\n                panelStyleClass=\"tal-problem-widget-problem-selector-panel\"\n                [options]=\"servicesMenu\"\n                [(ngModel)]=\"selectedService\" \n                optionLabel=\"name\"\n                (onChange)=\"didSelectService()\">\n    \n                <ng-template let-option pTemplate=\"selectedItem\">\n                  <div class=\"tal-problem-widget-problem-selected\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n\n                <ng-template let-option pTemplate=\"item\">\n                  <div class=\"tal-problem-widget-problem-item\">{{cleanupName(option.name)}}</div>\n                </ng-template>\n    </p-dropdown>\n\n    <button pButton class=\"p-button-help tal-square-button\" icon=\"pi pi-download\" (click)=\"apiDownloadAttachment()\"\n      title=\"Download Attachments\" pTooltip=\"Scarica allegati\"></button>\n\n  </div>\n\n  <div class=\"tal-problem-widget-args-row\">\n    <p-tabView>\n      <p-tabPanel header=\"Arguments\">\n\n        <!-- ROW:title -->\n        <ng-template pTemplate=\"header\" class=\"tal-problem-widget-args-row\">\n          <div class=\"tal-problem-widget-label\">Arguments</div>\n        </ng-template>\n\n\n        <!-- API: ARGS -->\n        <div class=\"tal-problem-widget-row tal-problem-widget-args\">\n          <!-- ROW: empty -->\n          <div class=\"tal-problem-widget-args-row stretch-flex\" *ngIf=\"!selectedArgs || selectedArgs.size==0\">\n            <div class=\"tal-problem-widget-args-row-no-params\">\n              <div>No arguments found.</div>\n            </div>\n          </div>\n\n          <!-- ROW: arg -->\n          <div class=\"tal-problem-widget-args-row\" *ngFor=\"let arg of selectedArgs | keyvalue; \">\n            <div class=\"tal-problem-widget-args-subrow\">\n              <!-- CELL: info -->\n              <div class=\"tal-problem-widget-args-row-info\">\n                <i #argsIcons class=\"pi pi-info-circle\" [id]=\"'args-icon-'+arg.value.key\"\n                  (click)=\"toggleShowRegex(arg.value,$event)\" style=\"cursor: pointer;\"\n                  [title]=\"arg.value.regex+''\"></i>\n              </div>\n              <!-- CELL: name -->\n              <div class=\"tal-problem-widget-args-row-name\" [title]=\"arg.value.name\">{{arg.value.name}}</div>\n\n              <!-- CELL: field -->\n              <div class=\"tal-problem-widget-args-row-field\">\n                <input pInputText type=\"text\" class=\"top-bar-url-input p-inputtext-sm\" [(ngModel)]=\"arg.value.value\"\n                  [placeholder]=\"arg.value.default\" [title]=\"arg.value.name +': '+arg.value.regex\" (change)=\"argDidChange(arg.value,$event)\"\n                  (blur)=\"argDidChange(arg.value,$event)\" (focus)=\"argDidFocus(arg.value,$event)\">\n              </div>\n\n              <!-- CELL: reset -->\n              <div class=\"tal-problem-widget-args-row-actions\">\n                <button pButton class=\"tal-square-button\" icon=\"pi pi-trash\" (click)=\"argDidReset(arg.value,$event)\"\n                  title=\"Reset to default\" pTooltip=\"Reset to default\"></button>\n              </div>\n            </div>\n\n            <!-- regex -->\n            <div class=\"tal-problem-widget-args-subrow\" [id]=\"'args-regex-panel-'+arg.value.key\"\n              style=\"display:none; cursor: pointer;\" (dblclick)=\"toggleRegexFormat(arg.value,$event)\">\n              <div class=\"tal-problem-widget-args-subrow-regexpr format-regex-simple\"\n                [id]=\"'args-regex-'+arg.value.key\">{{this.clenupRegex(arg.value.regex)}}</div>\n            </div>\n          </div>\n\n        </div>\n      </p-tabPanel>\n\n      <p-tabPanel header=\"Files\">\n        <!-- ROW:title -->\n        <ng-template pTemplate=\"header\" class=\"tal-problem-widget-args-row\">\n          <div class=\"tal-problem-widget-label\">Files</div>\n        </ng-template>\n\n        <!-- API: ARGS -->\n        <div class=\"tal-problem-widget-row tal-problem-widget-args\">\n          <!-- ROW: empty -->\n          <div class=\"tal-problem-widget-args-row stretch-flex\" *ngIf=\"!selectedFiles || selectedFiles.size==0\">\n            <div class=\"tal-problem-widget-args-row-no-params\">\n              <div>No files found.</div>\n            </div>\n          </div>\n\n\n          <!-- ROW: arg -->\n          <div class=\"tal-problem-widget-args-row\" *ngFor=\"let file of selectedFiles | keyvalue; \">\n              <div class=\"tal-problem-widget-args-subrow\">\n                <!-- CELL: info -->\n                <div class=\"tal-problem-widget-args-row-info\">\n                    <i #argsIcons class=\"pi pi-file\"></i>\n                </div>\n                <!-- CELL: name -->\n                <div class=\"tal-problem-widget-args-row-name\">{{file.value.name}}</div>\n\n                <!-- CELL: field -->\n                <div class=\"tal-problem-widget-args-row-field\">\n                    <p-dropdown placeholder=\"Select a file\" \n                                [id]=\"'file-dropdown-'+file.value.key\"\n                                (onChange)=\"fileDidChange(file.value,$event)\"\n                                [overlayOptions]=\"dropdownOptions\"\n                                styleClass=\"tal-problem-widget-files-dropdown\"\n                                panelStyleClass=\"tal-problem-widget-files-dropdown-panel\"\n                                [options]=\"filePathList\"\n                                optionValue=\"path\"\n                                optionLabel=\"path\"\n                                dataKey=\"path\"\n                                [(ngModel)]=\"file.value.value\"\n                                [showClear]=\"true\">\n      \n                        <ng-template pTemplate=\"selectedItem\" let-option>\n                            <div class=\"tal-problem-widget-files-selected\">\n                              <div>{{option.path}}</div>\n                            </div>\n                        </ng-template>\n        \n        \n                        <ng-template pTemplate=\"item\" let-option>\n                            <div class=\"tal-problem-widget-files-item\">\n                              <div>{{option.path}}</div>\n                            </div>\n                        </ng-template>\n\n\n                    </p-dropdown>\n                </div>\n\n                <!-- CELL: reset -->\n                <!--\n                <div class=\"tal-problem-widget-args-row-actions\">\n                    <button pButton class=\"tal-square-button\" icon=\"pi pi-trash\" \n                            (click)=\"fileDidReset(file.value,$event)\"\n                            title=\"Reset to default\" \n                            pTooltip=\"Reset to default\"></button>\n                </div>\n                -->\n              </div>\n          </div>\n        </div>\n      </p-tabPanel>\n    </p-tabView>\n  </div>\n</div>","import { Component, ElementRef, NgZone, OnInit, ViewChild } from '@angular/core';\nimport { AutoComplete } from 'primeng/autocomplete';\nimport { ApiService, ApiState } from 'src/app/services/api-service/api.service';\nimport { NotificationManagerService, NotificationMessage, NotificationType } from 'src/app/services/notification-mananger-service/notification-manager.service';\nimport { ProblemManagerService } from 'src/app/services/problem-manager-service/problem-manager.service';\nimport { AppTheme, ThemeService } from 'src/app/services/theme-service/theme.service';\n\n\n@Component({\n  selector: 'tal-topbar-widget',\n  templateUrl: './topbar-widget.component.html',\n  styleUrls: ['./topbar-widget.component.scss']\n})\nexport class TopbarWidgetComponent implements OnInit {\n\n  @ViewChild(\"urlInput\") public urlInput?: AutoComplete;\n  @ViewChild(\"statusDot\") public statusDot?: ElementRef;\n  @ViewChild(\"messageBox\") public messageBox?: ElementRef;\n  \n  \n  \n  \n\n  url;\n  lastUrl;\n  urlCache:string[] = []\n  escapeRegEx = /[.*+?^${}()|[\\]\\\\]/g\n  urlInputClass = \"\"\n  subApiState\n  subProblemError\n  subOnNotify\n  currentNotification?:NotificationMessage\n\n  constructor( public readonly themeService: ThemeService, \n               public api: ApiService,\n               public zone: NgZone,\n               public pm: ProblemManagerService,\n               public nm: NotificationManagerService\n             ) {\n    this.url = api.url;\n    this.lastUrl=this.url+\"\";\n    this.urlCache = [...this.api.urlCache]\n    this.subApiState = this.api.onApiStateChange.subscribe((state:ApiState)=>{this.updateState(state)})\n    this.subProblemError = this.pm.onError.subscribe((_)=>{this.stateBad()})\n    this.subOnNotify = this.nm.onNotification.subscribe((msg:NotificationMessage): void=>{this.showNotification(msg)})\n  }\n\n  ngOnInit(): void {}\n\n  public get changeThemIcon(): string {\n    return this.themeService.currentTheme == AppTheme.dark ? 'pi-sun' : 'pi-moon';\n  }\n\n  public toggleTheme() {\n    this.themeService.toggleTheme();\n  }\n\n  public iconForNotification(){\n    let icon = \"pi-info\"\n    switch(this.currentNotification?.type){\n      default:\n      case NotificationType.System:\n      case NotificationType.Debug:\n      case NotificationType.Info:\n        icon = \"pi-info\"\n        break;\n      case NotificationType.Warning:\n      case NotificationType.Error:\n        icon = \"pi-error\"\n    }\n    return icon\n  }\n\n  showNotification(msg:NotificationMessage, timeout=3){\n    let box = this.messageBox?.nativeElement as HTMLElement\n    box.style.display = \"flex\"\n    this.currentNotification=msg\n    setTimeout(()=>{this.hideNotification()}, timeout * 1000)\n  }\n\n  hideNotification(){\n    let box = this.messageBox?.nativeElement as HTMLElement\n    box.style.display = \"none\"\n    this.currentNotification=undefined\n  }\n  \n\n  filterSuggestions(event:any) {\n    let query = event.query.replace(this.escapeRegEx, '\\\\$&')\n    let filter = new RegExp(\".*\"+query+\".*\")\n    let urlCache:string[] = []\n    this.api.urlCache.forEach( (url:string) => {\n      if(url.match(filter)){\n        urlCache.push(url)\n      }\n    });\n    this.urlCache=urlCache\n  }\n\n  public updateState(state:ApiState){\n    let dot = this.statusDot!.nativeElement as HTMLElement\n    switch(state){\n      case ApiState.Idle: dot.style.color=\"\"; break;\n      case ApiState.Good: dot.style.color=\"green\"; break;\n      case ApiState.Maybe: dot.style.color=\"orange\"; break;\n      case ApiState.Bad: dot.style.color=\"darkred\"; break;\n    }\n  }\n\n  public stateIdle(){ this.updateState(ApiState.Idle); }\n  public stateGood(){ this.updateState(ApiState.Good); }\n  public stateMaybe(){ this.updateState(ApiState.Maybe); }\n  public stateBad(){ this.updateState(ApiState.Bad); }\n\n  public changeURL(event:Event) {\n    if(this.lastUrl == this.url){return}\n    this.stateIdle()\n    let dot = this.statusDot!.nativeElement as HTMLElement\n    console.log(\"changeURL:dot:\", dot)\n    console.log(\"changeURL:event:\", event)\n    let url = this.url;\n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.setUrl(url) ){\n      this.stateBad()\n      console.log(\"changeURL:setURL:failed\")\n    }else{\n      this.url = this.api.url;\n      console.log(\"changeURL:setURL:success\")\n      this.urlCache = this.api.urlCache\n      this.stateMaybe()\n      this.pm.updateProblems()\n    }\n    \n    console.log(\"changeURL:urlCache:after:\", this.urlCache )\n    console.log(\"changeURL:url:\", this.url )\n    this.lastUrl = this.url + \"\"\n  }\n\n  public removeURL(url:string, event:Event) {\n    if(event){ event.preventDefault();event.stopPropagation();event.stopImmediatePropagation(); }\n    \n    console.log(\"changeURL:urlCache:before:\",this.urlCache)\n    if( !this.api.removeFromCache(url) ){\n      console.log(\"changeURL:removeURL:done\")\n    }\n    this.urlCache = this.api.urlCache\n    \n\n\n    console.log(\"changeURL:urlCache:after:\",this.urlCache)\n    console.log(\"changeURL:url:\",url)\n  }\n  \n}\n","<div class=\"tal-topbar\">\n    <div class=\"tal-brand\">\n        <h1>TALight Desktop</h1>\n    </div>\n\n    \n    <div class=\"tal-message-box\">\n        <div #messageBox *ngIf=\"!!currentNotification\" class=\"tal-message-box-main tal-message-box-{{currentNotification.type}}\" >\n            <div class=\"tal-message-col\">\n                <i class=\"pi {{iconForNotification()}} tal-message-row tal-message-row-icon\"></i>\n            </div>\n            <div class=\"tal-message-col\">\n                <div class=\"tal-message-row tal-message-row-title\">{{currentNotification.title}}</div>\n                <div class=\"tal-message-row tal-message-row-message\">{{currentNotification.message}}</div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"tal-bar-url\">\n\n        <i #statusDot class=\"pi pi-circle-fill\" pTooltip=\"Status\"></i>\n\n        <p-autoComplete #urlInput class=\"top-bar-url-input p-inputtext-sm\"\n            (placeholder)=\"urlCache\"  [(ngModel)]=\"url\"\n            (change)=\"changeURL($event)\" (onSelect)=\"changeURL($event)\" (onBlur)=\"changeURL($event)\" [suggestions]=\"urlCache\"\n            (completeMethod)=\"filterSuggestions($event)\" [dropdown]=\"true\">\n\n            <ng-template let-url pTemplate=\"item\">\n                <div class=\"url-item\">\n                    <div class=\"url-item-label\">{{url}}</div>\n                    <button pButton icon=\"pi pi-trash\" class=\"tal-square-button\" pTooltip=\"Remove URL\" (click)=\"removeURL(url, $event)\"></button>\n                </div>\n            </ng-template>\n\n        </p-autoComplete>        \n\n        <button pButton icon=\"pi {{changeThemIcon}}\" class=\"tal-square-button\" (click)=\"toggleTheme()\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TopbarWidgetComponent } from './topbar-widget/topbar-widget.component';\n\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ButtonModule } from 'primeng/button';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    TopbarWidgetComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    AutoCompleteModule,\n    InputTextModule,\n    TooltipModule,\n    ButtonModule,\n  ],exports:[\n    TopbarWidgetComponent\n  ]\n})\nexport class TopbarModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["createFs","IndexeddbFsDriver","constructor","databaseVersion","objectStoreName","databaseName","rootDirectoryName","rootDir","fs","options","ready","readFile","fullpath","binary","exists","createDirectory","res","writeFile","content","data","length","readDirectory","scanDirectory_recursive","mount","path","Promise","resolve","unmount","scanDirectory","recursive","rootNode","name","split","reverse","folders","files","console","log","dirContent","key","element","childNode","fullPath","push","directories","delete","remove","FsServiceTest","useDriver","driverName","driver","getDriver","createTestFiles","ProjectType","ProjectList","Array","ProjectEnvironment","load","config","ProjectConfig","activate","deactivate","DIR_PROJECT","CONFIG_NAME","defaultConfig","CONFIG_PATH","configContent","JSON","parse","save","stringify","PyodideMessageType","PyodideDriver","Map","TextEncoder","TextDecoder","worker","Worker","URL","import","meta","url","onmessage","event","didRecieve","response","message","type","requestHandler","requestIndex","get","uid","removeRequest","msgSent","request","msgRecived","resolvePromise","Ready","didReceiveReady","InstallPackages","didReceiveInstallPackages","ExecuteCode","didReceiveExecuteCode","ExecuteFile","didReceiveExecuteFile","StopExecution","didReceiveStopExecution","SubscribeNotify","didReceiveSubscribeNotify","SubscribeState","didReceiveSubscribeState","SubscribeStdout","didReceiveSubscribeStdout","SubscribeStderr","didReceiveSubscribeStderr","SendStdin","didReceiveSendStdin","CreateDirectory","didReceiveCreateDirectory","ReadDirectory","didReceiveReadDirectory","ScanDirectory","didReceiveScanDirectory","WriteFile","didReceiveWriteFile","ReadFile","didReceiveReadFile","Delete","didReceiveDelete","Exists","didReceiveExists","args","contents","toString","result","onNotify","title","msg","kind","onState","state","onStdout","onStderr","pathSent","pathRecived","replacer","value","ArrayBuffer","buffer","Uint8Array","from","node","internal_jsonReplacer","sendMessage","timestamp","Date","now","promiseResolver","resultPromise","reject","set","postMessage","requestUID","Mount","Unmount","installPackages","packages","executeCode","code","executeFile","stopExecution","signal","confirm","window","location","reload","subscribeNotify","enable","undefined","subscribeState","subscribeStdout","subscribeStderr","sendStdin","parent","binDecoder","decode","toArrayBuffer","binEncoder","encode","timestap","getTime","seed","Math","floor","random","PythonCompilerService","registerDriver","createPythonProject","writeConfig","readPythonConfig","DIR_ATTACHMENTS","CREATE_EXAMPLES","DIR_EXAMPLES","i","mainContent","inputExample","freesumExample","sumExample","unshift","RUN","examples","concat","runProject","PIP_PACKAGES","factory","providedIn","PyodideState","NgZone","DemoViewComponent","zone","api","ngOnInit","onApiError","alert","refreshOutput","run","output","apiProblemList","onSuccess","problemList","req","onError","apiGetAttachment","problem_name","onAttachment","onAttachmentInfo","onData","GetAttachment","apiConnect","service","onConnectionBegin","onConnectionStart","onConnectionClose","Connect","cmdConnect","sendBinary","apiConnectOld","setTimeout","tal","isOpen","selectors","decls","vars","consts","template","i0","ctx","FsService","Tar","NotificationType","OutputType","CodeEditorComponent","python","nm","pm","Unknown","EmptyFolder","currentProject","project","createProject","didNotify","didStateChange","didStdout","didStderr","ngAfterViewInit","outputWidget","enableStdin","onUpdateRoot","fsroot","fslist","treeToList","fslistfile","filter","item","filePathList","forEach","problemWidget","print","pyodideState","pyodideStateContent","sendNotification","Error","STDERR","fromAPI","msgs","pop","STDINAPI","STDIN","Stdin","onProblemChanged","selectedProblem","selectedService","onServiceChanged","onAttachments","unpack","idx","folder","file","fileExplorer","refreshRoot","selectFile","selectedFile","execBar","fileEditor","editorDidChange","saveFile","editorDidInput","stopAll","closeConnection","useAPI","clearOutput","mainFile","find","SYSTEM","runConnectAPI","then","problem","exportArgs","tty","token","filePaths","exportFilesPaths","fileArgPath","fileArgName","found","didConnectStart","didConnectBegin","didConnectClose","didConnectData","error","didConnectError","viewQuery","ElementRef","EventEmitter","marked","EditorType","MatchMethod","MatchType","EditorOptions","EditorOptionsMonaco","language","EditorOptionsBrowser","embedded","mime","FileAssociation","pattern","editorType","None","editorOption","priority","matchMethod","Auto","matchType","match","parts","ext","splice","matchAll","associations","matches","association","sort","a","b","FileAssociationChoiceList","items","add","includes","bestMatch","FileEditorWidgetComponent","themeService","Code","Markdown","Archive","Browser","_selectedFile","selectEditor","openEditor","fileAssocList","markdownBox","markdownPreview","nativeElement","innerHTML","monacoOptions","monacoEditor","updateEditorOptions","browserOptions","iframe","browserEditor","header","body","btoa","daraurl","src","shouldHide","monacoEditorDidChange","onChange","emit","QueryList","OverlayPanel","ctx_r10","ctx_r12","ctx_r28","ctx_r31","ctx_r33","ctx_r36","ctx_r38","ctx_r40","ctx_r42","ctx_r56","ctx_r60","ctx_r62","ctx_r64","ctx_r66","FileExplorerWidgetComponent","confirmationService","bindCollapseEvent","onDone","rows","document","getElementsByClassName","classList","contains","row","addEventListener","handleClickEvent","preventDefault","stopPropagation","target","newParent","safeCount","parentElement","toggle","closeAllContextMenus","panels","p","hide","onSelectFile","selectFolder","selectedFolder","openSettings","showHidden","projectFolder","configFile","configPath","toggleHidden","isVisibile","fsitem","isHidden","startsWith","startEditing","editingItem","editingValue","editingItemFolder","editingItemError","nameEditingElement","focus","saveEditing","trim","cancelEditing","editItemChange","existingFile","f","existingFolder","deleteFileClick","icon","accept","deleteFile","currentFolder","deleteFolderClick","deleteFolder","syncFilesystem","addNewItem","newItemValue","newItemFolder","newItemType","newItemError","newItemNameElement","cancelNewItem","saveNewItem","newItemChange","upload","HTMLInputElement","endsWith","arrayBuffer","importProject","tarball","export","pack","tarname","triggerDownload","filename","createElement","blob","Blob","createObjectURL","style","display","download","href","appendChild","click","removeChild","revokeObjectURL","Dropdown","ServiceMenuEntry","descriptor","ProblemMenuEntry","ProblemWidgetComponent","problemSub","onProblemsChanged","subscribe","clear","problemsDidChange","dropdownOptions","appendTo","reloadProblemList","ngOnDestroy","unsubscribe","isLoading","loading","refreshFilePathList","clenupRegex","re","text","replace","cleanupName","RegExp","charAt","toUpperCase","slice","readableRegex","last","argDidFocus","arg","idPanel","idRegex","panel","getElementById","regex","HTMLElement","color","argDidChange","issues","validateArg","default","argDidReset","fileDidFocus","fileDidChange","idDropdown","dropdown","pathExist","fileDidReset","toggleShowRegex","toggleRegexFormat","innerText","selectedArgs","selectedFiles","problemsMenu","servicesMenu","updateProblems","problemDesc","toLowerCase","didSelectProblem","selectProblem","services","serviceDesc","onProblemSelected","didSelectService","selectService","onServiceSelected","apiDownloadAttachment","info"],"sourceRoot":"webpack:///","x_google_ignoreList":[49]}