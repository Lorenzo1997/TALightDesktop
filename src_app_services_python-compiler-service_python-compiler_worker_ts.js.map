{"version":3,"file":"src_app_services_python-compiler-service_python-compiler_worker_ts.js","mappings":"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","sources":["./src/app/services/compiler-service/compiler-service.types.ts","./node_modules/@angular-builders/custom-webpack/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","./src/app/services/python-compiler-service/python-compiler.worker.ts"],"sourcesContent":["\nexport type UID = string; // should I ? \n\nexport type PromiseResolver<T> = (value: T | PromiseLike<T>) => void;\n\nexport type stdCallback = (data:string)=>void;\nexport type stateCallback = (state:CompilerState, content?:string)=>void;\nexport type notifyCallback = (title:string, msg:string, kind:string)=>void;\n\nexport type CompilerMessageHandler = (message:CompilerRequest)=>CompilerResponse;\n\nexport interface CompilerDriver{\n  installPackages(packages: string[]): Promise<string>;\n  executeCode(code: string): Promise<string>;\n  executeFile(fullpath: string): Promise<string>;\n  stopExecution(signal?: number): Promise<boolean>;\n  subscribeNotify(enable?:boolean, onNotify?:(title:string, msg:string, kind:string)=>void ): Promise<boolean>;\n  subscribeState(enable?:boolean, onState?:(state:CompilerState, content?:string)=>void ): Promise<boolean>;\n  subscribeStdout(enable?:boolean, onStdout?:(data:string)=>void): Promise<boolean>;\n  subscribeStderr(enable?:boolean, onStderr?:(data:string)=>void): Promise<boolean>;\n  sendStdin(msg:string): Promise<boolean> ;\n}\n\nexport enum CompilerState {\n  Unknown = 'Unknown',\n  Loading = 'Loading',\n  Ready = 'Ready',\n  Run = 'Run',\n  Stdin = 'Stdin',\n  Success = 'Success',\n  Killed = 'Killed',\n  Error = 'Error',\n}\n\n\nexport enum CompilerMessageType {\n  Ready = 'Ready', // Deprecated -> SubscribeState\n  Mount = 'Mount', //TODO\n  Unmount = 'Unmount', //TODO\n  InstallPackages = 'InstallPackages',\n  ExecuteFile = 'ExecuteFile',\n  ExecuteCode = 'ExecuteCode',\n  StopExecution = 'StopExecution',\n  SubscribeNotify = 'SubscribeNotify',\n  SubscribeState  = 'SubscribeState',\n  SubscribeStdout = 'SubscribeStdout',\n  SubscribeStderr = 'SubscribeStderr',\n  SendStdin = 'SendStdin',\n  CreateDirectory = 'CreateDirectory',\n  WriteFile = 'WriteFile',\n  ReadFile = 'ReadFile',\n  ReadDirectory = 'ReadDirectory',\n  ScanDirectory = 'ScanDirectory',\n  Delete = 'Delete',\n  Exists = 'Exists',\n}\n\n\nexport interface CompilerMessage {\n  uid: UID;\n  type: CompilerMessageType;\n  args: string[];\n  contents: Array<string|ArrayBuffer>;\n}\n\nexport interface CompilerRequest {\n  uid: UID;\n  timestamp: number;\n  message: CompilerMessage;\n}\n\nexport interface CompilerResponse {\n  uid: UID;\n  timestamp: number;\n  success: boolean;\n  message: CompilerMessage;\n  errors: string[];\n}\n\nexport interface CompilerRequestHandler {\n  uid: UID;\n  request: CompilerRequest;\n  resolvePromise: PromiseResolver<any>\n}\n\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/// <reference lib=\"webworker\" />\n// Configs\n\nimport { CompilerMessageHandler, CompilerMessageType, CompilerRequest, CompilerResponse, CompilerState, PromiseResolver } from \"../compiler-service/compiler-service.types\";\n\nimport { FsNodeFolder } from \"../fs-service/fs.service.types\";\n\n\nlet pyodideRoot = \"/\"\nlet pyodideMount = \"/mnt\"\n\n// Bootstrap pyodide\n\n//importScripts(\"https://cdn.jsdelivr.net/pyodide/v0.22.1/full/pyodide.js\");\n\nimportScripts(\"./assets/pyodide/pyodide.js\");\n\ndeclare var loadPyodide: any;\n\n//let worker: PyodideFsWorker;\nasync function main() {\n  let worker = new PyodideWorker(pyodideRoot, pyodideMount);\n}\n\n\n\nclass PyodideWorker{\n  \n  requestQueueNotify = new Map<string,CompilerRequest>();\n  requestQueueState = new Map<string,CompilerRequest>();\n  requestQueueStdout = new Map<string,CompilerRequest>();\n  requestQueueStderr = new Map<string,CompilerRequest>();\n\n  public binEncoder = new TextEncoder(); // always utf-8\n  public binDecoder = new TextDecoder(\"utf-8\");\n\n  pyodide: any;\n  fs: any;\n  loadPyodide: any;\n  micropip: any;\n  root:string;\n  mount:string;\n  isReady = false;\n  readyPromise: Promise<boolean>;\n  readyResolver: PromiseResolver<boolean>;\n  stdinPending=false;\n  stdinResolver?: PromiseResolver<string>;\n  isSync = false;\n  needSync = false;\n  stdinBuffer = new Array<string>();\n  lastState = CompilerState.Unknown\n  lastResult?:any\n  interruptBuffer = new Uint8Array(1);\n  interruptTimer:any\n  \n  constructor(root:string, mount:string ){\n    this.root = root;\n    this.mount = mount;\n\n    this.requestQueueStdout = new Map();\n    this.requestQueueStderr = new Map();\n    \n    //onReady\n    let readyResolver: PromiseResolver<boolean>;\n    this.readyPromise =  new Promise<boolean>((resolve, reject) => {\n      readyResolver = resolve;\n    })\n    this.readyResolver = (value)=>{ readyResolver(value) }\n\n    \n    addEventListener(\"message\", async ( payload:any ) => { this.onData(payload.data) })\n    \n    //Send Init event, but outside the constructor\n    setTimeout(()=>{this.sendState(CompilerState.Loading)})\n\n  \n    this.initPydiode().then(()=>{\n      this.load(this.root, this.mount);\n      this.fs.syncfs(true,()=>{\n        \n        this.interruptBuffer[0]=0\n        this.pyodide.setInterruptBuffer(this.interruptBuffer)\n        this.isReady = true;\n        this.sendState(CompilerState.Ready)\n        this.readyResolver(this.isReady);\n        \n      });\n    }).catch( (error:any)=>{\n      this.sendState(CompilerState.Error, error)\n    });\n\n\n  }\n\n  async initPydiode(){\n    \n    console.log(\"loadPyodide: ...\")\n    \n    let options = {\n      stdin: ()=>{return this.onStdin()},\n      stdout: (msg:string)=>{this.sendStdout(msg)},\n      stderr: (msg:string)=>{this.sendStderr(msg)},\n    }\n\n    //console.log(loadPyodide)\n    this.pyodide = await loadPyodide(options);\n    this.fs = this.pyodide.FS;\n    await this.pyodide.loadPackage([\"micropip\"]);\n    this.micropip = this.pyodide.pyimport(\"micropip\");\n    \n    console.log(\"loadPyodide: done\")\n    //console.log(pyodide)\n\n    this.setCustomHooks()\n  }\n\n  async setCustomHooks(){\n    let oldInput = this.pyodide.globals.input;\n    console.log(\"setCustomHooks:oldInput:\",oldInput)\n\n\n    //Globals: Input\n    let localThis = this;\n    this.pyodide.globals.set('input', async function (prompt?:string) {\n      if (prompt && prompt.trim().length>0){localThis.sendStdout(prompt)}\n\n      localThis.sendState(CompilerState.Stdin)\n      console.log(\"setCustomHooks:scrivo sulla consolle!!!!\")\n      let stdinResolver: PromiseResolver<string>;      \n      let promise =  new Promise<string>((resolve, reject) => {\n        stdinResolver = resolve;\n      })\n      localThis.stdinResolver = (message)=>{ stdinResolver(message) }\n\n      if(localThis.stdinBuffer.length>0){\n        let line = localThis.stdinBuffer.shift()\n        localThis.stdinResolver(line!)\n      }\n\n      return promise;\n    });\n\n    /*\n    let signal = this.pyodide.pyimport(\"signal\");\n    signal.signal(signal.SIGINT, (signal:any, frame:any)=>{  \n      console.log('setCustomHooks:signal:signal:', signal);\n      console.log('setCustomHooks:signal:frame:', frame);\n    })\n    */\n\n\n\n\n  }\n\n  async load(root:string, mount:string)\n  {\n    this.root = root;\n    this.mount = mount;\n    console.log(\"PyodideFsWorker: load\")\n    this.fs.mkdir(this.mount);\n    this.fs.mount(this.fs.filesystems.IDBFS, { root: root }, this.mount);\n    console.log(\"PyodideFsWorker: load: done\")\n\n    \n    console.log(this.fs.mounts)\n    console.log(this.fs.root)\n    console.log(this.fs.root.mount)\n  }\n\n  toString(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return this.binDecoder.decode(data) }\n    return data\n  }\n\n  toArrayBuffer(data:string|ArrayBuffer){\n    if(data instanceof ArrayBuffer) { return data }\n    return this.binEncoder.encode(data)\n  }\n  \n  \n  responseFromRequest(request:CompilerRequest, success:boolean=true, errors:string[]=[]):CompilerResponse{\n    let response:CompilerResponse = {\n      uid: request.uid,\n      timestamp: Date.now(),\n      success: success,\n      errors: errors,\n      message: {\n        uid: request.message.uid,\n        type: request.message.type,\n        args:[],\n        contents:[]\n      }\n    };\n    return response\n  }\n\n  responseError(response:CompilerResponse, error?:string):CompilerResponse{\n    response.success = false;\n    if (error){response.errors.push(error)};\n    return response;\n  }\n\n  syncFS(){\n    if (!this.isSync){\n      this.isSync = true\n      this.needSync = false;\n      console.log('syncFS: do!');\n      this.fs.syncfs((err?:any)=>{\n        if(err){\n          console.log('syncFS: error while syncing, retrying')\n          this.needSync = true;\n        }else{\n          console.log('syncFS: success!');\n        }\n        this.isSync = false;\n        if (this.needSync){\n          this.needSync = false;\n          console.log('syncFS: repeat!');\n          this.syncFS()\n        }\n      })\n    }\n    else{\n      console.log('syncFS: queued');\n      this.needSync = true;\n    }\n  }\n\n  onStdin(){\n    //TOD: unused??\n    // localThis.sendState(CompilerState.Stdin)\n    console.log('PyodideWorker:onStdin:');   \n    if (this.stdinBuffer.length > 0){}\n    let item = this.stdinBuffer.shift()\n    console.log('PyodideWorker:onStdin:', item);\n    return item\n  }\n\n  execCodeAsync(code:string){\n    console.log(\"execCode:\",code)\n    this.interruptBuffer[0]=0\n    this.pyodide.setInterruptBuffer(this.interruptBuffer)\n    this.interruptTimer = setInterval(()=>{\n      try{ this.pyodide.checkInterrupt() }\n      catch( e ){ \n        this.sendStderr(\"Process terminated by user request.\")\n        this.sendState(CompilerState.Killed)\n        throw e;\n      }\n    },10)\n\n\n    /*\n    async pyodide.loadPackagesFromImports(code, options)\n        code (string) – The code to inspect.\n\n        options.checkIntegrity (boolean) – If true, check the integrity of the downloaded packages (default: true)\n\n        options.errorCallback ((message: string) => void) – A callback, called with error/warning messages (optional)\n\n        options.messageCallback ((message: string) => void) – A callback, called with progress messages (optional)\n    */\n    let options = {\n      checkIntegrity: true, //default: true\n      errorCallback: (msg:string)=>{this.sendStderr(msg)},\n      messageCallback: (msg:string)=>{this.sendStdout(msg)},\n    }\n    this.stdinBuffer = []\n    this.pyodide.loadPackagesFromImports(code,options)\n\n\n    \n\n\n\n    this.pyodide.runPythonAsync(code).then( (result:any)=>{\n      console.log(\"execCode: result:\\n\",result)\n      this.sendState(CompilerState.Success, result)\n    }).catch( (error:any)=>{\n      this.handleExecError(error)\n    }).finally(()=>{\n      clearInterval(this.interruptTimer)\n    })\n  }\n\n  \n  handleExecError(error:any){\n    let sys = this.pyodide.pyimport(\"sys\");\n    let errorType = error.type;\n    if (errorType == \"SystemExit\"){\n      let exitCode = sys.last_value.code.toString();\n      if(exitCode == \"0\"){\n        this.sendState(CompilerState.Success)\n      }else{\n        this.sendState(CompilerState.Error, \"Execution terminated with exit code: \" + exitCode)\n      }\n      return;\n    }\n    this.sendState(CompilerState.Error, error.message)\n    //throw error\n    /*\n    let props = Object.getOwnPropertyNames(sys.last_value)\n    let propArgs = Object.getOwnPropertyNames(sys.last_value.args)\n    let propTB = Object.getOwnPropertyNames(sys.last_value.__traceback__)\n\n    let exceptionType = sys.last_type.toJs();\n    let errorValue = sys.last_value.toJs();\n    let errorTraceback = sys.last_traceback.toJs();\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: error.type:\", errorType)\n    console.log(\"execCode: sys.last_type:\", exceptionType)\n    console.log(\"execCode: sys.last_value:\", errorValue)\n    console.log(\"execCode: sys.last_traceback:\", errorTraceback)\n\n    console.log(\"execCode: error.message:\", error.message )\n    */\n    //console.log(\"execCode: sys:\\n\", sys)\n    \n    //throw error;\n  }\n\n\n\n  sendNotify(title: string, msg:string, kind:string=\"\"){\n    console.log(\"sendNotify: \",msg)\n    this.requestQueueNotify.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [title, msg, kind]\n      console.log(\"sendNotify:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendState(state?: CompilerState, content?:any){\n    if(!state){ state = this.lastState } //Resend the same state, used onSubscribe\n    else { this.lastState = state }\n    \n    console.log(\"PyodideWorker:sendState: \",state)\n    this.requestQueueState.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [state ?? CompilerState.Unknown]\n      if(content){\n        response.message.contents.push(content)\n      }\n      console.log(\"sendState:uid:\\n\",response)\n      postMessage(response)\n    })\n  }\n\n  sendStdout(msg:string){\n    console.log(\"sendStdout: \"+msg)\n    this.requestQueueStdout.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStdout:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  sendStderr(msg:string){\n    console.log(\"sendStderr: \"+msg)\n    this.requestQueueStderr.forEach(( request:CompilerRequest, uid:string )=>{\n      let response = this.responseFromRequest(request); \n      response.message.contents = [msg]\n      console.log(\"sendStderr:uid:\\n\",response)//,res)\n      postMessage(response)\n    })\n  }\n\n  onData(request:CompilerRequest) {\n    console.log('PyodideFsWorker:onData:',request);\n    let action: CompilerMessageHandler | null = null;\n\n    switch (request.message.type) {\n      case CompilerMessageType.Ready:\n        this.ready(request);\n        break;\n      case CompilerMessageType.SubscribeNotify:\n        action=(request)=>{return this.subscribeNotify(request)};\n        break;\n      case CompilerMessageType.SubscribeState:\n        action=(request)=>{return this.subscribeState(request)};\n        break;\n      case CompilerMessageType.SubscribeStdout:\n        action=(request)=>{return this.subscribeStdout(request)};\n        break;\n      case CompilerMessageType.SubscribeStderr:\n        action=(request)=>{return this.subscribeStderr(request)};\n        break;\n      case CompilerMessageType.SendStdin:\n        action=(request)=>{return this.sendStdin(request)};\n        break;\n      case CompilerMessageType.InstallPackages:\n        action=(request)=>{return this.installPackages(request)};\n        break;\n      case CompilerMessageType.ExecuteCode:\n        action=(request)=>{return this.executeCode(request)};\n        break;\n      case CompilerMessageType.ExecuteFile:\n        action=(request)=>{return this.executeFile(request)};\n        break;\n      case CompilerMessageType.StopExecution:\n        action=(request)=>{return this.stopExecution(request)};\n        break;\n      case CompilerMessageType.CreateDirectory:\n        action=(request)=>{return this.createDirectory(request)};\n        break;\n      case CompilerMessageType.ReadDirectory:\n        action=(request)=>{return this.readDirectory(request)};\n        break;\n      case CompilerMessageType.WriteFile:\n        action=(request)=>{return this.writeFile(request)};\n        break;\n      case CompilerMessageType.ReadFile:\n        action=(request)=>{return this.readFile(request)};\n        break;\n      case CompilerMessageType.ScanDirectory:\n        action=(request)=>{return this.scanDirectory(request)};\n        break;\n      case CompilerMessageType.Delete:\n        action=(request)=>{return this.delete(request)};\n        break;\n      case CompilerMessageType.Exists:\n        action=(request)=>{return this.exists(request)};\n        break;\n      default: break;\n    }\n    if(action){ \n      let response = action(request);\n      if (response){ postMessage(response) }\n    }\n  }\n\n  ready(request:CompilerRequest){\n    let response = this.responseFromRequest(request);\n    response.message.args = ['true'];\n    if (this.isReady) {\n      postMessage(response);\n    }else{\n      this.readyPromise.then((ready)=>{\n        response.message.args = [ready?'true':'false'];\n        postMessage(response);\n      })\n    }\n  }\n\n  installPackages(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let packages = request.message.args;\n    console.log(\"installPackages:\\n\",packages)//,res)\n    let res = this.micropip.install(packages)\n    this.syncFS()\n    console.log(\"installPackages: DONE!\\n\",res)\n    response.message.contents.push(\"\")//res+\": \"+res)\n    \n    return response;\n  }\n\n  executeCode(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let rawContent = request.message.contents[0];\n    let code;\n    if(rawContent instanceof ArrayBuffer){\n      code = new TextDecoder().decode(rawContent);\n    }else{\n      code = rawContent\n    }\n    console.log(\"executeCode:\\n\",code)//,res)\n    this.execCodeAsync(code)\n\n\n    response.message.contents = [\"true\"]\n    \n    return response;\n  }\n\n  stopExecution(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let wasRunning = this.lastState == CompilerState.Run || this.lastState == CompilerState.Stdin\n    \n    let arg = request.message.args[0] ?? \"2\"\n    let signal = parseInt(arg); // 2 stands for SIGINT.\n    if(isNaN(signal)){signal = 2}\n    console.log(\"stopExecution:\",signal)//,res)\n    setTimeout(()=>{this.interruptBuffer[0] = signal})\n\n    response.message.args = [wasRunning?\"true\":\"false\"]\n    return response\n  }\n\n  executeFile(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let fullpath = request.message.args[0];\n    let path = this.mount +\"/\"+ fullpath\n    console.log(\"executeFile:\",path)//,res)\n    \n    let rawContent = this.fs.readFile(path) as Uint8Array\n    let code = new TextDecoder().decode(rawContent.buffer);\n\n    this.stdinBuffer = []\n    this.execCodeAsync(code)\n\n    response.message.contents = [\"true\"]\n    return response\n  }\n\n  subscribeNotify(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueNotify.set(request.uid, request)\n    } else{\n      this.requestQueueNotify.delete(request.uid)\n    }\n    console.log(\"subscribeNotify:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeState(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueState.set(request.uid, request)\n      setTimeout(()=>{this.sendState(CompilerState.Loading)})\n    } else {\n      this.requestQueueState.delete(request.uid)\n    }\n    console.log(\"subscribeState:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStdout(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStdout.set(request.uid, request)\n    } else{\n      this.requestQueueStdout.delete(request.uid)\n    }\n    console.log(\"subscribeStdout:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  subscribeStderr(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let enable = request.message.args[0] == 'true';\n    if (enable){\n      this.requestQueueStderr.set(request.uid, request)\n    } else{\n      this.requestQueueStderr.delete(request.uid)\n    }\n    console.log(\"subscribeStderr:\\n\", enable)//,res)\n    response.message.args = [enable?'true':'false']\n    return response;\n  }\n\n  sendStdin(request:CompilerRequest){\n    let response = this.responseFromRequest(request); \n    let data = request.message.contents[0];\n    console.log(\"PyodideWorker:sendStdin:\\n\",data)\n    this.sendState(CompilerState.Run)\n    if (this.stdinResolver){\n      this.stdinResolver(this.toString(data))\n      this.stdinResolver=undefined\n    }else{\n      this.stdinBuffer.push(this.toString(data))\n    }\n    response.message.args = ['true']\n    \n    return response;\n  }\n\n  createDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){ \n      return this.responseError(response,\"createDirectory: Requires at least 1 path as argument\");\n    }\n    //TODO: allow for multiple queries;\n    let fullpath = request.message.args[0];\n    if(!this.internal_exists(this.mount + fullpath)){\n      let res = this.fs.mkdir(this.mount + fullpath);\n      console.log('pydiode:mkdir:',res)\n      this.syncFS()\n    }\n    response.message.args = [fullpath];\n    return response;\n  }\n\n  getPath(node:any){\n    //any: https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.getPath\n    let path = this.fs.getPath(node)\n    let pattern =  new RegExp(\"^\"+this.mount); \n    return path.replace(pattern,\"/\").replace(/\\/\\/+/,\"/\");\n  }\n\n  readDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    let curDir = this.scanDirectory_recursive(fullpath)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n\n  scanDirectory(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if ( request.message.args.length < 1 ){\n      return this.responseError(response,\"readDirectory: Requires at least 1 path as argument and 1 content\");\n    }\n    let fullpath = request.message.args[0];\n    console.log(\"scanDirectory: \", fullpath)\n    let curDir = this.scanDirectory_recursive(fullpath, true)\n    response.message.args = [fullpath];\n    response.message.contents = [JSON.stringify(curDir,this.jsonReplacer)]\n    return response;\n  }\n\n  jsonReplacer(key:any,value:any){\n    if (value instanceof ArrayBuffer){\n      let buffer = new Uint8Array(value)\n      return {\n        constructor: value.constructor.name,\n        data: Array.from(buffer),\n        flags: []\n      }\n    }\n    return value\n  }\n\n\n  scanDirectory_recursive(fullpath:string, recursive=false):FsNodeFolder{\n    let res = this.fs.lookupPath(this.mount + fullpath);\n    console.log(\"scanDirectory_recursive: \", res)\n    console.log(\"scanDirectory_recursive:contents: \", res.node.contents);\n    let curDir:FsNodeFolder = {\n      folders: [],\n      files: [],\n      name: res.node.name,\n      path: this.getPath(res.node)\n    };\n\n    for(let name in res.node.contents){\n      let item = res.node.contents[name];\n      let path = this.getPath(item);\n      if (this.fs.isDir(item.mode)){\n        let childDir;\n        if (recursive){\n          childDir = this.scanDirectory_recursive(path, true);\n        }\n        else{\n          childDir = {\n            folders: [],\n            files: [],\n            name: name,\n            path: path\n          }\n        }\n        curDir.folders.push(childDir);\n      }else{\n        let content = this.fs.readFile(this.mount + path)\n        curDir.files.push({\n          name: name,\n          path: path,\n          content: content.buffer\n        })\n      }\n    }\n\n    return curDir;\n  }\n\n  writeFile(request:CompilerRequest):CompilerResponse{\n    \n    let response = this.responseFromRequest(request);\n    let nargs = request.message.args.length;\n    let ncont = request.message.contents.length\n    if ( nargs < 1 || nargs < ncont ){ \n      return this.responseError(response,\"writeFile: Requires at least 1 path as argument and 1 content\");\n    }\n    \n    let fullpath = request.message.args[0];\n    let data = request.message.contents[0];\n    let content;\n    let options = {encoding: \"binary\"}\n    if (data instanceof ArrayBuffer){\n      content = new Uint8Array(data)\n      options.encoding = \"utf8\"\n    }else{\n      content = data\n    }\n\n    console.log(\"writeFile: \", fullpath)\n    console.log(\"writeFile:content: \", content)\n    let res = this.fs.writeFile(this.mount + fullpath, content, options);\n    console.log(\"writeFile:res: \", res)\n    this.syncFS()\n    return response;\n  }\n\n  readFile(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request);\n    if ( request.message.args.length < 1){ \n      return this.responseError(response,\"readFile: Requires at least 1 path as argument\");\n    }\n     \n    let fullpath = request.message.args[0];\n\n    let opts:{} = { encoding: 'utf8' }\n    if (request.message.args.length == 2 && request.message.args[1] == 'binary' ){\n      opts = {encoding: 'binary'} \n    }\n\n    console.log(\"readFile: \", fullpath)\n    let content = this.fs.readFile(this.mount + fullpath, opts);\n    console.log('readFile:content:\\n', content.length)\n    if(content instanceof Uint8Array){\n      console.log('readFile:content: BUFFER',content)\n      response.message.contents = [content.buffer];\n    }\n    else{\n      console.log('readFile:content: STRING')\n      response.message.contents = [content];\n    }\n    return response;\n  }\n\n  delete(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n\n    \n    let fullpath = request.message.args[0];\n    console.log(\"delete: \", fullpath)\n    //TODO: use lookupPath and isDir/isFile\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.lookupPath\n    //TODO: do it recursive\n    try{this.fs.rmdir(this.mount + fullpath)}catch(_){}\n    try{this.fs.unlink(this.mount + fullpath)}catch(_){}\n    this.syncFS()\n    response.message.args = [\"true\"]\n    return response;\n  }\n\n  exists(request:CompilerRequest):CompilerResponse{\n    let response = this.responseFromRequest(request); \n    if (request.message.args.length < 1){\n      response.message.args = [\"false\"]\n      return response;  \n    }\n    let fullpath = request.message.args[0];\n    console.log(\"exists: \", this.mount + fullpath)\n    // https://emscripten.org/docs/api_reference/Filesystem-API.html#FS.analyzePath\n    let exists = this.internal_exists(this.mount + fullpath)\n    console.log(\"exists:\", exists)\n    response.message.args = [exists?'true':'false']\n    return response;\n  }\n\n  internal_exists(path:string){\n    console.log(\"internal_file_exists:internal_exists\", path)\n    let res = this.fs.analyzePath(path)\n    console.log(\"internal_file_exists:analyzePath\", res)\n    return res[\"exists\"]\n  }\n}\n  \n\n\n\nmain()\n"],"names":["CompilerMessageType","CompilerState","pyodideRoot","pyodideMount","importScripts","main","worker","PyodideWorker","constructor","root","mount","Map","TextEncoder","TextDecoder","Array","Unknown","Uint8Array","requestQueueStdout","requestQueueStderr","readyResolver","readyPromise","Promise","resolve","reject","value","addEventListener","payload","onData","data","setTimeout","sendState","Loading","initPydiode","then","load","fs","syncfs","interruptBuffer","pyodide","setInterruptBuffer","isReady","Ready","catch","error","Error","console","log","options","stdin","onStdin","stdout","msg","sendStdout","stderr","sendStderr","loadPyodide","FS","loadPackage","micropip","pyimport","setCustomHooks","oldInput","globals","input","localThis","set","prompt","trim","length","Stdin","stdinResolver","promise","message","stdinBuffer","line","shift","mkdir","filesystems","IDBFS","mounts","toString","ArrayBuffer","binDecoder","decode","toArrayBuffer","binEncoder","encode","responseFromRequest","request","success","errors","response","uid","timestamp","Date","now","type","args","contents","responseError","push","syncFS","isSync","needSync","err","item","execCodeAsync","code","interruptTimer","setInterval","checkInterrupt","e","Killed","checkIntegrity","errorCallback","messageCallback","loadPackagesFromImports","runPythonAsync","result","Success","handleExecError","finally","clearInterval","sys","errorType","exitCode","last_value","sendNotify","title","kind","requestQueueNotify","forEach","postMessage","state","content","lastState","requestQueueState","action","ready","SubscribeNotify","subscribeNotify","SubscribeState","subscribeState","SubscribeStdout","subscribeStdout","SubscribeStderr","subscribeStderr","SendStdin","sendStdin","InstallPackages","installPackages","ExecuteCode","executeCode","ExecuteFile","executeFile","StopExecution","stopExecution","CreateDirectory","createDirectory","ReadDirectory","readDirectory","WriteFile","writeFile","ReadFile","readFile","ScanDirectory","scanDirectory","Delete","delete","Exists","exists","packages","res","install","rawContent","wasRunning","Run","arg","signal","parseInt","isNaN","fullpath","path","buffer","enable","undefined","internal_exists","getPath","node","pattern","RegExp","replace","curDir","scanDirectory_recursive","JSON","stringify","jsonReplacer","key","name","from","flags","recursive","lookupPath","folders","files","isDir","mode","childDir","nargs","ncont","encoding","opts","rmdir","_","unlink","analyzePath"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4,5]}